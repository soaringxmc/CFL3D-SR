Index: README
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/README,v
retrieving revision 1.11
retrieving revision 1.8
diff -r1.11 -r1.8
7c7
< not as up to date or complete as the web site.
---
> not as up to date or complete as the web site
Index: build/Install
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/build/Install,v
retrieving revision 1.34
retrieving revision 1.30
diff -r1.34 -r1.30
4c4
< #     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> #     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
767c767
<   CFLAG=""
---
>   CFLAG="-r8"
770,771c770,771
<   LFLAG="-z muldefs -static"                                  
<   LLIB=""
---
>   LFLAG="-static"                                                               
>   LLIB="-lsvml -lPEPCF90"
777c777
<   CC="mpicc"
---
>   CC="gcc"
799c799
< #   FTN="ifort"
---
> #   FTN="ifc"
808,809c808,809
<      CFLAG=""
<      FFLAG="-O3 -w -ip -fno-alias -xP"
---
>      CFLAG="-r8"
>      FFLAG="-O2 -w -ip"
811,812c811,812
<      LFLAG="-z muldefs -static -xP"
<      LLIB=""
---
>      LFLAG="-static"
>      LLIB="-lsvml -lPEPCF90"
818,821c818
<      CC="mpicc"
< # Alternate Intel compiler you may need if mpicc doesn't
< # work (e.g. you don't have mpi installed):
< #     CC="icc"
---
>      CC="gcc"
835c832
< #    FTN="ifort"
---
> #    FTN="ifc"
1104c1101
<    echo 'to change this: e.g. ifort, pgf90, etc.'
---
>    echo 'to change this: e.g. ifc, pgf90, etc.'
Index: build/cfl/mpi/makefile
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/build/cfl/mpi/makefile,v
retrieving revision 1.5
retrieving revision 1.4
diff -r1.5 -r1.4
1c1
< #     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> #     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
43,44c43
< 	umalloc.F      reass.F        qoutavg.F      plot3davg.F \
<         qout_coarse.F  qout_2d.F      plot3d_2d.F    plot3d_coarse.F
---
> 	umalloc.F      reass.F
Index: build/cfl/mpi/makefile_cpp
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/build/cfl/mpi/makefile_cpp,v
retrieving revision 1.5
retrieving revision 1.4
diff -r1.5 -r1.4
1c1
< #     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> #     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
50,51c50
< 	umalloc.f      reass.f        qoutavg.f      plot3davg.f \
<         qout_coarse.f  qout_2d.f      plot3d_2d.f    plot3d_coarse.f
---
> 	umalloc.f      reass.f
Index: build/cfl/seq/makefile
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/build/cfl/seq/makefile,v
retrieving revision 1.5
retrieving revision 1.4
diff -r1.5 -r1.4
1c1
< #     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> #     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
43,44c43
< 	umalloc.F      reass.F        qoutavg.F      plot3davg.F \
<         qout_coarse.F  qout_2d.F      plot3d_2d.F    plot3d_coarse.F
---
> 	umalloc.F      reass.F
Index: build/cfl/seq/makefile_cpp
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/build/cfl/seq/makefile_cpp,v
retrieving revision 1.5
retrieving revision 1.4
diff -r1.5 -r1.4
1c1
< #     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> #     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
50,51c50
< 	umalloc.f      reass.f        qoutavg.f      plot3davg.f \
<         qout_coarse.f  qout_2d.f      plot3d_2d.f    plot3d_coarse.f
---
> 	umalloc.f      reass.f
Index: build/cflcmplx/libs/makefile
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/build/cflcmplx/libs/makefile,v
retrieving revision 1.10
retrieving revision 1.9
diff -r1.10 -r1.9
1c1
< #     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> #     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
97,98c97
< 	resnonin.F     my_flush.F     bc2016.F       gfluxv1.F \
< 	hfluxv1.F      ffluxv1.F      sijrate2d.F
---
> 	resnonin.F     my_flush.F     bc2016.F
Index: build/cflcmplx/libs/makefile_cpp
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/build/cflcmplx/libs/makefile_cpp,v
retrieving revision 1.11
retrieving revision 1.10
diff -r1.11 -r1.10
1c1
< #     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> #     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
104,105c104
<         resnonin.f     my_flush.f     bc2016.f       gfluxv1.f \
<         hfluxv1.f      ffluxv1.f      sijrate2d.f
---
> 	resnonin.f     my_flush.f     bc2016.f
Index: build/cflcmplx/mpi/makefile
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/build/cflcmplx/mpi/makefile,v
retrieving revision 1.5
retrieving revision 1.3
diff -r1.5 -r1.3
1c1
< #     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> #     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
43,44c43
< 	umalloc.F      reass.F        qoutavg.F      plot3davg.F \
<         qout_coarse.F  qout_2d.F      plot3d_2d.F    plot3d_coarse.F
---
> 	umalloc.F
Index: build/cflcmplx/mpi/makefile_cpp
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/build/cflcmplx/mpi/makefile_cpp,v
retrieving revision 1.5
retrieving revision 1.3
diff -r1.5 -r1.3
1c1
< #     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> #     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
50,51c50
<         umalloc.f      reass.f        qoutavg.f      plot3davg.f \
<         qout_coarse.f  qout_2d.f      plot3d_2d.f    plot3d_coarse.f
---
> 	umalloc.f
Index: build/cflcmplx/seq/makefile
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/build/cflcmplx/seq/makefile,v
retrieving revision 1.5
retrieving revision 1.3
diff -r1.5 -r1.3
1c1
< #     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> #     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
43,44c43
< 	umalloc.F      reass.F        qoutavg.F      plot3davg.F \
<         qout_coarse.F  qout_2d.F      plot3d_2d.F    plot3d_coarse.F
---
> 	umalloc.F
Index: build/cflcmplx/seq/makefile_cpp
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/build/cflcmplx/seq/makefile_cpp,v
retrieving revision 1.5
retrieving revision 1.3
diff -r1.5 -r1.3
1c1
< #     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> #     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
50,51c50
<         umalloc.f      reass.f        qoutavg.f      plot3davg.f \
<         qout_coarse.f  qout_2d.f      plot3d_2d.f    plot3d_coarse.f
---
> 	umalloc.f
Index: build/tools/seq/makefile
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/build/tools/seq/makefile,v
retrieving revision 1.9
retrieving revision 1.7
diff -r1.9 -r1.7
1c1
< #     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> #     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
15d14
< 	ln -s $(TOOLSSRC)/*.F90 .
76d74
< SOURCE17 = v6_ronnie_mod.F90
94d91
< OBJECT17 = $(SOURCE17:.F90=.o)
128,129d124
< $(OBJECT17):
< 	$(FTN) $(CPPOPT) $(FFLAG) -c $*.F90
148d142
< EXEC17 = v6_ronnie_mod
198,200d191
< $(EXEC17): $(SOURCE17)  $(OBJECT17) $(LIBS)
< 	$(FTN) $(CPPOPT) $(LFLAG) -o $(EXEC17) $(OBJECT17) $(LIBS) $(LLIBS)
< 
203c194
<          $(EXEC15) $(EXEC16) $(EXEC17)
---
>          $(EXEC15) $(EXEC16)
227d217
< 	@ echo "                      $(DIR)/$(EXEC17)                        "
248c238
<          $(EXEC15) $(EXEC16) $(EXEC17)
---
>          $(EXEC15) $(EXEC16)
252c242
< 	-rm -f *.f *.F
---
> 	-rm -f *.f
256c246
< 	-rm -f *.F *.F90
---
> 	-rm -f *.F
Index: build/tools/seq/makefile_cpp
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/build/tools/seq/makefile_cpp,v
retrieving revision 1.10
retrieving revision 1.8
diff -r1.10 -r1.8
1c1
< #     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> #     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
15d14
< 	ln -s $(TOOLSSRC)/*.F90 .
83d81
< SOURCE17 = v6_ronnie_mod.f90
101d98
< OBJECT17 = $(SOURCE17:.f90=.o)
135,136d131
< $(OBJECT17):
< 	$(FTN) $(CPPOPT) $(FFLAG) -c $*.f90
202,203d196
< $(EXEC17): $(SOURCE17)  $(OBJECT17) $(LIBS)
< 	$(FTN) $(LFLAG) -o $(EXEC17) $(OBJECT17) $(LIBS) $(LLIBS)
207c200
<          $(EXEC15) $(EXEC16) $(EXEC17)
---
>          $(EXEC15) $(EXEC16)
231d223
< 	@ echo "                      $(DIR)/$(EXEC17)                        "
256c248
< 	-rm -f *.f *.f90
---
> 	-rm -f *.f
260c252
< 	-rm -f *.F *.F90
---
> 	-rm -f *.F
Index: header/mag1.h
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/header/mag1.h,v
retrieving revision 1.6
retrieving revision 1.5
diff -r1.6 -r1.5
1,2c1,2
<       parameter(mdim=14,jdim=300,kdim=300,ldim=2,mhldim=10,
<      .          ibdim=2000,idim=8000,ndim=300,ipmax=28,
---
>       parameter(mdim=14,jdim=121,kdim=45,ldim=2,mhldim=2,
>      .          ibdim=2000,idim=8000,ndim=200,ipmax=28,
11c11
< c     mhldim..............max number of holes/outer boundaries (per grid)   
---
> c     mholdim.............max number of holes/outer boundaries (per grid)   
Index: source/cfl3d/dist/cfl3d.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/dist/cfl3d.F,v
retrieving revision 1.10
retrieving revision 1.8
diff -r1.10 -r1.8
6c6
<      .                 bou,nou,grid,n_clcd,nblocks_clcd,blocks_clcd)
---
>      .                 bou,nou,grid)
8c8
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
100d99
<       allocatable :: clcd(:,:,:)
367,370d365
<       integer n_clcd, nblocks_clcd
<       integer, dimension(2,n_clcd) :: blocks_clcd
< 
<       common /ginfo2/ lq2avg,iskip_blocks,inc_2d(3),inc_coarse(3)
373c368
<      .                 nsprgit,ndgrd,ndwrt
---
>      .                 nsprgit
488,490d482
<       allocate( clcd(2,n_clcd,ncycmax),stat=stats )
<       call umalloc(2*n_clcd*ncycmax,0,'clcd',memuse,stats)
<       clcd(1,:,:) = 1.e100
1059,1060c1051
<      .          cdpw,cdvw,cxw,cyw,czw,cmxw,cmyw,cmzw,n_clcd,
<      .          clcd,nblocks_clcd,blocks_clcd,chdw,
---
>      .          cdpw,cdvw,cxw,cyw,czw,cmxw,cmyw,cmzw,chdw,
1225d1215
<          deallocate(clcd)
Index: source/cfl3d/dist/forceout.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/dist/forceout.F,v
retrieving revision 1.3
retrieving revision 1.2
diff -r1.3 -r1.2
9c9
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
297,300c297,300
<   603 format(/9x,4hCL-b,14x,4hCD-b,14x,5hCDp-b,13x,5hCDv-b)
<   604 format(9x,4hCZ-b,14x,4hCY-b,14x,
<      .       4hCX-b,10x,11hwetted area)
<   605 format(9x,5hCMY-b,13x,5hCMX-b,13x,5hCMZ-b)
---
>   603 format(/6x,4hCL-b,9x,4hCD-b,9x,5hCDp-b,8x,5hCDv-b)
>   604 format(6x,4hCZ-b,9x,4hCY-b,9x,
>      .       4hCX-b,5x,11hwetted area)
>   605 format(6x,5hCMY-b,8x,5hCMX-b,8x,5hCMZ-b)
302,304c302,304
<   703 format(/10x,2hCL,16x,2hCD,15x,3hCDp,15x,3hCDv)
<   704 format(10x,2hCZ,16x,2hCY,15x,2hCX,12x,11hwetted area)
<   705 format(10x,3hCMY,14x,3hCMX,15x,3hCMZ)
---
>   703 format(/7x,2hCL,11x,2hCD,10x,3hCDp,10x,3hCDv)
>   704 format(7x,2hCZ,11x,2hCY,10x,2hCX,7x,11hwetted area)
>   705 format(7x,3hCMY,9x,3hCMX,10x,3hCMZ)
308c308
<   653 format(1x,e18.11,4(1x,e18.11))
---
>   653 format(1x,e12.5,4(1x,e12.5))
Index: source/cfl3d/dist/main.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/dist/main.F,v
retrieving revision 1.15
retrieving revision 1.14
diff -r1.15 -r1.14
3c3
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
156,160d155
< c           101.....movie_coarse.g                     
< c           92......movie_coarse.q                      
< c           93......movie_2d.g                          
< c           94......movie_2d.q                          
< c           95......cfl3d_avg_ruvwp2_pert.p3d                
163,165d157
< c           96......cfl3d_avgg_ruvwp.p3d                      
< c           97......cfl3d_avg_ruvwp.p3d                      
< c           98......cfl3d_avg_ruvwp2.p3d                     
167d158
< c           102.....clcd.bin
302,303d292
<       character*241 string
<       integer outdir_index
308,309d296
<       character*241 avgq2,avgq2pert,movcrsg,movcrsq,mov2dg,mov2dq,
<      $     clcds,clcdp,output_dir
314,315d300
<       integer n_clcd, nblocks_clcd
<       integer, allocatable, dimension(:,:) :: blocks_clcd
317c302
<       dimension itrnsfr(29),titlw(20),nou(nbuf)
---
>       dimension itrnsfr(27),titlw(20),nou(nbuf)
319,321d303
<       common /ginfo2/ lq2avg,iskip_blocks,inc_2d(3),inc_coarse(3)
<       common /avgdata/ xnumavg,iteravg,xnumavg2,ipertavg,iclcd
<       common /moov/movie,nframes,icall1,lhdr,icoarsemovie,i2dmovie
327d308
<       common /filenam2/ avgq2,avgq2pert,clcds,clcdp,output_dir
468,474c449
<       read(iunit5,'(a240)') string
<       outdir_index = index(string, '!/', .false.) + 1
<       if( outdir_index > 1 ) then
<          output_dir = string(outdir_index:len_trim(string))
<       else
<          output_dir = '.'
<       end if
---
>       read(iunit5,*)
500a476,484
>       if (icgns .ne. 1) then
>       open(unit=1,file=grid,form='unformatted',status='old')
>       open(unit=2,file=restrt,form='unformatted',status='unknown')
>       else
>       write(iunit5,'(/,'' icgns=1.  Therefore, restart filename:'',/,
>      . 6x,a60,/,'' is not used.  All restart info is written to cgns'',
>      . '' file:'',/,6x,a60,/,'' (where grid is also located)'')') 
>      . restrt,grid
>       end if
501a486,488
>       open(unit=12,file=residual,form='formatted',status='unknown')
>       open(unit=13,file=turbres,form='formatted',status='unknown')
>       open(unit=14,file=blomx,form='formatted',status='unknown')
502a490,501
>       open(unit=20,file=pplunge,form='formatted',status='unknown')
>       open(unit=21,file=ovrlap,form='unformatted',status='unknown')
>       open(unit=22,file=patch,form='unformatted',status='unknown')
> c
> c     the following file names are not set from the input deck
> c     NOTE: unit 26 is reserved for boundary condition data files, 
> c     the name(s) of which are read in via the input deck
> c
>       subres    = 'cfl3d.subit_res'
>       subtur    = 'cfl3d.subit_turres'
>       grdmov    = 'cfl3d.dynamic_patch'
>       alphahist = 'cfl3d.alpha'
504a504,518
>       aeinp     = 'aesurf.dat'
>       aeout     = 'genforce.dat'
>       sdhist    = 'cfl3d.sd_res'
>       avgg      = 'cfl3d_avgg.p3d'
>       avgq      = 'cfl3d_avgq.p3d'
> c
>       open(unit=23,file=subres,form='formatted',status='unknown')
>       open(unit=24,file=subtur,form='formatted',status='unknown')
>       open(unit=25,file=grdmov,form='formatted',status='unknown')
>       open(unit=27,file=alphahist,form='formatted',status='unknown')
>       open(unit=33,file=aeinp,form='formatted',status='unknown')
>       open(unit=34,file=aeout,form='formatted',status='unknown')
> #   ifdef CMPLX
>       open(unit=35,file=sdhist,form='formatted',status='unknown')
> #   endif
505a520,521
>       open(unit=96,file=avgg,form='unformatted',status='unknown')
>       open(unit=97,file=avgq,form='unformatted',status='unknown')
506a523,531
> #   ifdef CGNS
>       open(unit=901,file='cgnsinfo.out',form='formatted',
>      .  status='unknown')
> #   endif
> c
>       rewind( 1)
>       rewind( 2)
>       rewind( 3)
>       rewind( 4)
507a533,535
>       rewind(12)
>       rewind(13)
>       rewind(14)
508a537,546
>       rewind(17)
>       rewind(20)
>       rewind(21)
>       rewind(22)
>       rewind(23)
>       rewind(24)
>       rewind(25)
>       rewind(27)
>       rewind(33)
>       rewind(34)
511,519d548
< 
<       if (icgns .ne. 1) then
<       open(unit=1,file=grid,form='unformatted',status='old')
<       open(unit=2,file=restrt,form='unformatted',status='unknown')
<       end if
<       open(unit=20,file=pplunge,form='formatted',status='unknown')
<       open(unit=21,file=ovrlap,form='unformatted',status='unknown')
<       open(unit=22,file=patch,form='unformatted',status='unknown')
< 
566,732d594
< c
< c
< 
<       open(unit=12,file=residual,form='formatted',status='unknown')
<       open(unit=13,file=turbres,form='formatted',status='unknown')
<       open(unit=14,file=blomx,form='formatted',status='unknown')
< c
< c     the following file names are not set from the input deck
< c     NOTE: unit 26 is reserved for boundary condition data files, 
< c     the name(s) of which are read in via the input deck
< c
<       subres    = 'cfl3d.subit_res'
<       subtur    = 'cfl3d.subit_turres'
<       grdmov    = 'cfl3d.dynamic_patch'
<       alphahist = 'cfl3d.alpha'
<       aeinp     = 'aesurf.dat'
<       aeout     = 'genforce.dat'
<       sdhist    = 'cfl3d.sd_res'
< 
<       if (ipertavg == 0) then
<          avgg      = 'cfl3d_avgg.p3d'
<          avgq      = 'cfl3d_avgq.p3d'
<       else
<          avgg      = 'cfl3d_avgg_ruvwp.p3d' 
<          avgq      = 'cfl3d_avg_ruvwp.p3d' 
<       end if
< 
<       avgq2     = 'cfl3d_avg_ruvwp2.p3d'                             
<       avgq2pert = 'cfl3d_avg_ruvwp2_pert.p3d'                        
<       movcrsg   = 'movie_coarse.g'                              
<       movcrsq   = 'movie_coarse.q'                              
<       mov2dg    = 'movie_2d.g'                                  
<       mov2dq    = 'movie_2d.q'                                  
<       clcds     = 'clcd.bin'                                  
<       clcdp     = 'ClCd_'
< c
<       subres =
<      $     output_dir(1:len_trim(output_dir)) // "/" // subres
<       subtur =
<      $     output_dir(1:len_trim(output_dir)) // "/" // subtur
< 
<       movcrsg =
<      $     output_dir(1:len_trim(output_dir)) // "/" // movcrsg
<       movcrsq =
<      $     output_dir(1:len_trim(output_dir)) // "/" // movcrsq
< 
<       mov2dg =
<      $     output_dir(1:len_trim(output_dir)) // "/" // mov2dg
<       mov2dg =
<      $     output_dir(1:len_trim(output_dir)) // "/" // mov2dq
< 
<       avgq2pert =
<      $     output_dir(1:len_trim(output_dir)) // "/" // avgq2pert
<       avgq2 =
<      $     output_dir(1:len_trim(output_dir)) // "/" // avgq2
< 
<       clcds =
<      $     output_dir(1:len_trim(output_dir)) // "/" // clcds
<       clcdp =
<      $     output_dir(1:len_trim(output_dir)) // "/" // clcdp
< 
<       avgg = 
<      $     output_dir(1:len_trim(output_dir)) // "/" // avgg
<       avgq =
<      $     output_dir(1:len_trim(output_dir)) // "/" // avgq
< 
<       open(unit=23,file=subres,form='formatted',status='unknown')
<       open(unit=24,file=subtur,form='formatted',status='unknown')
<       open(unit=25,file=grdmov,form='formatted',status='unknown')
<       open(unit=27,file=alphahist,form='formatted',status='unknown')
<       open(unit=33,file=aeinp,form='formatted',status='unknown')
<       open(unit=34,file=aeout,form='formatted',status='unknown')
< #   ifdef CMPLX
<       open(unit=35,file=sdhist,form='formatted',status='unknown')
< #   endif
< 
<       inc_2d(:) = 0
<       inc_coarse(:) = 0
<       if( icoarsemovie .ne. 0 .or. i2dmovie .ne. 0 ) then
<          open(unit=110,file="coarse_movie.inp", 
<      .        form='formatted',status='old')
<          read(110,*)            ! inc_2d ... kinc_2d
<          read(110,*) inc_2d
<          read(110,*) ! inc_coarse
<          read(110,*) inc_coarse
<          close(110)
<          if( icoarsemovie .ne. 0 ) then
<             open(unit=101,file=movcrsg,form='unformatted', 
<      .           status='unknown') 
<             open(unit=92,file=movcrsq,form='unformatted', 
<      .           status='unknown') 
<          end if
<          if( i2dmovie .ne. 0 ) then
<             open(unit=93,file=mov2dg,form='unformatted', 
<      .           status='unknown') 
<             open(unit=94,file=mov2dq,form='unformatted', 
<      .           status='unknown') 
<          end if
<       end if
<       if (ipertavg .eq. 1 .or. ipertavg .eq. 2) then
<          open(unit=95,file=avgq2pert,form='unformatted', 
<      .        status='unknown') 
<          open(unit=98,file=avgq2,form='unformatted',status='unknown')
<       end if
<       if( iteravg .eq. 1 .or. iteravg .eq. 2) then
<          open(unit=96,file=avgg,form='unformatted',status='unknown')
<          open(unit=97,file=avgq,form='unformatted',status='unknown')
<       end if
< 
<       nblocks_clcd = 0
<       n_clcd = 0
<       if (iclcd .eq. 1 .or. iclcd .eq. 2) then
<          open(unit=110,file="clcd.inp",form='formatted',status='old')
<          read(110,*) ! Number of unique Cl calculations
<          read(110,*) n_clcd
<          nblocks_clcd = 0
<          allocate(blocks_clcd(2,1000))
<          blocks_clcd(:,:) = 0
<          read(110,*)            ! Cl calc #, block #
<  998     read(110,'(I2,I4)',end=1999,err=1999) 
<      .        blocks_clcd(:,nblocks_clcd+1)
<          if( blocks_clcd(1,nblocks_clcd+1) > 0 .and.  
<      .        blocks_clcd(1,nblocks_clcd+1) <= n_clcd .and.  
<      .        blocks_clcd(2,nblocks_clcd+1) > 0 ) then
<             write(11,*) 'ClCd Calculation Data ',
<      $           blocks_clcd(:,nblocks_clcd+1)
<             nblocks_clcd = nblocks_clcd + 1
<          end if
<          if( nblocks_clcd .ge. 999 ) then
<             write(*,*) 'Too many entries in clcd.inp '
<             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
<          end if
<          goto 998
< 
<  1999    continue
<          close(110)
< 
<          open(unit=102,file=clcds,form='unformatted',
<      .        status='unknown')
<          rewind(102)
<       end if
< 
< 
< #   ifdef CGNS
<       open(unit=901,file='cgnsinfo.out',form='formatted',
<      .  status='unknown')
< #   endif
< c
<       rewind( 1)
<       rewind( 2)
<       rewind( 3)
<       rewind( 4)
<       rewind(12)
<       rewind(13)
<       rewind(14)
<       rewind(17)
<       rewind(20)
<       rewind(21)
<       rewind(22)
<       rewind(23)
<       rewind(24)
<       rewind(25)
<       rewind(27)
<       rewind(33)
<       rewind(34)
< c
< c
763,764d624
<       itrnsfr(28) = n_clcd
<       itrnsfr(29) = nblocks_clcd
768c628
<          call MPI_Send (itrnsfr, 29, MPI_INTEGER, inode,
---
>          call MPI_Send (itrnsfr, 27, MPI_INTEGER, inode,
775c635
<       call MPI_Recv (itrnsfr, 29, MPI_INTEGER, myhost,
---
>       call MPI_Recv (itrnsfr, 27, MPI_INTEGER, myhost,
805,820c665
<       n_clcd   = itrnsfr(28)
<       nblocks_clcd = itrnsfr(29)
<       end if
< 
<       call mpi_bcast(inc_2d, 3, MPI_INTEGER, myhost, mycomm, ierr)
<       call mpi_bcast(inc_coarse, 3, MPI_INTEGER, myhost, mycomm, ierr)
< 
<       call mpi_bcast(iclcd, 1, MPI_INTEGER, myhost, mycomm, ierr)
< 
<       if (iclcd .eq. 1 .or. iclcd .eq. 2) then
<          if (myid .ne. myhost) then
<             allocate(blocks_clcd(2,nblocks_clcd))
<             blocks_clcd(:,:) = 0
<          end if
<          call mpi_bcast(blocks_clcd, 2*nblocks_clcd, MPI_INTEGER,
<      $        myhost, mycomm, ierr)
---
> c
822d666
< 
824c668
< 
---
> c
840c684
<      .           grid,n_clcd,nblocks_clcd,blocks_clcd)
---
>      .           grid)
865,868d708
<       if (allocated(blocks_clcd)) then
<          deallocate(blocks_clcd)
<       end if
< 
Index: source/cfl3d/dist/mgbl.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/dist/mgbl.F,v
retrieving revision 1.24
retrieving revision 1.17
diff -r1.24 -r1.17
23,24c23
<      .                cdpw,cdvw,cxw,cyw,czw,cmxw,cmyw,cmzw,
<      .                n_clcd,clcd,nblocks_clcd,blocks_clcd,chdw,
---
>      .                cdpw,cdvw,cxw,cyw,czw,cmxw,cmyw,cmzw,chdw,
55c54
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
166d164
<       integer blocks_clcd
171d168
<      .          clcd(2,n_clcd,ncycmax), blocks_clcd(2,nblocks_clcd),
244,245c241,242
<       common /unst/ time,cfltau,ntstep,ita,iunst,cfltau0,cfltauMax
<       common /moov/movie,nframes,icall1,lhdr,icoarsemovie,i2dmovie
---
>       common /unst/ time,cfltau,ntstep,ita,iunst
>       common /moov/ movie,nframes,icall1,lhdr
299c296
< c     initialize radtodeg
---
> c     initialize some constants
325c322
<      .   3x,2(2h *),/2(2h *),18x,33hRelease Date:   MM, DD, 2007.,
---
>      .   3x,2(2h *),/2(2h *),18x,33hRelease Date:       MMM DD, YYYY.,
619,620c616
<      .           cmzw,n_clcd,clcd,nblocks_clcd,blocks_clcd,
<      .           chdw,swetw,fmdotw,cfttotw,cftmomw,cftpw,
---
>      .           cmzw,chdw,swetw,fmdotw,cfttotw,cftmomw,cftpw,
635c631
<      .           jskmax,kskmax,ue,irdrea,nbli)
---
>      .           jskmax,kskmax,ue,irdrea)
740,741c736
<      .              cmyw,cmzw,n_clcd,clcd,nblocks_clcd,blocks_clcd,
<      .              chdw,swetw,fmdotw,cfttotw,cftmomw,
---
>      .              cmyw,cmzw,chdw,swetw,fmdotw,cfttotw,cftmomw,
971,972c966
<      .             cmxw,cmyw,cmzw,n_clcd,clcd,nblocks_clcd,blocks_clcd,
<      .             chdw,swetw,fmdotw,cfttotw,
---
>      .             cmxw,cmyw,cmzw,chdw,swetw,fmdotw,cfttotw,
Index: source/cfl3d/dist/mgblk.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/dist/mgblk.F,v
retrieving revision 1.32
retrieving revision 1.21
diff -r1.32 -r1.21
16,17c16
<      .                 cmyw,cmzw,n_clcd,clcd,nblocks_clcd,blocks_clcd,
<      $                 chdw,swetw,fmdotw,cfttotw,cftmomw,
---
>      .                 cmyw,cmzw,chdw,swetw,fmdotw,cfttotw,cftmomw,
54c53
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
95d93
<       character*241 avgq2,avgq2pert,clcds,clcdp,output_dir
165d162
<       integer blocks_clcd
169d165
<      .          clcd(2,n_clcd,ncycmax), blocks_clcd(2,nblocks_clcd),
236d231
<       dimension idimt(maxbl),jdimt(maxbl),kdimt(maxbl)
252,253c247
<       common /ginfo2/ lq2avg,iskip_blocks,inc_2d(3),inc_coarse(3)
<       common /avgdata/ xnumavg,iteravg,xnumavg2,ipertavg,iclcd
---
>       common /avgdata/ xnumavg,iteravg
261c255
<       common /unst/ time,cfltau,ntstep,ita,iunst,cfltau0,cfltauMax
---
>       common /unst/ time,cfltau,ntstep,ita,iunst
263c257
<       common /moov/movie,nframes,icall1,lhdr,icoarsemovie,i2dmovie
---
>       common /moov/ movie,nframes,icall1,lhdr
268d261
<       common /filenam2/ avgq2,avgq2pert,clcds,clcdp,output_dir
282c275
<      .              tp(4,4),zlfct,epstr,relax,ittrst 
---
>      .              tp(4,4)
288c281
<      .                 nsprgit,ndgrd,ndwrt 
---
>      .                 nsprgit
516c509
<      .                   irigb0,irbtrim0,nt)
---
>      .                   irigb0,irbtrim0)
715,719c708
<          if (irigb .eq. 1 .or. irbtrim .eq. 1) then
<             alf1   = thetay(nblstag)
<             xorgrb = xorig(nblstag)
<             yorgrb = yorig(nblstag)
<             zorgrb = zorig(nblstag)
---
>          if (irigb .eq. 1) then
726,730d714
< c
< c    nblstat is the first block at the top level (levelt) on a
< c    particular processor; all blocks at this level
< c    are assumed to have the same value of thetay.
< c
732,747c716,717
<      .                x0,perturb,cmyw(ntt),clw(ntt),xorgrb,yorgrb,
<      .                zorgrb,nmds,maxaes,irbtrim,maxbl,myid)
< c
< c        rigid body trim predictor step
< c
<          if (irbtrim.gt.0) irigb = 0
<          if (irigb.gt.0) then
<             call rb_pred(nt)
<          end if
<          if (irigb .eq. 1 .or. irbtrim .eq. 1) then
<             do nbl = 1,nblock
<               thetayl(nbl)= thetay(nbl)
<               thetay(nbl) = alf1
<               omegay(nbl) = (thetay(nbl)-thetayl(nbl))/dt
<             enddo
<          end if
---
>      .                x0,perturb,cmyw(ntt),clw(ntt),xorig,yorig,
>      .                zorig,nmds,maxaes,irbtrim,maxbl)
783a754,760
> c        rigid body trim predictor step
> c
>          if (irbtrim.gt.0) irigb = 0
>          if (irigb.gt.0) then
>             call rb_pred(zrg1,zrg0,alf1,alf0,thtd1,thtd0,dzdt)
>          end if
> c
794c771
<      .                irigb,irbtrim,nt)
---
>      .                irigb,irbtrim)
821c798
<      .               myid,myhost,mycomm,mblk2nd,iwk,nt)
---
>      .               myid,myhost,mycomm,mblk2nd,iwk)
1046d1022
<             clcd(:,:,ntt)= 0.
1362d1337
<             xnumavg2=xnumavg2+1.
1642,1644c1617
<      .                 cxw,cyw,czw,cmxw,cmyw,cmzw,
<      $                 n_clcd,clcd,nblocks_clcd,blocks_clcd,
<      $                 chdw,swetw,fmdotw,
---
>      .                 cxw,cyw,czw,cmxw,cmyw,cmzw,chdw,swetw,fmdotw,
1658c1631
<      .                 idefrm,igridg)
---
>      .                 idefrm)
2449,2478c2422,2423
<      .                 status='unknown')
<                   rewind( 2)
<                   if (ndwrt .ne. 0 .and. iunst .gt. 1) then
<                     if(mseq .gt. 1) then
<                       nou(1) = min(nou(1)+1,ibufdim)
<                       write(bou(nou(1),1)
<      .                   ,'(''stopping...cannot write dynamic '',
<      .                       ''grid file when mseq > 1'')')
<                       call termn8(myid,-1,ibufdim,nbuf,bou,nou)
<                     end if
<                     open(98,file='dgplot3d.bin',form='formatted'
<      .                  ,status='unknown')
<                     write(98,'(i8)') ngrid
<                     do igrid=1,ngrid
<                       nbl = nblg(igrid)
<                       iem = iemg(igrid)
<                       if (iem.eq.0) nbl = nbl + (mseq-iseq)
<                       call lead(nbl,lw,lw2,maxbl)
<                       idimt(igrid) = idim
<                       jdimt(igrid) = jdim
<                       kdimt(igrid) = kdim
<                     enddo
<                     write(98,'(3i8)') (idimt(igrid),jdimt(igrid),
<      .                           kdimt(igrid),igrid=1,ngrid)
<                   end if
<                   if( iclcd .eq. 1 .or. iclcd .eq. 2 ) then
<                      open(unit=102,file=clcds,form='unformatted',
<      .                    status='unknown')
<                      rewind(102)
<                   end if
---
>      .            status='unknown')
>                   rewind 2
2501,2535c2446,2451
< 
<                    if (ipertavg .eq. 1 .or. ipertavg .eq. 2)then
<                       write(11,2225) avgq2 
<                       write(11,2225) avgq2pert 
<                       rewind(95) 
<                       rewind(98) 
<                       write(95) ngrid 
<                       write(98) ngrid 
<                       write(95) (idimg(nblg(igrid)+mseq-iseq), 
<      .                     jdimg(nblg(igrid)+mseq-iseq), 
<      .                     kdimg(nblg(igrid)+mseq-iseq),
<      $                     igrid=1,ngrid) 
<                       write(96) (idimg(nblg(igrid)+mseq-iseq), 
<      .                     jdimg(nblg(igrid)+mseq-iseq), 
<      .                     kdimg(nblg(igrid)+mseq-iseq),
<      $                     igrid=1,ngrid) 
<                       write(97) (idimg(nblg(igrid)+mseq-iseq), 
<      .                     jdimg(nblg(igrid)+mseq-iseq), 
<      .                     kdimg(nblg(igrid)+mseq-iseq),
<      $                     igrid=1,ngrid) 
<                       write(98) (idimg(nblg(igrid)+mseq-iseq), 
<      .                     jdimg(nblg(igrid)+mseq-iseq), 
<      .                     kdimg(nblg(igrid)+mseq-iseq),
<      $                     igrid=1,ngrid) 
<                    else
<                       write(96) (idimg(nblg(igrid)+mseq-iseq)-1,
<      .                     jdimg(nblg(igrid)+mseq-iseq)-1,
<      .                     kdimg(nblg(igrid)+mseq-iseq)-1,
<      $                     igrid=1,ngrid)
<                       write(97) (idimg(nblg(igrid)+mseq-iseq)-1,
<      .                     jdimg(nblg(igrid)+mseq-iseq)-1,
<      .                     kdimg(nblg(igrid)+mseq-iseq)-1,
<      $                     igrid=1,ngrid)
<                    end if
< c
---
>                    write(96) (idimg(nblg(igrid)+mseq-iseq)-1,
>      .               jdimg(nblg(igrid)+mseq-iseq)-1,
>      .               kdimg(nblg(igrid)+mseq-iseq)-1,igrid=1,ngrid)
>                    write(97) (idimg(nblg(igrid)+mseq-iseq)-1,
>      .               jdimg(nblg(igrid)+mseq-iseq)-1,
>      .               kdimg(nblg(igrid)+mseq-iseq)-1,igrid=1,ngrid)
2567,2569c2483
<      .            cmxw,cmyw,cmzw,
<      $            n_clcd,clcd,nblocks_clcd,blocks_clcd,
<      $            fmdotw,cftmomw,cftpw,cftvw,cfttotw,
---
>      .            cmxw,cmyw,cmzw,fmdotw,cftmomw,cftpw,cftvw,cfttotw,
2576c2490
<      .            w(lqavg),w(lq2avg),w(lx),w(ly),w(lz))
---
>      .            w(lqavg),w(lx),w(ly),w(lz))
2581,2582c2495
<                   close(2)
<                   close(102)
---
>                close(2)
2656c2569
<          call rb_corr(aesrfdat,clw(ntt),cmyw(ntt),maxaes)
---
>          call rb_corr(clw(ntt),cmyw(ntt))
2678,2684c2591,2592
<      .                 status='unknown')
<                   rewind( 2)
<                   if( iclcd .eq. 1 .or. iclcd .eq. 2 ) then
<                      open(unit=102,file=clcds,form='unformatted',
<      .                    status='unknown')
<                      rewind(102)
<                   end if
---
>      .            status='unknown')
>                   rewind 2
2706,2739c2614,2619
< 
<                    if (ipertavg .eq. 1 .or. ipertavg .eq. 2) then
<                       write(11,2225) avgq2 
<                       write(11,2225) avgq2pert 
<                       rewind(95) 
<                       rewind(98) 
<                       write(95) ngrid 
<                       write(98) ngrid 
<                       write(95) (idimg(nblg(igrid)+mseq-iseq), 
<      .                     jdimg(nblg(igrid)+mseq-iseq), 
<      .                     kdimg(nblg(igrid)+mseq-iseq),
<      $                     igrid=1,ngrid) 
<                       write(96) (idimg(nblg(igrid)+mseq-iseq), 
<      .                     jdimg(nblg(igrid)+mseq-iseq), 
<      .                     kdimg(nblg(igrid)+mseq-iseq),
<      $                     igrid=1,ngrid) 
<                       write(97) (idimg(nblg(igrid)+mseq-iseq), 
<      .                     jdimg(nblg(igrid)+mseq-iseq), 
<      .                     kdimg(nblg(igrid)+mseq-iseq),
<      $                     igrid=1,ngrid) 
<                       write(98) (idimg(nblg(igrid)+mseq-iseq), 
<      .                     jdimg(nblg(igrid)+mseq-iseq), 
<      .                     kdimg(nblg(igrid)+mseq-iseq),
<      $                     igrid=1,ngrid) 
<                    else
<                       write(96) (idimg(nblg(igrid)+mseq-iseq)-1,
<      .                     jdimg(nblg(igrid)+mseq-iseq)-1,
<      .                     kdimg(nblg(igrid)+mseq-iseq)-1,
<      $                     igrid=1,ngrid)
<                       write(97) (idimg(nblg(igrid)+mseq-iseq)-1,
<      .                     jdimg(nblg(igrid)+mseq-iseq)-1,
<      .                     kdimg(nblg(igrid)+mseq-iseq)-1,
<      $                     igrid=1,ngrid)
<                    end if
---
>                    write(96) (idimg(nblg(igrid)+mseq-iseq)-1,
>      .               jdimg(nblg(igrid)+mseq-iseq)-1,
>      .               kdimg(nblg(igrid)+mseq-iseq)-1,igrid=1,ngrid)
>                    write(97) (idimg(nblg(igrid)+mseq-iseq)-1,
>      .               jdimg(nblg(igrid)+mseq-iseq)-1,
>      .               kdimg(nblg(igrid)+mseq-iseq)-1,igrid=1,ngrid)
2771,2773c2651
<      .            cmxw,cmyw,cmzw,
<      $            n_clcd,clcd,nblocks_clcd,blocks_clcd,
<      $            fmdotw,cftmomw,cftpw,cftvw,cfttotw,
---
>      .            cmxw,cmyw,cmzw,fmdotw,cftmomw,cftpw,cftvw,cfttotw,
2780c2658
<      .            w(lqavg),w(lq2avg),w(lx),w(ly),w(lz))
---
>      .            w(lqavg),w(lx),w(ly),w(lz))
2950,2952d2827
<                    if (ndwrt .ne. 0) then
<                       close(98)
<                    end if
2972,3201c2847,2858
<       if (ipertavg .eq. 0) then
<          if (real(dt).gt.0. .and. movabs.gt.0) then
<             if ((movabs.gt.0 .and. (nt.eq.nt/movabs*movabs)) .or.
<      .           (iteravg.gt.0)) then 
<                if (nt.eq.nt/movabs*movabs) then
<                   lhdr   = 0
<                   iwk1   = 1
<                   iwk2   = iwk1  + 3*nplots
<                   iwk3   = iwk2  + maxbl
<                   iwork1 = iwork - iwk3 + 1
<                   if (iwork1.le.0) then
<                      nou(1) = min(nou(1)+1,ibufdim)
<                      write(bou(nou(1),1),'(''stopping...not '',
<      $                    ''enough integer '',
<      .                    ''work space for subroutine qout'')')
<                      call termn8(myid,-1,ibufdim,nbuf,bou,nou)
<                   end if
<                   do iii = 1,iwk3
<                      iwk(iii) = 0
<                   end do
<                   do iii = 1,nwork
<                      wk(iii) = 0.0
<                   end do
<                   call qout(iseq,lw,lw2,w,mgwk,wk,nwork,
<      .                 nplots,iovrlp,iibg,kkbg,jjbg,ibcg,lbg,
<      .                 ibpntsg,qb,lwdat,nbci0,nbcj0,nbck0,
<      .                 nbcidim,nbcjdim,nbckdim,jbcinfo,kbcinfo,
<      .                 ibcinfo,bcfilei,bcfilej,bcfilek,itrans,
<      .                 irotat,idefrm,nblock,levelg,igridg,iviscg,jdimg,
<      .                 kdimg,idimg,nblg,clw,ncycmax,nplot3d,
<      .                 inpl3d,ip3dsurf,nprint,inpr,iadvance,mycomm,
<      .                 myid,myhost,mblk2nd,nou,bou,nbuf,ibufdim,maxbl,
<      .                 maxgr,maxseg,iitot,jsg,ksg,isg,jeg,keg,ieg,
<      .                 ninter,windex,iindex,nblkpt,intmax,nsub1,maxxe,
<      .                 nblk,nbli,limblk,isva,nblon,mxbli,thetay,
<      .                 iwk(iwk1),iwk(iwk2),iwk(iwk3),iwork1,xorig,yorig,
<      .                 zorig,period_miss,geom_miss,epsc0,epsrot,
<      .                 isav_blk,isav_pat,isav_pat_b,isav_emb,isav_prd,
<      .                 lbcprd,lbcemb,dthetxx,dthetyy,dthetzz,nblcg,lfgm,
<      .                 istat2_bl,istat2_pa,istat2_pe,istat2_em,
<      .                 istat_size,vormax,ivmax,jvmax,kvmax,bcfiles,
<      .                 mxbcfil,iprnsurf)
< 
<                   do iii = 1,iwk3
<                      iwk(iii) = 0
<                   end do
<                   do iii = 1,nwork
<                      wk(iii) = 0.0
<                   end do
<                   nframes = nframes + 1
<                end if
<             end if
<          end if
<       end if
<       if (ipertavg .eq. 1 .or. ipertavg .eq. 2) then
<          if ((real(dt).gt.0. .and. movabs.gt.0).or.
<      $        (iteravg.gt.0)) then
< c     
<             if ((movabs.gt.0 .and. (nt.eq.nt/movabs*movabs)) .or.
<      .           (iteravg.gt.0)) then
<                lhdr   = 0
<                iwk1   = 1
<                iwk2   = iwk1  + 3*nplots
<                iwk3   = iwk2  + maxbl
<                iwork1 = iwork - iwk3 + 1
<                if (iwork1.le.0) then
<                   nou(1) = min(nou(1)+1,ibufdim)
<                   write(bou(nou(1),1),
<      $                 '(''stopping...not enough integer '',
<      .                    ''work space for subroutine qoutavg'')')
<                   call termn8(myid,-1,ibufdim,nbuf,bou,nou)
<                end if
<                do iii = 1,iwk3
<                   iwk(iii) = 0
<                end do
<                do iii = 1,nwork
<                   wk(iii) = 0.0
<                end do
< c     
<                call qoutavg(iseq,lw,lw2,w,mgwk,wk,nwork, 
<      .              nplots,iovrlp,iibg,kkbg,jjbg,ibcg,lbg,
<      .              ibpntsg,qb,lwdat,nbci0,nbcj0,nbck0,
<      .              nbcidim,nbcjdim,nbckdim,jbcinfo,kbcinfo,
<      .              ibcinfo,bcfilei,bcfilej,bcfilek,itrans,
<      .              irotat,idefrm,nblock,levelg,igridg,iviscg,jdimg,
<      .              kdimg,idimg,nblg,clw,ncycmax,nplot3d,
<      .              inpl3d,ip3dsurf,nprint,inpr,iadvance,mycomm,
<      .              myid,myhost,mblk2nd,nou,bou,nbuf,ibufdim,maxbl,
<      .              maxgr,maxseg,iitot,jsg,ksg,isg,jeg,keg,ieg,
<      .              ninter,windex,iindex,nblkpt,intmax,nsub1,maxxe,
<      .              nblk,nbli,limblk,isva,nblon,mxbli,thetay,
<      .              iwk(iwk1),iwk(iwk2),iwk(iwk3),iwork1,xorig,yorig,
<      .              zorig,period_miss,geom_miss,epsc0,epsrot,
<      .              isav_blk,isav_pat,isav_pat_b,isav_emb,isav_prd,
<      .              lbcprd,lbcemb,dthetxx,dthetyy,dthetzz,nblcg,lfgm,
<      .              istat2_bl,istat2_pa,istat2_pe,istat2_em,
<      .              istat_size,vormax,ivmax,jvmax,kvmax,bcfiles,
<      .              mxbcfil,iprnsurf,nt,movabs)
<                do iii = 1,iwk3
<                   iwk(iii) = 0
<                end do
<                do iii = 1,nwork
<                   wk(iii) = 0.0
<                end do
<                nframes = nframes + 1
<             end if
<          end if
<       end if
< c     
<       if (icoarsemovie .ne. 0) then
< c     
<          iflag_coarse = icoarsemovie
<          mov_coarse = icoarsemovie
<          iinc_coarse = inc_coarse(1)
<          jinc_coarse = inc_coarse(2)
<          kinc_coarse = inc_coarse(3)
<          
<          if (real(dt).gt.0. .and. iflag_coarse.gt.0) then                  
<             if (ntt.eq.ntt/mov_coarse*mov_coarse) then                      
<                lhdr   = 0
<                iwk1   = 1
<                iwk2   = iwk1  + 3*nblocks/lglobal
<                iwk3   = iwk2  + maxbl
<                iwork1 = iwork - iwk3 + 1
<                if (iwork1.le.0) then
<                   nou(1) = min(nou(1)+1,ibufdim)
<                   write(bou(nou(1),1),
<      $                 '(''stopping...not enough integer '',
<      .                 ''work space for subroutine qout_coarse'')')
<                   call termn8(myid,-1,ibufdim,nbuf,bou,nou)
<                end if
<                do iii = 1,iwk3
<                   iwk(iii) = 0
<                end do
<                do iii = 1,nwork
<                   wk(iii) = 0.0
<                end do
<                
<                if (nt.eq.1) then
<                   icallcrs=0
<                   icall2d=0
<                endif
<                call qout_coarse(iseq,lw,lw2,w,mgwk,wk,nwork,
<      .              nplots,iovrlp,iibg,kkbg,jjbg,ibcg,lbg,
<      .              ibpntsg,qb,lwdat,nbci0,nbcj0,nbck0,
<      .              nbcidim,nbcjdim,nbckdim,jbcinfo,kbcinfo,
<      .              ibcinfo,bcfilei,bcfilej,bcfilek,itrans,
<      .              irotat,idefrm,nblock,levelg,igridg,iviscg,jdimg,
<      .              kdimg,idimg,nblg,clw,ncycmax,nplot3d,
<      .              inpl3d,ip3dsurf,nprint,inpr,iadvance,mycomm,
<      .              myid,myhost,mblk2nd,nou,bou,nbuf,ibufdim,maxbl,
<      .              maxgr,maxseg,iitot,jsg,ksg,isg,jeg,keg,ieg,
<      .              ninter,windex,iindex,nblkpt,intmax,nsub1,maxxe,
<      .              nblk,nbli,limblk,isva,nblon,mxbli,thetay,
<      .              iwk(iwk1),iwk(iwk2),iwk(iwk3),iwork1,xorig,yorig,
<      .              zorig,period_miss,geom_miss,epsc0,epsrot,
<      .              isav_blk,isav_pat,isav_pat_b,isav_emb,isav_prd,
<      .              lbcprd,lbcemb,dthetxx,dthetyy,dthetzz,nblcg,lfgm,
<      .              istat2_bl,istat2_pa,istat2_pe,istat2_em,
<      .              istat_size,vormax,ivmax,jvmax,kvmax,bcfiles,
<      .              mxbcfil,iprnsurf,nt,
<      .              mov_coarse,iinc_coarse,jinc_coarse,kinc_coarse)
<                do iii = 1,iwk3
<                   iwk(iii) = 0
<                end do
<                do iii = 1,nwork
<                   wk(iii) = 0.0
<                end do
<             end if
<          end if
< c     
<       end if
< c     
<       if (i2dmovie .ne. 0) then
< c
<          iflag_2d = i2dmovie
< c     ! output snapshot every mov_2d time steps  
<          mov_2d = i2dmovie
<          
<          iinc_2d = inc_2d(1)
<          jinc_2d = inc_2d(2)
<          kinc_2d = inc_2d(3)
<          
<          if (real(dt).gt.0. .and. iflag_2d.gt.0) then                  
<             if (ntt.eq.ntt/mov_2d*mov_2d) then                        
<                lhdr   = 0
<                iwk1   = 1
<                iwk2   = iwk1  + 3*nblocks/lglobal                         
<                iwk3   = iwk2  + maxbl
<                iwork1 = iwork - iwk3 + 1
<                if (iwork1.le.0) then
<                   nou(1) = min(nou(1)+1,ibufdim)
<                   write(bou(nou(1),1),
<      $                 '(''stopping...not enough integer '',
<      .                 ''work space for subroutine qout_2d'')')
<                   call termn8(myid,-1,ibufdim,nbuf,bou,nou)
<                end if
<                do iii = 1,iwk3
<                   iwk(iii) = 0
<                end do
<                do iii = 1,nwork
<                   wk(iii) = 0.0
<                end do
<                call qout_2d(iseq,lw,lw2,w,mgwk,wk,nwork,              
<      .              nplots,iovrlp,iibg,kkbg,jjbg,ibcg,lbg,
<      .              ibpntsg,qb,lwdat,nbci0,nbcj0,nbck0,
<      .              nbcidim,nbcjdim,nbckdim,jbcinfo,kbcinfo,
<      .              ibcinfo,bcfilei,bcfilej,bcfilek,itrans,
<      .              irotat,idefrm,nblock,levelg,igridg,iviscg,jdimg,
<      .              kdimg,idimg,nblg,clw,ncycmax,nplot3d,
<      .              inpl3d,ip3dsurf,nprint,inpr,iadvance,mycomm,
<      .              myid,myhost,mblk2nd,nou,bou,nbuf,ibufdim,maxbl,
<      .              maxgr,maxseg,iitot,jsg,ksg,isg,jeg,keg,ieg,
<      .              ninter,windex,iindex,nblkpt,intmax,nsub1,maxxe,
<      .              nblk,nbli,limblk,isva,nblon,mxbli,thetay,
<      .              iwk(iwk1),iwk(iwk2),iwk(iwk3),iwork1,xorig,yorig,
<      .              zorig,period_miss,geom_miss,epsc0,epsrot,
<      .              isav_blk,isav_pat,isav_pat_b,isav_emb,isav_prd,
<      .              lbcprd,lbcemb,dthetxx,dthetyy,dthetzz,nblcg,lfgm,
<      .              istat2_bl,istat2_pa,istat2_pe,istat2_em,
<      .              istat_size,vormax,ivmax,jvmax,kvmax,bcfiles,
<      .              mxbcfil,iprnsurf,nt,
<      .              mov_2d,iinc_2d,jinc_2d,kinc_2d)                 
<                
<                do iii = 1,iwk3
<                   iwk(iii) = 0
<                end do
<                do iii = 1,nwork
<                   wk(iii) = 0.0
<                end do
---
>       if (real(dt).gt.0. .and. movabs.gt.0) then
>          if (nt.eq.nt/movabs*movabs) then
>             lhdr   = 0
>             iwk1   = 1
>             iwk2   = iwk1  + 3*nplots
>             iwk3   = iwk2  + maxbl
>             iwork1 = iwork - iwk3 + 1
>             if (iwork1.le.0) then
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),'(''stopping...not enough integer '',
>      .                          ''work space for subroutine qout'')')
>                call termn8(myid,-1,ibufdim,nbuf,bou,nou)
3202a2860,2891
>             do iii = 1,iwk3
>                iwk(iii) = 0
>             end do
>             do iii = 1,nwork
>                wk(iii) = 0.0
>             end do
>             call qout(iseq,lw,lw2,w,mgwk,wk,nwork,
>      .                nplots,iovrlp,iibg,kkbg,jjbg,ibcg,lbg,
>      .                ibpntsg,qb,lwdat,nbci0,nbcj0,nbck0,
>      .                nbcidim,nbcjdim,nbckdim,jbcinfo,kbcinfo,
>      .                ibcinfo,bcfilei,bcfilej,bcfilek,itrans,
>      .                irotat,idefrm,nblock,levelg,igridg,iviscg,jdimg,
>      .                kdimg,idimg,nblg,clw,ncycmax,nplot3d,
>      .                inpl3d,ip3dsurf,nprint,inpr,iadvance,mycomm,
>      .                myid,myhost,mblk2nd,nou,bou,nbuf,ibufdim,maxbl,
>      .                maxgr,maxseg,iitot,jsg,ksg,isg,jeg,keg,ieg,
>      .                ninter,windex,iindex,nblkpt,intmax,nsub1,maxxe,
>      .                nblk,nbli,limblk,isva,nblon,mxbli,thetay,
>      .                iwk(iwk1),iwk(iwk2),iwk(iwk3),iwork1,xorig,yorig,
>      .                zorig,period_miss,geom_miss,epsc0,epsrot,
>      .                isav_blk,isav_pat,isav_pat_b,isav_emb,isav_prd,
>      .                lbcprd,lbcemb,dthetxx,dthetyy,dthetzz,nblcg,lfgm,
>      .                istat2_bl,istat2_pa,istat2_pe,istat2_em,
>      .                istat_size,vormax,ivmax,jvmax,kvmax,bcfiles,
>      .                mxbcfil,iprnsurf)
>             do iii = 1,iwk3
>                iwk(iii) = 0
>             end do
>             do iii = 1,nwork
>                wk(iii) = 0.0
>             end do
>             nframes = nframes + 1
Index: source/cfl3d/dist/plot3c.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/dist/plot3c.F,v
retrieving revision 1.7
retrieving revision 1.5
diff -r1.7 -r1.5
11c11
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
76c76
<       common /unst/ time,cfltau,ntstep,ita,iunst,cfltau0,cfltauMax
---
>       common /unst/ time,cfltau,ntstep,ita,iunst
78c78
<       common /moov/movie,nframes,icall1,lhdr,icoarsemovie,i2dmovie
---
>       common /moov/movie,nframes,icall1,lhdr
1539,1549c1539,1549
<          if(icp .eq. 1) then
<            write(17,77)
<    77      format(/3x,1hI,3x,1hJ,3x,1hK,9x,1hX,16x,1hY,16x,1hZ,
<      .     14x,6hU/Uinf,11x,6hV/Vinf,11x,6hW/Winf,11x,6hP/Pinf,
<      .     11x,6hT/Tinf,12x,4hMACH,10x,6h    cp,12x,9htur. vis.)
<          else
<            write(17,7)
<     7      format(/3x,1hI,3x,1hJ,3x,1hK,9x,1hX,16x,1hY,16x,1hZ,
<      .     14x,6hU/Uinf,11x,6hV/Vinf,11x,6hW/Winf,11x,6hP/Pinf,
<      .     11x,6hT/Tinf,12x,4hMACH,10x,6hpitotp,12x,9htur. vis.)
<          end if
---
>         if(icp .eq. 1) then
>           write(17,77)
>    77     format(/3x,1hI,3x,1hJ,3x,1hK,7x,1hX,12x,1hY,12x,1hZ,
>      .    10x,6hU/Uinf,7x,6hV/Vinf,7x,6hW/Winf,7x,6hP/Pinf,
>      .    7x,6hT/Tinf,8x,4hMACH,8x,6h    cp,6x,9htur. vis.)
>         else
>           write(17,7)
>     7     format(/3x,1hI,3x,1hJ,3x,1hK,7x,1hX,12x,1hY,12x,1hZ,
>      .    10x,6hU/Uinf,7x,6hV/Vinf,7x,6hW/Winf,7x,6hP/Pinf,
>      .    7x,6hT/Tinf,8x,4hMACH,8x,6hpitotp,6x,9htur. vis.)
>         end if
1602c1602
<    29    format(3i4,11(1x,e16.9))
---
>    29    format(3i4,11(1x,e12.5))
Index: source/cfl3d/dist/plot3d.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/dist/plot3d.F,v
retrieving revision 1.12
retrieving revision 1.8
diff -r1.12 -r1.8
12c12
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
71d70
<       allocatable :: xvist3d(:,:,:)
81c80
<       common /unst/ time,cfltau,ntstep,ita,iunst,cfltau0,cfltauMax
---
>       common /unst/ time,cfltau,ntstep,ita,iunst
84c83
<       common /moov/movie,nframes,icall1,lhdr,icoarsemovie,i2dmovie
---
>       common /moov/movie,nframes,icall1,lhdr
780,792d778
<          if (ifunc.eq.-4) then
<             write(11,'(''   plot3dg file is an xyz file'',
<      .      '' at grid points'')')
<             write(11,'(''   plot3dq file is a function'',
<      .      '' file of amut at grid points'')')
< #           ifdef CMPLX
<             if (ip3dgrad .ne. 0) then
<                write(11,'(''   NOTE: contains d(amut)/d(), rather'',
<      .                    '' than amut'')')
<                call gradinfo(delh,11)
<             end if
< #           endif
<          end if
944a931,933
>       call cctogp(jdim,kdim,idim,i1,i2,i3,j1,j2,j3,k1,k2,k3,q,
>      .            qi0,qj0,qk0,jdw,kdw,idw,xv,ldw) 
> c
950d938
< c            -4 vist3d at grid points
954,963d941
<       if (ifunc .eq. -4) then
<         allocate(xvist3d(jdim,kdim,idim))
<         call cctogp(jdim,kdim,idim,i1,i2,i3,j1,j2,j3,k1,k2,k3,vist3d,
<      .              vi0,vj0,vk0,jdw,kdw,idw,xvist3d,1)
<       else
<         call cctogp(jdim,kdim,idim,i1,i2,i3,j1,j2,j3,k1,k2,k3,q,
<      .              qi0,qj0,qk0,jdw,kdw,idw,xv,ldw)
<       end if
< 
< c
1010,1019d987
<          if (ifunc.eq.-4) then
<             do i=1,iw
<               do k=1,kw
<                 do j=1,jw
<                   xv(j,k,i,1) = xvist3d(j,k,i)
<                 end do
<               end do
<             end do
<          end if
< c
1319,1321c1287,1289
<    77      format(/3x,1hI,3x,1hJ,3x,1hK,9x,1hX,16x,1hY,16x,1hZ,
<      .     14x,6hU/Uinf,11x,6hV/Vinf,11x,6hW/Winf,11x,6hP/Pinf,
<      .     11x,6hT/Tinf,12x,4hMACH,10x,6h    cp,12x,9htur. vis.)
---
>    77      format(/3x,1hI,3x,1hJ,3x,1hK,7x,1hX,12x,1hY,12x,1hZ,
>      .     10x,6hU/Uinf,7x,6hV/Vinf,7x,6hW/Winf,7x,6hP/Pinf,
>      .     7x,6hT/Tinf,8x,4hMACH,8x,6h    cp,6x,9htur. vis.)
1324,1326c1292,1294
<     7      format(/3x,1hI,3x,1hJ,3x,1hK,9x,1hX,16x,1hY,16x,1hZ,
<      .     14x,6hU/Uinf,11x,6hV/Vinf,11x,6hW/Winf,11x,6hP/Pinf,
<      .     11x,6hT/Tinf,12x,4hMACH,10x,6hpitotp,12x,9htur. vis.)
---
>     7      format(/3x,1hI,3x,1hJ,3x,1hK,7x,1hX,12x,1hY,12x,1hZ,
>      .     10x,6hU/Uinf,7x,6hV/Vinf,7x,6hW/Winf,7x,6hP/Pinf,
>      .     7x,6hT/Tinf,8x,4hMACH,8x,6hpitotp,6x,9htur. vis.)
1380c1348
<    29    format(3i4,11(1x,e16.9))
---
>    29    format(3i4,11(1x,e12.5))
1589,1591c1557,1559
<    53    format(/3x,1hI,3x,1hJ,3x,1hK,9x,1hX,16x,1hY,16x,1hZ,16x,
<      .   2hdn,12x,6hP/Pinf,11x,6hT/Tinf,13x,2hCf,15x,2hCh,13x,5hyplus,
<      .   13x,3hCfx,14x,3hCfy,14x,3hCfz)
---
>    53    format(/3x,1hI,3x,1hJ,3x,1hK,6x,1hX,12x,1hY,12x,1hZ,12x,
>      .   2hdn,9x,6hP/Pinf,7x,6hT/Tinf,9x,2hCf,11x,2hCh,9x,5hyplus,
>      .   9x,3hCfx,9x,3hCfy,9x,3hCfz)
2071c2039
<    22 format(3i4,12(1x,e16.9))
---
>    22 format(3i4,12(1x,e12.5))
Index: source/cfl3d/dist/plot3t.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/dist/plot3t.F,v
retrieving revision 1.12
retrieving revision 1.11
diff -r1.12 -r1.11
12c12
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
88c88
<       common /unst/ time,cfltau,ntstep,ita,iunst,cfltau0,cfltauMax
---
>       common /unst/ time,cfltau,ntstep,ita,iunst
90c90
<       common /moov/movie,nframes,icall1,lhdr,icoarsemovie,i2dmovie
---
>       common /moov/movie,nframes,icall1,lhdr
Index: source/cfl3d/dist/pointers.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/dist/pointers.F,v
retrieving revision 1.13
retrieving revision 1.11
diff -r1.13 -r1.11
12c12
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
55,58c55,57
<       common /unst/ time,cfltau,ntstep,ita,iunst,cfltau0,cfltauMax
<       common /avgdata/ xnumavg,iteravg,xnumavg2,ipertavg,iclcd
<       common /konew/ ikoprod,isstdenom,pklimterm,ibeta8kzeta,i_bsl,
<      .        keepambient
---
>       common /unst/ time,cfltau,ntstep,ita,iunst
>       common /avgdata/ xnumavg,iteravg
>       common /konew/ ikoprod,isstdenom,pklimterm,ibeta8kzeta
153d151
< c      65  q2avg
702c700
< c........qavg(jdim,kdim,idim,5) iteration-averaged data
---
> c........qavg(jdim-1,kdim-1,idim-1,5) iteration-averaged data
706,707c704
< 
<          if (iteravg.eq.1 .or. iteravg.eq.2) ns = jmkmim*5
---
>          if (iteravg.eq.1 .or. iteravg.eq.2) ns = jm1km1im1*5
840,847c837
< c
< c........q2avg(jdim,kdim,idim,5) Average of the square of q
< c
<          lw(65,nbl) = lw(64,nbl) + ns
<          ns = 0
<          if (ipertavg.eq.1 .or. ipertavg.eq.2) ns = jmkmim*5
< c
<          nstart = lw(65,nbl) + ns
---
>          nstart = lw(64,nbl) + ns
859c849
<          memblock(nbl) = lw(65,nbl) + ns - lw(1,nbl) + 1
---
>          memblock(nbl) = lw(64,nbl) + ns - lw(1,nbl) + 1
866c856
<          do ii = 1,65
---
>          do ii = 1,64
875c865
<          nstart = lw(65,nbl)
---
>          nstart = lw(64,nbl)
Index: source/cfl3d/dist/prntcp.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/dist/prntcp.F,v
retrieving revision 1.5
retrieving revision 1.4
diff -r1.5 -r1.4
6c6
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
48c48
<       common /unst/ time,cfltau,ntstep,ita,iunst,cfltau0,cfltauMax
---
>       common /unst/ time,cfltau,ntstep,ita,iunst
Index: source/cfl3d/dist/qinter.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/dist/qinter.F,v
retrieving revision 1.6
retrieving revision 1.5
diff -r1.6 -r1.5
9c9
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
67c67
<       common /unst/ time,cfltau,ntstep,ita,iunst,cfltau0,cfltauMax
---
>       common /unst/ time,cfltau,ntstep,ita,iunst
Index: source/cfl3d/dist/qout.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/dist/qout.F,v
retrieving revision 1.7
retrieving revision 1.6
diff -r1.7 -r1.6
20c20
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
99,100c99,100
<       common /unst/ time,cfltau,ntstep,ita,iunst,cfltau0,cfltauMax
<       common /moov/movie,nframes,icall1,lhdr,icoarsemovie,i2dmovie
---
>       common /unst/ time,cfltau,ntstep,ita,iunst
>       common /moov/movie,nframes,icall1,lhdr
Index: source/cfl3d/dist/resetg.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/dist/resetg.F,v
retrieving revision 1.7
retrieving revision 1.4
diff -r1.7 -r1.4
12c12
<      .                  myid,myhost,mycomm,mblk2nd,iresetb,nt)
---
>      .                  myid,myhost,mycomm,mblk2nd,iresetb)
14c14
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
72c72
<       common /unst/ time,cfltau,ntstep,ita,iunst,cfltau0,cfltauMax
---
>       common /unst/ time,cfltau,ntstep,ita,iunst
466c466
<      .                mblk2nd,irigb0,irbtrim0,nt)
---
>      .                mblk2nd,irigb0,irbtrim0)
Index: source/cfl3d/dist/resp.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/dist/resp.F,v
retrieving revision 1.7
retrieving revision 1.6
diff -r1.7 -r1.6
8,9c8
<      .                czw,cmxw,cmyw,cmzw,n_clcd,clcd,nblocks_clcd,
<      .                blocks_clcd,hdw,swetw,fmdotw,
---
>      .                czw,cmxw,cmyw,cmzw,chdw,swetw,fmdotw,
23c22
<      .                idefrm,igridg)
---
>      .                idefrm)
25c24
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
72d70
<       integer blocks_clcd
77d74
<      .          clcd(2,n_clcd,ncycmax), blocks_clcd(2,nblocks_clcd),
107,110d103
<       dimension igridg(maxbl)
<       common /twod/ i2d
<       common /ginfo2/ lq2avg,iskip_blocks,inc_2d(3),inc_coarse(3)
<       common /avgdata/ xnumavg,iteravg,xnumavg2,ipertavg,iclcd
117c110
<       common /unst/ time,cfltau,ntstep,ita,iunst,cfltau0,cfltauMax
---
>       common /unst/ time,cfltau,ntstep,ita,iunst
157c150
<             call l2norm(nbl,icyc,resd,0,jdim,kdim,idim,res,vol) 
---
>             call l2norm(nbl,icyc,resd,0,jdim,kdim,idim,res,vol)
366c359
<                   chdw(nres)  = chdw(nres)  + chd       
---
>                   chdw(nres)  = chdw(nres)  + chd
369c362
<                   cmyw(nres)  = cmyw(nres)  + cmyt(nbl) 
---
>                   cmyw(nres)  = cmyw(nres)  + cmyt(nbl)
371,373c364,366
<                   cmxw(nres)  = cmxw(nres)  + cmxt(nbl) 
<                   cmzw(nres)  = cmzw(nres)  + cmzt(nbl) 
<                   czw(nres)   = czw(nres)   + czt(nbl)  
---
>                   cmxw(nres)  = cmxw(nres)  + cmxt(nbl)
>                   cmzw(nres)  = cmzw(nres)  + cmzt(nbl)
>                   czw(nres)   = czw(nres)   + czt(nbl)
378,387d370
< 
<                   if (iclcd .eq. 1 .or. iclcd .eq. 2) then
<                      do nb = 1, nblocks_clcd
<                         if (igridg(nbl) .eq. blocks_clcd(2,nb)) then
<                            nn = blocks_clcd(1,nb)
<                            clcd(1,nn,nres) = clcd(1,nn,nres) + clt(nbl)
<                            clcd(2,nn,nres) = clcd(2,nn,nres) + cdt(nbl)
<                         end if
<                      end do
<                   end if
1193d1175
< c
Index: source/cfl3d/dist/rrest.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/dist/rrest.F,v
retrieving revision 1.12
retrieving revision 1.11
diff -r1.12 -r1.11
2,12c2,11
<      .     clw,cdw,cdpw,cdvw,cxw,cyw,czw,cmxw,cmyw,cmzw,
<      .     n_clcd, clcd, nblocks_clcd, blocks_clcd,
<      .     fmdotw,cftmomw,cftpw,cftvw,cfttotw,rmstr1,
<      .     rmstr2,nneg1,nneg2,iskip,vist3d,tursav,
<      .     smin,xjb,xkb,blnum,cmuv,maxbl,mblk2nd,
<      .     myid,myhost,mycomm,nou,bou,nbuf,ibufdim,
<      .     igrid,wk,idima,jdima,kdima,vj0,vk0,vi0,
<      .     tj0,tk0,ti0,qavg,q2avg)
< c     
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
< c     
---
>      .                 clw,cdw,cdpw,cdvw,cxw,cyw,czw,cmxw,cmyw,cmzw,
>      .                 fmdotw,cftmomw,cftpw,cftvw,cfttotw,rmstr1,
>      .                 rmstr2,nneg1,nneg2,iskip,vist3d,tursav,
>      .                 smin,xjb,xkb,blnum,cmuv,maxbl,mblk2nd,
>      .                 myid,myhost,mycomm,nou,bou,nbuf,ibufdim,
>      .                 igrid,wk,idima,jdima,kdima,vj0,vk0,vi0,
>      .                 tj0,tk0,ti0,qavg)
> c
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
> c
15,16c14,15
< c     is the first block to be read in from the restart file;
< c     all other blocks have iskip = 0
---
> c               is the first block to be read in from the restart file;
> c               all other blocks have iskip = 0
18c17
< c     
---
> c
22c21
< c     
---
> c
40c39
< c     
---
> c
42c41
< c     
---
> c
45,49c44,47
<      .     qj0(kdim,idim-1,5,4), qk0(jdim,idim-1,5,4),
<      .     vj0(kdim,idim-1,1,4),vk0(jdim,idim-1,1,4),
<      .     vi0(jdim,kdim,1,4),tj0(kdim,idim-1,2,4),
<      .     tk0(jdim,idim-1,2,4),ti0(jdim,kdim,2,4)
<       integer blocks_clcd
---
>      .          qj0(kdim,idim-1,5,4), qk0(jdim,idim-1,5,4),
>      .          vj0(kdim,idim-1,1,4),vk0(jdim,idim-1,1,4),
>      .          vi0(jdim,kdim,1,4),tj0(kdim,idim-1,2,4),
>      .          tk0(jdim,idim-1,2,4),ti0(jdim,kdim,2,4)
51,57c49,54
<      .     cdvw(ncycmax),cxw(ncycmax),cyw(ncycmax),czw(ncycmax),
<      .     cmxw(ncycmax),cmyw(ncycmax),cmzw(ncycmax),
<      .     clcd(2,n_clcd,ncycmax), blocks_clcd(2,nblocks_clcd),
<      .     fmdotw(ncycmax),cftmomw(ncycmax),cftpw(ncycmax),
<      .     cftvw(ncycmax),cfttotw(ncycmax),
<      .     rmstr1(ncycmax),rmstr2(ncycmax),nneg1(ncycmax),
<      .     nneg2(ncycmax)
---
>      .          cdvw(ncycmax),cxw(ncycmax),cyw(ncycmax),czw(ncycmax),
>      .          cmxw(ncycmax),cmyw(ncycmax),cmzw(ncycmax),
>      .          fmdotw(ncycmax),cftmomw(ncycmax),cftpw(ncycmax),
>      .          cftvw(ncycmax),cfttotw(ncycmax),
>      .          rmstr1(ncycmax),rmstr2(ncycmax),nneg1(ncycmax),
>      .          nneg2(ncycmax)
60,64c57,60
<      .     smin(jdim-1,kdim-1,idim-1),xjb(jdim-1,kdim-1,idim-1),
<      .     xkb(jdim-1,kdim-1,idim-1),blnum(jdim-1,kdim-1,idim-1),
<      .     cmuv(jdim-1,kdim-1,idim-1)
<       dimension qavg(jdim,kdim,idim,5)
<       dimension q2avg(jdim,kdim,idim,5)
---
>      .          smin(jdim-1,kdim-1,idim-1),xjb(jdim-1,kdim-1,idim-1),
>      .          xkb(jdim-1,kdim-1,idim-1),blnum(jdim-1,kdim-1,idim-1),
>      .          cmuv(jdim-1,kdim-1,idim-1)
>       dimension qavg(jdim-1,kdim-1,idim-1,5)
67,69c63,64
< c     
<       common /ginfo2/ lq2avg,iskip_blocks,inc_2d(3),inc_coarse(3)
<       common /avgdata/ xnumavg,iteravg,xnumavg2,ipertavg,iclcd
---
> c
>       common /avgdata/ xnumavg,iteravg
75,76c70,71
<      .     idiag(3),nitfo,iflagts,iflim(3),nres,levelb(5),mgflag,
<      .     iconsf,mseq,ncyc1(5),levelt(5),nitfo1(5),ngam,nsm(5),iipv
---
>      .        idiag(3),nitfo,iflagts,iflim(3),nres,levelb(5),mgflag,
>      .        iconsf,mseq,ncyc1(5),levelt(5),nitfo1(5),ngam,nsm(5),iipv
78c73
<       common /unst/ time,cfltau,ntstep,ita,iunst,cfltau0,cfltauMax
---
>       common /unst/ time,cfltau,ntstep,ita,iunst
83c78
<      .     tur10,tur20
---
>      .        tur10,tur20
88c83
< c     
---
> c
92c87
< c     
---
> c
95c90
< c     
---
> c
144,147c139
<       itag_q2avg   = itag_xnum    + ioffset
<       itag_xnum2   = itag_q2avg   + ioffset
<       itag_clcd    = itag_xnum2   + ioffset
< c     
---
> c
162c154
< c     
---
> c 
164c156
< c     
---
> c
166c158
<          if (icgns .eq. 1) then
---
>       if (icgns .eq. 1) then
168,184c160,176
<             write(901,'('' cgns read in rrest'')')
<             write(901,'(''  ...reading conserved variables and'',
<      +           '' translating to primitive'')')
<             write(901,'(''(  this may result in machine-order '',
<      +           '' differences compared to a non-cgns run)'')')
<             call getsolinfo(iccg,ibase,igrid,nsoluse,irinddata)
<             irind=1
<             jrind=1
<             krind=1
< c     Note: the following assumes irinddata(2)=(1), (4)=(3),
< c     (6)=(5) - (currently checked for in getsolinfo):
<             if (irinddata(1) .eq. 1) irind=0
<             if (irinddata(3) .eq. 1) jrind=0
<             if (irinddata(5) .eq. 1) krind=0
<             call readsoln(iccg,ibase,igrid,idima,jdima,kdima,idim,
<      +         jdim,kdim,wk,nsoluse,irind,jrind,krind,i2d,ialph,q,iprim)
<             if (iprim .eq. 0) then
---
>       write(901,'('' cgns read in rrest'')')
>       write(901,'(''  ...reading conserved variables and'',
>      +  '' translating to primitive'')')
>       write(901,'(''  (this may result in machine-order differences'',
>      +  '' compared to a non-cgns run)'')')
>       call getsolinfo(iccg,ibase,igrid,nsoluse,irinddata)
>       irind=1
>       jrind=1
>       krind=1
> c  Note: the following assumes irinddata(2)=(1), (4)=(3),
> c  (6)=(5) - (currently checked for in getsolinfo):
>       if (irinddata(1) .eq. 1) irind=0
>       if (irinddata(3) .eq. 1) jrind=0
>       if (irinddata(5) .eq. 1) krind=0
>       call readsoln(iccg,ibase,igrid,idima,jdima,kdima,idim,
>      +  jdim,kdim,wk,nsoluse,irind,jrind,krind,i2d,ialph,q,iprim)
>       if (iprim .eq. 0) then
186,231c178,222
<                do i=1,idim1
<                   do k=1,kdim1
<                      do j=1,jdim1
<                         q(j,k,i,2)=q(j,k,i,2)/q(j,k,i,1)
<                         q(j,k,i,3)=q(j,k,i,3)/q(j,k,i,1)
<                         q(j,k,i,4)=q(j,k,i,4)/q(j,k,i,1)
<                         q(j,k,i,5)=gm1*(q(j,k,i,5)
<      $                       -0.5*q(j,k,i,1)*(q(j,k,i,2)**2+
<      +                       q(j,k,i,3)**2+q(j,k,i,4)**2))
<                      enddo
<                   enddo
<                enddo
<             end if
<             if (irghost .ne. 0) then
<                write(901,'('' cgns reading specific BC values'')')
<                call readbcs(iccg,ibase,igrid,idim,jdim,kdim,i2d,
<      +              qj0,qk0,qi0,vj0,vk0,vi0,tj0,tk0,ti0)
<             end if
<             if (iskip .gt. 0) then
<                call readhist(iccg,ibase,ncycmax,ntr,rms,clw,cdw,
<      +              cdpw,cdvw,cxw,cyw,czw,cmxw,cmyw,cmzw,fmdotw,cftmomw,
<      +              cftpw,cftvw,cfttotw,rmstr1,rmstr2,nneg1,nneg2)
<             end if
<             call readref(iccg,ibase,xmachw,reuew,
<      +           rho0w,c0w,vk0w,xlength0w,tinfw,alphw)
<             if (rho0w.ne.1. .or. c0w.ne.1. .or. xlength0w.ne.1.) then
<                write(901,'('' ERROR, cgns restart file has different'',
<      +              '' nondimensionalization'')')
<                write(901,'('' rho0w,c0w,xlength0w='',3e15.5)')
<      +              rho0w,c0w,xlength0w
<                write(901,'('' Stopping.'')')
<                call termn8(myid,-1,ibufdim,nbuf,bou,nou)
<             end if
<             if (abs(vk0w-1.) .gt. 1.e-4) then
<                write(901,'('' ERROR, cgns restart file has different'',
<      +              '' nondimensionalization'')')
<                write(901,'('' vk0w='',e15.5)') vk0w
<                write(901,'('' Stopping.'')')
<                call termn8(myid,-1,ibufdim,nbuf,bou,nou)
<             end if
<             if(tinfw .ne. tinf) then
<                write(901,'('' WARNING:  changing tinf!'')')
<                write(901,'(''    old='',f12.5,'' new='',f12.5)')
<      +              tinfw,tinf
<             end if
<             call readtime(iccg,ibase,time)
---
>       do i=1,idim1
>       do k=1,kdim1
>       do j=1,jdim1
>         q(j,k,i,2)=q(j,k,i,2)/q(j,k,i,1)
>         q(j,k,i,3)=q(j,k,i,3)/q(j,k,i,1)
>         q(j,k,i,4)=q(j,k,i,4)/q(j,k,i,1)
>         q(j,k,i,5)=gm1*(q(j,k,i,5)-0.5*q(j,k,i,1)*(q(j,k,i,2)**2+
>      +             q(j,k,i,3)**2+q(j,k,i,4)**2))
>       enddo
>       enddo
>       enddo
>       end if
>       if (irghost .ne. 0) then
>         write(901,'('' cgns reading specific BC values'')')
>         call readbcs(iccg,ibase,igrid,idim,jdim,kdim,i2d,
>      +    qj0,qk0,qi0,vj0,vk0,vi0,tj0,tk0,ti0)
>       end if
>       if (iskip .gt. 0) then
>         call readhist(iccg,ibase,ncycmax,ntr,rms,clw,cdw,
>      +   cdpw,cdvw,cxw,cyw,czw,cmxw,cmyw,cmzw,fmdotw,cftmomw,
>      +   cftpw,cftvw,cfttotw,rmstr1,rmstr2,nneg1,nneg2)
>       end if
>         call readref(iccg,ibase,xmachw,reuew,
>      +   rho0w,c0w,vk0w,xlength0w,tinfw,alphw)
>         if (rho0w.ne.1. .or. c0w.ne.1. .or. xlength0w.ne.1.) then
>           write(901,'('' ERROR, cgns restart file has different'',
>      +      '' nondimensionalization'')')
>           write(901,'('' rho0w,c0w,xlength0w='',3e15.5)')
>      +      rho0w,c0w,xlength0w
>           write(901,'('' Stopping.'')')
>           call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>         end if
>         if (abs(vk0w-1.) .gt. 1.e-4) then
>           write(901,'('' ERROR, cgns restart file has different'',
>      +      '' nondimensionalization'')')
>           write(901,'('' vk0w='',e15.5)') vk0w
>           write(901,'('' Stopping.'')')
>           call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>         end if
>         if(tinfw .ne. tinf) then
>           write(901,'('' WARNING:  changing tinf!'')')
>           write(901,'(''    old='',f12.5,'' new='',f12.5)')
>      +     tinfw,tinf
>         end if
>         call readtime(iccg,ibase,time)
233,234c224,225
<          else
<             read(2) titlw,xmachw,jt,kt,it,alphw,reuew,ntr,time
---
>       else
>       read(2) titlw,xmachw,jt,kt,it,alphw,reuew,ntr,time
236,245c227,235
< c     97 format(1x,15hrestarting on a,i5,3h x ,i5,3h x ,i5,5h grid)
<             if (jt.ne.jdim .or. kt.ne.kdim .or. it.ne.idim) then
<                write(11,*) ' stopping.inconsistent restart grid indices'
<                write(11,*) ' block indices  idim,jdim,kdim =',idim,jdim,
<      $              kdim
<                write(11,*) ' restart indices  idim,jdim,kdim =',it,jt,kt
<                call termn8(myid,-1,ibufdim,nbuf,bou,nou)
<             end if
<          end if
< c     
---
> c  97 format(1x,15hrestarting on a,i5,3h x ,i5,3h x ,i5,5h grid)
>       if (jt.ne.jdim .or. kt.ne.kdim .or. it.ne.idim) then
>          write(11,*) ' stopping...inconsistent restart grid indices'
>          write(11,*) ' block indices  idim,jdim,kdim =',idim,jdim,kdim
>          write(11,*) ' restart indices  idim,jdim,kdim =',it,jt,kt
>          call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>       end if
>       end if
> c
248,251c238,241
< c     100 format(20a4/1x,e12.5,3i5,2e12.5,i5,e12.5)
< c     
<          ntt = ntr
< c     
---
> c 100 format(20a4/1x,e12.5,3i5,2e12.5,i5,e12.5)
> c
>       ntt = ntr
> c
253,262c243,252
< c     
<          if (ialphit.gt.0) then
<             alpha = alphw/radtodeg
< c     reset freestream for new alpha on host
<             call init_mast
<          end if
< c     
<          if (icgns .ne. 1) then
<             if (ntr.le.ncycmax) then
< c     
---
> c
>       if (ialphit.gt.0) then
>          alpha = alphw/radtodeg
> c        reset freestream for new alpha on host
>          call init_mast
>       end if
> c
>       if (icgns .ne. 1) then
>       if (ntr.le.ncycmax) then
> c
264,302c254,292
< c     
<                if (iskip.gt.0) then
<                   read(2) (rms(n),     n=1,ntr),(clw(n),     n=1,ntr),
<      .                 (cdw(n),     n=1,ntr),(cdpw(n),    n=1,ntr),
<      .                 (cdvw(n),    n=1,ntr),(cxw(n),     n=1,ntr),
<      .                 (cyw(n),     n=1,ntr),(czw(n),     n=1,ntr),
<      .                 (cmxw(n),    n=1,ntr),(cmyw(n),    n=1,ntr),
<      .                 (cmzw(n),    n=1,ntr),(fmdotw(n),  n=1,ntr),
<      .                 (cftmomw(n), n=1,ntr),(cftpw(n),   n=1,ntr),
<      .                 (cftvw(n),   n=1,ntr),(cfttotw(n), n=1,ntr)
<                end if
< c     
<             else
< c     
<                if (irest2 .eq. 1) then
<                   if (iskip.gt.0) then
<                      read(2) (dum,     n=1,ntr),(dum,     n=1,ntr),
<      .                    (dum,     n=1,ntr),(dum,     n=1,ntr),
<      .                    (dum,     n=1,ntr),(dum,     n=1,ntr),
<      .                    (dum,     n=1,ntr),(dum,     n=1,ntr),
<      .                    (dum,     n=1,ntr),(dum,     n=1,ntr),
<      .                    (dum,     n=1,ntr),(dum,     n=1,ntr),
<      .                    (dum,     n=1,ntr),(dum,     n=1,ntr),
<      .                    (dum,     n=1,ntr),(dum,     n=1,ntr)
<                   end if
<                else
< c     
<                   write(11,1239)
<  1239             format(/,1x,11hstopping...,
<      .                 40hprevious number of iterations computed >,
<      .                 1x,18h dimension ncycmax)
<                   write(11,*)' ntr,ncycmax = ',ntr,ncycmax
<                   write(11,*)' increase value of ncycmax to at LEAST ',
<      .                 ntr+ncycmax
<                   call termn8(myid,-1,ibufdim,nbuf,bou,nou)
< c     
<                end if
<             end if
<          end if
---
> c
>       if (iskip.gt.0) then
>          read(2) (rms(n),     n=1,ntr),(clw(n),     n=1,ntr),
>      .           (cdw(n),     n=1,ntr),(cdpw(n),    n=1,ntr),
>      .           (cdvw(n),    n=1,ntr),(cxw(n),     n=1,ntr),
>      .           (cyw(n),     n=1,ntr),(czw(n),     n=1,ntr),
>      .           (cmxw(n),    n=1,ntr),(cmyw(n),    n=1,ntr),
>      .           (cmzw(n),    n=1,ntr),(fmdotw(n),  n=1,ntr),
>      .           (cftmomw(n), n=1,ntr),(cftpw(n),   n=1,ntr),
>      .           (cftvw(n),   n=1,ntr),(cfttotw(n), n=1,ntr)
>       end if
> c
>       else
> c
>       if (irest2 .eq. 1) then
>       if (iskip.gt.0) then
>          read(2) (dum,     n=1,ntr),(dum,     n=1,ntr),
>      .           (dum,     n=1,ntr),(dum,     n=1,ntr),
>      .           (dum,     n=1,ntr),(dum,     n=1,ntr),
>      .           (dum,     n=1,ntr),(dum,     n=1,ntr),
>      .           (dum,     n=1,ntr),(dum,     n=1,ntr),
>      .           (dum,     n=1,ntr),(dum,     n=1,ntr),
>      .           (dum,     n=1,ntr),(dum,     n=1,ntr),
>      .           (dum,     n=1,ntr),(dum,     n=1,ntr)
>       end if
>       else
> c
>       write(11,1239)
>  1239 format(/,1x,11hstopping...,
>      .       40hprevious number of iterations computed >,
>      .       1x,18h dimension ncycmax)
>       write(11,*)' ntr,ncycmax = ',ntr,ncycmax
>       write(11,*)' increase value of ncycmax to at LEAST ',
>      .ntr+ncycmax
>       call termn8(myid,-1,ibufdim,nbuf,bou,nou)
> c
>       end if
>       end if
>       end if
304c294
< c     
---
> c
306c296
< c     
---
> c
308c298
< c     
---
> c
310c300
< c     
---
> c
315c305
<      .           nd_dest,mytag,mycomm,ierr)
---
>      .                    nd_dest,mytag,mycomm,ierr)
318,320c308,310
<      .           myhost,mytag,mycomm,istat,ierr)
< c     reset freestream for new alpha on compute  processors
<             call init_mast
---
>      .                    myhost,mytag,mycomm,istat,ierr)
> c        reset freestream for new alpha on compute  processors
>          call init_mast
323c313
< c     
---
> c
327c317
<      .        nd_dest,mytag,mycomm,ierr)
---
>      .                 nd_dest,mytag,mycomm,ierr)
330c320
<      .        myhost,mytag,mycomm,istat,ierr)
---
>      .                 myhost,mytag,mycomm,istat,ierr)
332c322
< c     
---
> c
336c326
<      .        nd_dest,mytag,mycomm,ierr)
---
>      .                 nd_dest,mytag,mycomm,ierr)
339c329
<      .        myhost,mytag,mycomm,istat,ierr)
---
>      .                 myhost,mytag,mycomm,istat,ierr)
341c331
< c     
---
> c
345c335
<      .        nd_dest,mytag,mycomm,ierr)
---
>      .                 nd_dest,mytag,mycomm,ierr)
348c338
<      .        myhost,mytag,mycomm,istat,ierr)
---
>      .                 myhost,mytag,mycomm,istat,ierr)
350c340
< c     
---
> c
354c344
<      .        nd_dest,mytag,mycomm,ierr)
---
>      .                 nd_dest,mytag,mycomm,ierr)
357c347
<      .        myhost,mytag,mycomm,istat,ierr)
---
>      .                 myhost,mytag,mycomm,istat,ierr)
359c349
< c     
---
> c
363c353
<      .        nd_dest,mytag,mycomm,ierr)
---
>      .                 nd_dest,mytag,mycomm,ierr)
366c356
<      .        myhost,mytag,mycomm,istat,ierr)
---
>      .                 myhost,mytag,mycomm,istat,ierr)
368c358
< c     
---
> c
372c362
<      .        nd_dest,mytag,mycomm,ierr)
---
>      .                 nd_dest,mytag,mycomm,ierr)
375c365
<      .        myhost,mytag,mycomm,istat,ierr)
---
>      .                 myhost,mytag,mycomm,istat,ierr)
377c367
< c     
---
> c
381c371
<      .        nd_dest,mytag,mycomm,ierr)
---
>      .                 nd_dest,mytag,mycomm,ierr)
384c374
<      .        myhost,mytag,mycomm,istat,ierr)
---
>      .                 myhost,mytag,mycomm,istat,ierr)
386c376
< c     
---
> c
390c380
<      .        nd_dest,mytag,mycomm,ierr)
---
>      .                 nd_dest,mytag,mycomm,ierr)
393c383
<      .        myhost,mytag,mycomm,istat,ierr)
---
>      .                 myhost,mytag,mycomm,istat,ierr)
395c385
< c     
---
> c
399c389
<      .        nd_dest,mytag,mycomm,ierr)
---
>      .                 nd_dest,mytag,mycomm,ierr)
402c392
<      .        myhost,mytag,mycomm,istat,ierr)
---
>      .                 myhost,mytag,mycomm,istat,ierr)
404c394
< c     
---
> c
408c398
<      .        nd_dest,mytag,mycomm,ierr)
---
>      .                 nd_dest,mytag,mycomm,ierr)
411c401
<      .        myhost,mytag,mycomm,istat,ierr)
---
>      .                 myhost,mytag,mycomm,istat,ierr)
413c403
< c     
---
> c
417c407
<      .        nd_dest,mytag,mycomm,ierr)
---
>      .                 nd_dest,mytag,mycomm,ierr)
420c410
<      .        myhost,mytag,mycomm,istat,ierr)
---
>      .                 myhost,mytag,mycomm,istat,ierr)
422c412
< c     
---
> c
426c416
<      .        nd_dest,mytag,mycomm,ierr)
---
>      .                 nd_dest,mytag,mycomm,ierr)
429c419
<      .        myhost,mytag,mycomm,istat,ierr)
---
>      .                 myhost,mytag,mycomm,istat,ierr)
431c421
< c     
---
> c
435c425
<      .        nd_dest,mytag,mycomm,ierr)
---
>      .                 nd_dest,mytag,mycomm,ierr)
438c428
<      .        myhost,mytag,mycomm,istat,ierr)
---
>      .                 myhost,mytag,mycomm,istat,ierr)
440c430
< c     
---
> c
444c434
<      .        nd_dest,mytag,mycomm,ierr)
---
>      .                 nd_dest,mytag,mycomm,ierr)
447c437
<      .        myhost,mytag,mycomm,istat,ierr)
---
>      .                 myhost,mytag,mycomm,istat,ierr)
449c439
< c     
---
> c
453c443
<      .        nd_dest,mytag,mycomm,ierr)
---
>      .                 nd_dest,mytag,mycomm,ierr)
456c446
<      .        myhost,mytag,mycomm,istat,ierr)
---
>      .                 myhost,mytag,mycomm,istat,ierr)
458c448
< c     
---
> c
462c452
<      .        nd_dest,mytag,mycomm,ierr)
---
>      .                 nd_dest,mytag,mycomm,ierr)
465c455
<      .        myhost,mytag,mycomm,istat,ierr)
---
>      .                 myhost,mytag,mycomm,istat,ierr)
467c457
< c     
---
> c
471c461
<      .        nd_dest,mytag,mycomm,ierr)
---
>      .                 nd_dest,mytag,mycomm,ierr)
474c464
<      .        myhost,mytag,mycomm,istat,ierr)
---
>      .                 myhost,mytag,mycomm,istat,ierr)
477c467
< c     
---
> c
479c469
< c     
---
> c
482c472
< c     
---
> c
484,489c474,477
<          if (icgns .ne. 1) then
<             read(2) ((((q(j,k,i,l),j=1,jdim1),k=1,kdim1),
<      $           i=1,idim1),l=1,5)
<             if (irghost .ne. 0)
<      .           read(2) ((((qi0(j,k,l,m),j=1,jdim1),k=1,kdim1),
<      $           l=1,5),m=1,4),
---
>       if (icgns .ne. 1) then
>          read(2) ((((q(j,k,i,l),j=1,jdim1),k=1,kdim1),i=1,idim1),l=1,5)
>          if (irghost .ne. 0)
>      .   read(2) ((((qi0(j,k,l,m),j=1,jdim1),k=1,kdim1),l=1,5),m=1,4),
492,493c480,481
<          end if
< c     
---
>       end if
> c
495,498c483,486
< c     
< c     fill in edge values of q array for safety before passing
< c     the data to the appropriate node
< c     
---
> c
> c        fill in edge values of q array for safety before passing
> c        the data to the appropriate node
> c
517c505
< c     
---
> c
519c507
< c     
---
> c
521c509
< c     
---
> c
523c511
< c     
---
> c
527c515
<      .        nd_dest,mytag,mycomm,ierr)
---
>      .                 nd_dest,mytag,mycomm,ierr)
530c518
<      .        myhost,mytag,mycomm,istat,ierr)
---
>      .                 myhost,mytag,mycomm,istat,ierr)
532c520
< c     
---
> c
537c525
<      .           nd_dest,mytag,mycomm,ierr)
---
>      .                    nd_dest,mytag,mycomm,ierr)
540c528
<      .           myhost,mytag,mycomm,istat,ierr)
---
>      .                    myhost,mytag,mycomm,istat,ierr)
542c530
< c     
---
> c
546c534
<      .           nd_dest,mytag,mycomm,ierr)
---
>      .                    nd_dest,mytag,mycomm,ierr)
549c537
<      .           myhost,mytag,mycomm,istat,ierr)
---
>      .                    myhost,mytag,mycomm,istat,ierr)
551c539
< c     
---
> c
555c543
<      .           nd_dest,mytag,mycomm,ierr)
---
>      .                    nd_dest,mytag,mycomm,ierr)
558c546
<      .           myhost,mytag,mycomm,istat,ierr)
---
>      .                    myhost,mytag,mycomm,istat,ierr)
561c549
< c     
---
> c
565c553
<      .        nd_dest,mytag,mycomm,ierr)
---
>      .                 nd_dest,mytag,mycomm,ierr)
568c556
<      .        myhost,mytag,mycomm,istat,ierr)
---
>      .                 myhost,mytag,mycomm,istat,ierr)
570c558
< c     
---
> c
574c562
<      .        nd_dest,mytag,mycomm,ierr)
---
>      .                 nd_dest,mytag,mycomm,ierr)
577c565
<      .        myhost,mytag,mycomm,istat,ierr)
---
>      .                 myhost,mytag,mycomm,istat,ierr)
579c567
< c     
---
> c
583c571
<      .        nd_dest,mytag,mycomm,ierr)
---
>      .                 nd_dest,mytag,mycomm,ierr)
586c574
<      .        myhost,mytag,mycomm,istat,ierr)
---
>      .                 myhost,mytag,mycomm,istat,ierr)
588c576
< c     
---
> c
591,654c579,637
<          n   = jdim*kdim
<          if (xmachw.ne.xmach) then
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),*)
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),'(''WARNING: fix-up taken for Mach '',
<      .           ''number inconsistancy in restart file'')')
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),'(''  scaling u,v,w by M(new)/M(old);'',
<      .           '' cp held fixed: M(new), M(old)= '',e12.4,e12.4)')
<      .           real(xmach),real(xmachw)
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),*)
<             do 1011 i=1,idim
< c     
< c     u/cref,v/cref,w/cref
< c     
< c     dir$ ivdep
<                do 1000 izz=1,n
<                   q(izz,1,i,2) = q(izz,1,i,2)*xmach/xmachw
<                   q(izz,1,i,3) = q(izz,1,i,3)*xmach/xmachw
<                   q(izz,1,i,4) = q(izz,1,i,4)*xmach/xmachw
< c     
< c     cp=constant
< c     
<                   q(izz,1,i,5) =  q(izz,1,i,5)*gamma
<                   q(izz,1,i,5) = (q(izz,1,i,5)-1.e0)*xmach*
<      $                 xmach/xmachw/xmachw
<                   q(izz,1,i,5) = (q(izz,1,i,5)+1.e0)/gamma
<  1000          continue
< c     
< c     check for negative density,pressure
< c     
<                do 3235 j=1,jdim
<                   do 3234 k=1,kdim
<                      if (real(q(j,k,i,1)).le.0. .or.
<      $                    real(q(j,k,i,5)).le.0.) then
<                         nou(1) = min(nou(1)+1,ibufdim)
<                         write(bou(nou(1),1),*) ' neg. density,pressure'
<                         nou(1) = min(nou(1)+1,ibufdim)
<                         write(bou(nou(1),1),*) real(q(j,k,i,1)),
<      $                       real(q(j,k,i,5))
<                         nou(1) = min(nou(1)+1,ibufdim)
<                         write(bou(nou(1),1),*) i,j,k
<                         call termn8(myid,-1,ibufdim,nbuf,bou,nou)
<                      end if
<  3234             continue
<  3235          continue
< c     
<  1011       continue
<          end if
<          if (reuew.ne.reue) then
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),*) 
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),'(''WARNING:  ReUe inconsistency in'',
<      .           '' restart file data Solution will proceed with '',
<      $           ''new value!'')')
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),'(''  ReUe(new), ReUe(old)= '',
<      .           e12.4,e12.4)') real(reue),real(reuew)
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),*)
<          end if
---
>       n   = jdim*kdim
>       if (xmachw.ne.xmach) then
>       nou(1) = min(nou(1)+1,ibufdim)
>       write(bou(nou(1),1),*)
>       nou(1) = min(nou(1)+1,ibufdim)
>       write(bou(nou(1),1),'(''WARNING: fix-up taken for Mach number'',
>      .           '' inconsistancy in restart file'')')
>       nou(1) = min(nou(1)+1,ibufdim)
>       write(bou(nou(1),1),'(''  scaling u,v,w by M(new)/M(old);'',
>      .        '' cp held fixed: M(new), M(old)= '',e12.4,e12.4)')
>      .              real(xmach),real(xmachw)
>       nou(1) = min(nou(1)+1,ibufdim)
>       write(bou(nou(1),1),*)
>       do 1011 i=1,idim
> c
> c      u/cref,v/cref,w/cref
> c
> cdir$ ivdep
>       do 1000 izz=1,n
>       q(izz,1,i,2) = q(izz,1,i,2)*xmach/xmachw
>       q(izz,1,i,3) = q(izz,1,i,3)*xmach/xmachw
>       q(izz,1,i,4) = q(izz,1,i,4)*xmach/xmachw
> c
> c      cp=constant
> c
>       q(izz,1,i,5) =  q(izz,1,i,5)*gamma
>       q(izz,1,i,5) = (q(izz,1,i,5)-1.e0)*xmach*xmach/xmachw/xmachw
>       q(izz,1,i,5) = (q(izz,1,i,5)+1.e0)/gamma
>  1000 continue
> c
> c      check for negative density,pressure
> c
>       do 3234 j=1,jdim
>       do 3234 k=1,kdim
>       if (real(q(j,k,i,1)).le.0. .or. real(q(j,k,i,5)).le.0.) then
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),*) ' neg. density,pressure'
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),*) real(q(j,k,i,1)),real(q(j,k,i,5))
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),*) i,j,k
>          call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>       end if
>  3234 continue
> c
>  1011 continue
>       end if
>       if (reuew.ne.reue) then
>       nou(1) = min(nou(1)+1,ibufdim)
>       write(bou(nou(1),1),*) 
>       nou(1) = min(nou(1)+1,ibufdim)
>       write(bou(nou(1),1),'(''WARNING:  ReUe inconsistency in'',
>      .'' restart file data Solution will proceed with new value!'')')
>       nou(1) = min(nou(1)+1,ibufdim)
>       write(bou(nou(1),1),'(''  ReUe(new), ReUe(old)= '',
>      . e12.4,e12.4)') real(reue),real(reuew)
>       nou(1) = min(nou(1)+1,ibufdim)
>       write(bou(nou(1),1),*)
>       end if
656c639
< c     
---
> c
659c642
< c     
---
> c
661c644
< c     
---
> c
665c648
<          if (icgns .eq. 1) then
---
>       if (icgns .eq. 1) then
667,688c650,671
<             call readeqn(iccg,ibase,igrid,iv1,iv2,iv3,gammaw,
<      +           prw,prtw,cbarw)
<             if(gammaw .ne. gamma) then
<                write(901,'('' WARNING:  changing gamma!'')')
<                write(901,'(''    old='',f12.5,'' new='',f12.5)')
<      +              gammaw,gamma
<             end if
<             if(prw .ne. pr) then
<                write(901,'('' WARNING:  changing pr!'')')
<                write(901,'(''    old='',f12.5,'' new='',f12.5)')
<      +              prw,pr
<             end if
<             if(prtw .ne. prt) then
<                write(901,'('' WARNING:  changing prt!'')')
<                write(901,'(''    old='',f12.5,'' new='',f12.5)')
<      +              prtw,prt
<             end if
<             if(cbarw .ne. cbar) then
<                write(901,'('' WARNING:  changing cbar!'')')
<                write(901,'(''    old='',f12.5,'' new='',f12.5)')
<      +              cbarw,cbar
<             end if
---
>         call readeqn(iccg,ibase,igrid,iv1,iv2,iv3,gammaw,
>      +    prw,prtw,cbarw)
>         if(gammaw .ne. gamma) then
>           write(901,'('' WARNING:  changing gamma!'')')
>           write(901,'(''    old='',f12.5,'' new='',f12.5)')
>      +     gammaw,gamma
>         end if
>         if(prw .ne. pr) then
>           write(901,'('' WARNING:  changing pr!'')')
>           write(901,'(''    old='',f12.5,'' new='',f12.5)')
>      +     prw,pr
>         end if
>         if(prtw .ne. prt) then
>           write(901,'('' WARNING:  changing prt!'')')
>           write(901,'(''    old='',f12.5,'' new='',f12.5)')
>      +     prtw,prt
>         end if
>         if(cbarw .ne. cbar) then
>           write(901,'('' WARNING:  changing cbar!'')')
>           write(901,'(''    old='',f12.5,'' new='',f12.5)')
>      +     cbarw,cbar
>         end if
690,692c673,675
<          else
<             read(2) iv1,iv2,iv3
<          end if
---
>       else
>       read(2) iv1,iv2,iv3
>       end if
695,696c678,679
< c     
<       mytag = itag_iv1 + nbl
---
> c
>        mytag = itag_iv1 + nbl
699c682
<      .        nd_dest,mytag,mycomm,ierr)
---
>      .                 nd_dest,mytag,mycomm,ierr)
702c685
<      .        myhost,mytag,mycomm,istat,ierr)
---
>      .                 myhost,mytag,mycomm,istat,ierr)
707c690
<      .        nd_dest,mytag,mycomm,ierr)
---
>      .                 nd_dest,mytag,mycomm,ierr)
710c693
<      .        myhost,mytag,mycomm,istat,ierr)
---
>      .                 myhost,mytag,mycomm,istat,ierr)
715c698
<      .        nd_dest,mytag,mycomm,ierr)
---
>      .                 nd_dest,mytag,mycomm,ierr)
718c701
<      .        myhost,mytag,mycomm,istat,ierr)
---
>      .                 myhost,mytag,mycomm,istat,ierr)
720c703
< c     
---
> c
723c706
<      .     iv3.ne.ivisc(3)) then
---
>      .    iv3.ne.ivisc(3)) then
725c708
<          if (myid.eq.mblk2nd(nbl)) then
---
>       if (myid.eq.mblk2nd(nbl)) then
727,733c710,716
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),*)
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),'('' WARNING: restarting block'',i4,
<      .           '' with DIFFERENT'',
<      .           '' ivisc: old='',3i3,'', new='',3i3)') nbl,iv1,iv2,
<      .           iv3,ivisc(1),ivisc(2),ivisc(3)
---
>         nou(1) = min(nou(1)+1,ibufdim)
>         write(bou(nou(1),1),*)
>         nou(1) = min(nou(1)+1,ibufdim)
>         write(bou(nou(1),1),'('' WARNING: restarting block'',i4,
>      .    '' with DIFFERENT'',
>      .    '' ivisc: old='',3i3,'', new='',3i3)') nbl,iv1,iv2,iv3,
>      .    ivisc(1),ivisc(2),ivisc(3)
735c718
<          end if
---
>       end if
738c721
< c     
---
> c
740c723
< c     
---
> c
742c725
<          if (irest2 .eq. 1) then
---
>       if (irest2 .eq. 1) then
744c727
<             if (myid.eq.myhost) then
---
>          if (myid.eq.myhost) then
746,749c729,732
<                if (icgns .ne. 1) then
<                   read(2) (dum,n=1,ntr),(dum,n=1,ntr),
<      .                 (idum,n=1,ntr),(idum,n=1,ntr)
<                end if
---
>       if (icgns .ne. 1) then
>           read(2) (dum,n=1,ntr),(dum,n=1,ntr),
>      .            (idum,n=1,ntr),(idum,n=1,ntr)
>       end if
751c734
<             end if
---
>          end if
753c736
<          else
---
>       else
755c738
<             if (myid.eq.myhost) then
---
>          if (myid.eq.myhost) then
757,760c740,743
<                if (icgns .ne. 1) then
<                   read(2) (rmstr1(n),n=1,ntr),(rmstr2(n),n=1,ntr),
<      .                 (nneg1(n), n=1,ntr),(nneg2(n), n=1,ntr)
<                end if
---
>       if (icgns .ne. 1) then
>           read(2) (rmstr1(n),n=1,ntr),(rmstr2(n),n=1,ntr),
>      .            (nneg1(n), n=1,ntr),(nneg2(n), n=1,ntr)
>       end if
762,800d744
<             end if
< c     
<             mytag = itag_rmstr1 + nbl
<             if (myid .eq. myhost) then
<                call MPI_Send(rmstr1,ntt,MY_MPI_REAL,
<      .              nd_dest,mytag,mycomm,ierr)
<             else if (myid .eq. mblk2nd(nbl)) then
<                call MPI_Recv(rmstr1,ntt,MY_MPI_REAL,
<      .              myhost,mytag,mycomm,istat,ierr)
<             end if
< c     
<             mytag = itag_rmstr2 + nbl
<             if (myid .eq. myhost) then
<                call MPI_Send(rmstr2,ntt,MY_MPI_REAL,
<      .              nd_dest,mytag,mycomm,ierr)
<             else if (myid .eq. mblk2nd(nbl)) then
<                call MPI_Recv(rmstr2,ntt,MY_MPI_REAL,
<      .              myhost,mytag,mycomm,istat,ierr)
<             end if
< c     
<             mytag = itag_nneg1 + nbl
<             if (myid .eq. myhost) then
<                call MPI_Send(nneg1,ntt,MPI_INTEGER,
<      .              nd_dest,mytag,mycomm,ierr)
<             else if (myid .eq. mblk2nd(nbl)) then
<                call MPI_Recv(nneg1,ntt,MPI_INTEGER,
<      .              myhost,mytag,mycomm,istat,ierr)
<             end if
< c     
<             mytag = itag_nneg2 + nbl
<             if (myid .eq. myhost) then
<                call MPI_Send(nneg2,ntt,MPI_INTEGER,
<      .              nd_dest,mytag,mycomm,ierr)
<             else if (myid .eq. mblk2nd(nbl)) then
<                call MPI_Recv(nneg2,ntt,MPI_INTEGER,
<      .              myhost,mytag,mycomm,istat,ierr)
<             end if
< c     
< #endif
801a746,783
> c
>          mytag = itag_rmstr1 + nbl
>          if (myid .eq. myhost) then
>             call MPI_Send(rmstr1,ntt,MY_MPI_REAL,
>      .                    nd_dest,mytag,mycomm,ierr)
>          else if (myid .eq. mblk2nd(nbl)) then
>             call MPI_Recv(rmstr1,ntt,MY_MPI_REAL,
>      .                    myhost,mytag,mycomm,istat,ierr)
>          end if
> c
>          mytag = itag_rmstr2 + nbl
>          if (myid .eq. myhost) then
>             call MPI_Send(rmstr2,ntt,MY_MPI_REAL,
>      .                    nd_dest,mytag,mycomm,ierr)
>          else if (myid .eq. mblk2nd(nbl)) then
>             call MPI_Recv(rmstr2,ntt,MY_MPI_REAL,
>      .                    myhost,mytag,mycomm,istat,ierr)
>          end if
> c
>          mytag = itag_nneg1 + nbl
>          if (myid .eq. myhost) then
>             call MPI_Send(nneg1,ntt,MPI_INTEGER,
>      .                    nd_dest,mytag,mycomm,ierr)
>          else if (myid .eq. mblk2nd(nbl)) then
>             call MPI_Recv(nneg1,ntt,MPI_INTEGER,
>      .                    myhost,mytag,mycomm,istat,ierr)
>          end if
> c
>          mytag = itag_nneg2 + nbl
>          if (myid .eq. myhost) then
>             call MPI_Send(nneg2,ntt,MPI_INTEGER,
>      .                    nd_dest,mytag,mycomm,ierr)
>          else if (myid .eq. mblk2nd(nbl)) then
>             call MPI_Recv(nneg2,ntt,MPI_INTEGER,
>      .                    myhost,mytag,mycomm,istat,ierr)
>          end if
> c
> #endif
803c785,786
< c     
---
>       end if
> c
809c792
<      .     (ivmx.ge.6.and.ivmx.le.15)) iread = 1
---
>      .    (ivmx.ge.6.and.ivmx.le.15)) iread = 1
812,815c795,798
<          call readturb(iccg,ibase,igrid,nsoluse,idima,jdima,kdima,
<      +        idim,jdim,kdim,wk,iv1,iv2,iv3,iread,irind,jrind,krind,
<      +        i2d,ivmx,xmachw,reuew,vist3d,tursav,smin,xjb,xkb,
<      +        tursav(1,1,1,2),blnum,cmuv)
---
>         call readturb(iccg,ibase,igrid,nsoluse,idima,jdima,kdima,
>      +    idim,jdim,kdim,wk,iv1,iv2,iv3,iread,irind,jrind,krind,i2d,
>      +    ivmx,xmachw,reuew,vist3d,tursav,smin,xjb,xkb,tursav(1,1,1,2),
>      +    blnum,cmuv)
819c802
< c     
---
> c
822,842c805,814
< c     (isminc=0 do not compute smin, do not call initvist
< c     1 compute smin, call initvist
< c     2 compute smin, do not call initvist
< c     3 do not compute smin, call initvist)
< c     Need to call initvist if start from scratch or restart from a
< c     different turb model.  Need to call smin if start from scratch
< c     or restart from a non-field-eqn turb model or if restart but 
< c     mesh sequencing up to a finer level.
< c     
<          if (iv1.ge.2 .or. iv2.ge.2 .or. iv3.ge.2) then
< #if defined DIST_MPI
<             if (myid.eq.myhost) then
< #endif
<                if (icgns .ne. 1) then
<                   read(2) (((dum,j=1,jdim1),k=1,kdim1),i=1,idim1)
<                   if (irghost .ne. 0)
<      .                 read(2) ((((dum,j=1,jdim),k=1,kdim),l=1,1),
<      $                 m=1,4),
<      .                 ((((dum,k=1,kdim),i=1,idim1),l=1,1),m=1,4),
<      .                 ((((dum,j=1,jdim),i=1,idim1),l=1,1),m=1,4)
<                end if
---
> c       (isminc=0 do not compute smin, do not call initvist
> c               1 compute smin, call initvist
> c               2 compute smin, do not call initvist
> c               3 do not compute smin, call initvist)
> c            Need to call initvist if start from scratch or restart from a
> c            different turb model.  Need to call smin if start from scratch
> c            or restart from a non-field-eqn turb model or if restart but 
> c            mesh sequencing up to a finer level.
> c
>       if (iv1.ge.2 .or. iv2.ge.2 .or. iv3.ge.2) then
844c816,826
<             end if
---
>          if (myid.eq.myhost) then
> #endif
>          if (icgns .ne. 1) then
>          read(2) (((dum,j=1,jdim1),k=1,kdim1),i=1,idim1)
>          if (irghost .ne. 0)
>      .   read(2) ((((dum,j=1,jdim),k=1,kdim),l=1,1),m=1,4),
>      .           ((((dum,k=1,kdim),i=1,idim1),l=1,1),m=1,4),
>      .           ((((dum,j=1,jdim),i=1,idim1),l=1,1),m=1,4)
>          end if
> #if defined DIST_MPI
>          end if
845a828,841
>       end if
> c
>       if (iv1.ge.4 .or. iv2.ge.4 .or. iv3.ge.4) then
> #if defined DIST_MPI
>          if (myid.eq.myhost) then
> #endif
>          if (icgns .ne. 1) then
>          read(2) ((((dum,j=1,jdim1),k=1,kdim1),i=1,idim1),
>      .           m=1,2)
>          if (irghost .ne. 0)
>      .   read(2) ((((dum,j=1,jdim),k=1,kdim),l=1,2),m=1,4),
>      .           ((((dum,k=1,kdim),i=1,idim1),l=1,2),m=1,4),
>      .           ((((dum,j=1,jdim),i=1,idim1),l=1,2),m=1,4)
>          read(2) (((smin(j,k,i),j=1,jdim1),k=1,kdim1),i=1,idim1)
847,848d842
< c     
<          if (iv1.ge.4 .or. iv2.ge.4 .or. iv3.ge.4) then
850c844,854
<             if (myid.eq.myhost) then
---
>         end if
> c
>         mytag = itag_smin + nbl
>         if (myid .eq. myhost) then
>            call MPI_Send(smin,jkim,MY_MPI_REAL,
>      .                   nd_dest,mytag,mycomm,ierr)
>         else if (myid .eq. mblk2nd(nbl)) then
>            call MPI_Recv(smin,jkim,MY_MPI_REAL,
>      .                   myhost,mytag,mycomm,istat,ierr)
>         end if
> c
852,862c856
<                if (icgns .ne. 1) then
<                   read(2) ((((dum,j=1,jdim1),k=1,kdim1),i=1,idim1),
<      .                 m=1,2)
<                   if (irghost .ne. 0)
<      .                 read(2) ((((dum,j=1,jdim),k=1,kdim),l=1,2),
<      $                 m=1,4),
<      .                 ((((dum,k=1,kdim),i=1,idim1),l=1,2),m=1,4),
<      .                 ((((dum,j=1,jdim),i=1,idim1),l=1,2),m=1,4)
<                   read(2) (((smin(j,k,i),j=1,jdim1),k=1,kdim1),
<      $                 i=1,idim1)
<                end if
---
>          if (iv1.eq.4 .or. iv2.eq.4 .or. iv3.eq.4) then
864,874c858
<             end if
< c     
<             mytag = itag_smin + nbl
<             if (myid .eq. myhost) then
<                call MPI_Send(smin,jkim,MY_MPI_REAL,
<      .              nd_dest,mytag,mycomm,ierr)
<             else if (myid .eq. mblk2nd(nbl)) then
<                call MPI_Recv(smin,jkim,MY_MPI_REAL,
<      .              myhost,mytag,mycomm,istat,ierr)
<             end if
< c     
---
>            if (myid.eq.myhost) then
876c860,864
<             if (iv1.eq.4 .or. iv2.eq.4 .or. iv3.eq.4) then
---
>          if (icgns .ne. 1) then
>            read(2) (((dum,j=1,jdim1),k=1,kdim1),i=1,idim1)
>            read(2) (((dum,j=1,jdim1),k=1,kdim1),i=1,idim1)
>            read(2) (((dum,j=1,jdim1),k=1,kdim1),i=1,idim1)
>          end if
878c866
<                if (myid.eq.myhost) then
---
>            end if
880,884c868,872
<                   if (icgns .ne. 1) then
<                      read(2) (((dum,j=1,jdim1),k=1,kdim1),i=1,idim1)
<                      read(2) (((dum,j=1,jdim1),k=1,kdim1),i=1,idim1)
<                      read(2) (((dum,j=1,jdim1),k=1,kdim1),i=1,idim1)
<                   end if
---
>          end if
>          if (iv1.eq.8 .or. iv2.eq.8 .or. iv3.eq.8  .or.
>      .       iv1.eq.9 .or. iv2.eq.9 .or. iv3.eq.9  .or.
>      .       iv1.eq.13.or. iv2.eq.13.or. iv3.eq.13 .or.
>      .       iv1.eq.14.or. iv2.eq.14.or. iv3.eq.14) then
886c874
<                end if
---
>            if (myid.eq.myhost) then
888,898c876,878
<             end if
<             if (iv1.eq.8 .or. iv2.eq.8 .or. iv3.eq.8  .or.
<      .           iv1.eq.9 .or. iv2.eq.9 .or. iv3.eq.9  .or.
<      .           iv1.eq.13.or. iv2.eq.13.or. iv3.eq.13 .or.
<      .           iv1.eq.14.or. iv2.eq.14.or. iv3.eq.14) then
< #if defined DIST_MPI
<                if (myid.eq.myhost) then
< #endif
<                   if (icgns .ne. 1) then
<                      read(2) (((dum,j=1,jdim1),k=1,kdim1),i=1,idim1)
<                   end if
---
>          if (icgns .ne. 1) then
>            read(2) (((dum,j=1,jdim1),k=1,kdim1),i=1,idim1)
>          end if
900c880
<                end if
---
>            end if
902,904c882,884
<             end if
<             if ((ivisc(1).ge.5.or.ivisc(2).ge.5.or.ivisc(3).ge.5)
<      .           .and. isminc.ne.2 .and. ivmxold.ne.4) isminc=3
---
>          end if
>          if ((ivisc(1).ge.5.or.ivisc(2).ge.5.or.ivisc(3).ge.5)
>      .        .and. isminc.ne.2 .and. ivmxold.ne.4) isminc=3
910,914c890,894
< c     
<          if (isminc .ne. 2) then
<             isminc=0
<          end if
<          if (iv1.ge.2 .or. iv2.ge.2 .or. iv3.ge.2) then
---
> c
>       if (isminc .ne. 2) then
>         isminc=0
>       end if
>       if (iv1.ge.2 .or. iv2.ge.2 .or. iv3.ge.2) then
916c896
<             if (myid.eq.mblk2nd(nbl)) then
---
>          if (myid.eq.mblk2nd(nbl)) then
918,920c898,900
<                nou(1) = min(nou(1)+1,ibufdim)
<                write(bou(nou(1),1),'('' reading vist3d data from '',
<      .              '' restart file, block'',i5)') nbl
---
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),'('' reading vist3d data from restart'',
>      .   '' file, block'',i5)') nbl
922,923c902,903
<             end if
<             if (myid.eq.myhost) then
---
>          end if
>          if (myid.eq.myhost) then
925,935c905,911
<                if (icgns .ne. 1) then
<                   read(2) (((vist3d(j,k,i),j=1,jdim1),k=1,kdim1),
<      $                 i=1,idim1)
<                   if (irghost .ne. 0)
<      .                 read(2) ((((vi0(j,k,l,m),j=1,jdim),k=1,kdim),
<      $                 l=1,1),m=1,4),
<      .                 ((((vj0(k,i,l,m),k=1,kdim),i=1,idim1),l=1,1),
<      $                 m=1,4),
<      .                 ((((vk0(j,i,l,m),j=1,jdim),i=1,idim1),l=1,1),
<      $                 m=1,4)
<                end if
---
>          if (icgns .ne. 1) then
>          read(2) (((vist3d(j,k,i),j=1,jdim1),k=1,kdim1),i=1,idim1)
>          if (irghost .ne. 0)
>      .   read(2) ((((vi0(j,k,l,m),j=1,jdim),k=1,kdim),l=1,1),m=1,4),
>      .           ((((vj0(k,i,l,m),k=1,kdim),i=1,idim1),l=1,1),m=1,4),
>      .           ((((vk0(j,i,l,m),j=1,jdim),i=1,idim1),l=1,1),m=1,4)
>          end if
936a913,931
>          end if
> c
>          mytag = itag_qv + nbl
>          if (myid .eq. myhost) then
>             call MPI_Send(vist3d,jki,MY_MPI_REAL,
>      .                    nd_dest,mytag,mycomm,ierr)
>          else if (myid .eq. mblk2nd(nbl)) then
>             call MPI_Recv(vist3d,jki,MY_MPI_REAL,
>      .                    myhost,mytag,mycomm,istat,ierr)
>          end if
> c
>          if (irghost .ne.0) then
>             mytag = itag_vj0 + nbl
>             if (myid .eq. myhost) then
>                call MPI_Send(vj0,ki4,MY_MPI_REAL,
>      .                       nd_dest,mytag,mycomm,ierr)
>             else if (myid .eq. mblk2nd(nbl)) then
>                call MPI_Recv(vj0,ki4,MY_MPI_REAL,
>      .                       myhost,mytag,mycomm,istat,ierr)
938,939c933,934
< c     
<             mytag = itag_qv + nbl
---
> c
>             mytag = itag_vk0 + nbl
941,942c936,937
<                call MPI_Send(vist3d,jki,MY_MPI_REAL,
<      .              nd_dest,mytag,mycomm,ierr)
---
>                call MPI_Send(vk0,ji4,MY_MPI_REAL,
>      .                       nd_dest,mytag,mycomm,ierr)
944,945c939,940
<                call MPI_Recv(vist3d,jki,MY_MPI_REAL,
<      .              myhost,mytag,mycomm,istat,ierr)
---
>                call MPI_Recv(vk0,ji4,MY_MPI_REAL,
>      .                       myhost,mytag,mycomm,istat,ierr)
947,974c942,949
< c     
<             if (irghost .ne.0) then
<                mytag = itag_vj0 + nbl
<                if (myid .eq. myhost) then
<                   call MPI_Send(vj0,ki4,MY_MPI_REAL,
<      .                 nd_dest,mytag,mycomm,ierr)
<                else if (myid .eq. mblk2nd(nbl)) then
<                   call MPI_Recv(vj0,ki4,MY_MPI_REAL,
<      .                 myhost,mytag,mycomm,istat,ierr)
<                end if
< c     
<                mytag = itag_vk0 + nbl
<                if (myid .eq. myhost) then
<                   call MPI_Send(vk0,ji4,MY_MPI_REAL,
<      .                 nd_dest,mytag,mycomm,ierr)
<                else if (myid .eq. mblk2nd(nbl)) then
<                   call MPI_Recv(vk0,ji4,MY_MPI_REAL,
<      .                 myhost,mytag,mycomm,istat,ierr)
<                end if
< c     
<                mytag = itag_vi0 + nbl
<                if (myid .eq. myhost) then
<                   call MPI_Send(vi0,jk4,MY_MPI_REAL,
<      .                 nd_dest,mytag,mycomm,ierr)
<                else if (myid .eq. mblk2nd(nbl)) then
<                   call MPI_Recv(vi0,jk4,MY_MPI_REAL,
<      .                 myhost,mytag,mycomm,istat,ierr)
<                end if
---
> c
>             mytag = itag_vi0 + nbl
>             if (myid .eq. myhost) then
>                call MPI_Send(vi0,jk4,MY_MPI_REAL,
>      .                       nd_dest,mytag,mycomm,ierr)
>             else if (myid .eq. mblk2nd(nbl)) then
>                call MPI_Recv(vi0,jk4,MY_MPI_REAL,
>      .                       myhost,mytag,mycomm,istat,ierr)
976,977d950
< c     
< #endif
979c952,955
<          if (iv1.ge.4 .or. iv2.ge.4 .or. iv3.ge.4) then
---
> c
> #endif
>       end if
>       if (iv1.ge.4 .or. iv2.ge.4 .or. iv3.ge.4) then
981c957
<             if (myid.eq.mblk2nd(nbl)) then
---
>         if (myid.eq.mblk2nd(nbl)) then
983,986c959,962
<                nou(1) = min(nou(1)+1,ibufdim)
<                write(bou(nou(1),1),'('' reading field eqn turb '',
<      .              '' quantities from restart file'',
<      .              '', block'',i5)') nbl
---
>         nou(1) = min(nou(1)+1,ibufdim)
>         write(bou(nou(1),1),'('' reading field eqn turb quantities'',
>      .             '' from restart file'',
>      .             '', block'',i5)') nbl
988,989c964,965
<             end if
<             if (myid.eq.myhost) then
---
>         end if
>         if (myid.eq.myhost) then
991,1063c967,1029
<                if (icgns .ne. 1) then
<                   read(2) ((((tursav(j,k,i,m),j=1,jdim1),k=1,kdim1),
<      $                 i=1,idim1),
<      .                 m=1,2)
<                   if (irghost .ne. 0)
<      .                 read(2) ((((ti0(j,k,l,m),j=1,jdim),k=1,kdim),
<      $                 l=1,2),m=1,4),
<      .                 ((((tj0(k,i,l,m),k=1,kdim),i=1,idim1),l=1,2),
<      $                 m=1,4),
<      .                 ((((tk0(j,i,l,m),j=1,jdim),i=1,idim1),l=1,2),
<      $                 m=1,4)
<                end if
<                if ((iv1.eq.6.or.iv2.eq.6.or.iv3.eq.6.or.iv1.eq.7.or.
<      .              iv2.eq.7.or.iv3.eq.7) .and. (ivisc(1).eq.8.or.
<      .              ivisc(2).eq.8.or.ivisc(3).eq.8.or.ivisc(1).eq.12
<      .              .or.ivisc(2).eq.12.or.ivisc(3).eq.12.or.
<      .              ivisc(1).eq.14.or.ivisc(2).eq.14.or.
<      $              ivisc(3).eq.14)) then
<                   do i=1,idim1
<                      do k=1,kdim1
<                         do j=1,jdim1
<                            tursav(j,k,i,1)=tursav(j,k,i,1)*0.09
<                         enddo
<                      enddo
<                   enddo
<                end if
<                if ((ivisc(1).eq.6.or.ivisc(2).eq.6.or.ivisc(3).eq.6
<      .              .or.ivisc(1).eq.7.or.ivisc(2).eq.7.or.
<      $              ivisc(3).eq.7) .and.
<      .              (iv1.eq.8.or.iv2.eq.8.or.iv3.eq.8.or.
<      .              iv1.eq.12.or.iv2.eq.12.or.iv3.eq.12.or.
<      .              iv1.eq.14.or.iv2.eq.14.or.iv3.eq.14)) then
<                   do i=1,idim1
<                      do k=1,kdim1
<                         do j=1,jdim1
<                            tursav(j,k,i,1)=tursav(j,k,i,1)/0.09
<                         enddo
<                      enddo
<                   enddo
<                end if
<                if ((ivisc(1).eq.8.or.ivisc(2).eq.8.or.ivisc(3).eq.8
<      .              .or.ivisc(1).eq.12.or.ivisc(2).eq.12.or.ivisc(3)
<      $              .eq.12.or.ivisc(1).eq.14.or.ivisc(2).eq.14.or.
<      $              ivisc(3).eq.14)
<      .              .and.(iv1.eq.9.or.iv2.eq.9.or.iv3.eq.9.or.
<      .              iv1.eq.10.or.iv2.eq.10.or.iv3.eq.10.or.
<      .              iv1.eq.11.or.iv2.eq.11.or.iv3.eq.11.or.
<      .              iv1.eq.13.or.iv2.eq.13.or.iv3.eq.13.or.
<      .              iv1.eq.15.or.iv2.eq.15.or.iv3.eq.15)) then
<                   do i=1,idim1
<                      do k=1,kdim1
<                         do j=1,jdim1
<                            tursav(j,k,i,1)=tursav(j,k,i,1)/
<      $                          tursav(j,k,i,2)
< c     Limit new omega to handle extremes
<                            tursav(j,k,i,1)=
<      $                          ccmincr(tursav(j,k,i,1),1.)
<                         enddo
<                      enddo
<                   enddo
<                end if
<                if ((ivisc(1).eq.6.or.ivisc(2).eq.6.or.ivisc(3).eq.6
<      .              .or.ivisc(1).eq.7.or.ivisc(2).eq.7.or.
<      $              ivisc(3).eq.7) .and.
<      .              (iv1.eq.9.or.iv2.eq.9.or.iv3.eq.9.or.
<      .              iv1.eq.10.or.iv2.eq.10.or.iv3.eq.10.or.
<      .              iv1.eq.11.or.iv2.eq.11.or.iv3.eq.11.or.
<      .              iv1.eq.13.or.iv2.eq.13.or.iv3.eq.13.or.
<      .              iv1.eq.15.or.iv2.eq.15.or.iv3.eq.15)) then
<                   do i=1,idim1
<                      do k=1,kdim1
<                         do j=1,jdim1
<                            tursav(j,k,i,1)=tursav(j,k,i,1)/
---
>          if (icgns .ne. 1) then
>         read(2) ((((tursav(j,k,i,m),j=1,jdim1),k=1,kdim1),i=1,idim1),
>      .          m=1,2)
>          if (irghost .ne. 0)
>      .   read(2) ((((ti0(j,k,l,m),j=1,jdim),k=1,kdim),l=1,2),m=1,4),
>      .           ((((tj0(k,i,l,m),k=1,kdim),i=1,idim1),l=1,2),m=1,4),
>      .           ((((tk0(j,i,l,m),j=1,jdim),i=1,idim1),l=1,2),m=1,4)
>          end if
>         if ((iv1.eq.6.or.iv2.eq.6.or.iv3.eq.6.or.iv1.eq.7.or.
>      .       iv2.eq.7.or.iv3.eq.7) .and. (ivisc(1).eq.8.or.
>      .       ivisc(2).eq.8.or.ivisc(3).eq.8.or.ivisc(1).eq.12.or.
>      .       ivisc(2).eq.12.or.ivisc(3).eq.12.or.
>      .       ivisc(1).eq.14.or.ivisc(2).eq.14.or.ivisc(3).eq.14)) then
>           do i=1,idim1
>             do k=1,kdim1
>               do j=1,jdim1
>                 tursav(j,k,i,1)=tursav(j,k,i,1)*0.09
>               enddo
>             enddo
>           enddo
>         end if
>         if ((ivisc(1).eq.6.or.ivisc(2).eq.6.or.ivisc(3).eq.6.or.
>      .       ivisc(1).eq.7.or.ivisc(2).eq.7.or.ivisc(3).eq.7) .and.
>      .       (iv1.eq.8.or.iv2.eq.8.or.iv3.eq.8.or.
>      .        iv1.eq.12.or.iv2.eq.12.or.iv3.eq.12.or.
>      .        iv1.eq.14.or.iv2.eq.14.or.iv3.eq.14)) then
>           do i=1,idim1
>             do k=1,kdim1
>               do j=1,jdim1
>                 tursav(j,k,i,1)=tursav(j,k,i,1)/0.09
>               enddo
>             enddo
>           enddo
>         end if
>         if ((ivisc(1).eq.8.or.ivisc(2).eq.8.or.ivisc(3).eq.8.or.
>      .       ivisc(1).eq.12.or.ivisc(2).eq.12.or.ivisc(3).eq.12
>      .   .or.ivisc(1).eq.14.or.ivisc(2).eq.14.or.ivisc(3).eq.14)
>      .  .and.(iv1.eq.9.or.iv2.eq.9.or.iv3.eq.9.or.
>      .        iv1.eq.10.or.iv2.eq.10.or.iv3.eq.10.or.
>      .        iv1.eq.11.or.iv2.eq.11.or.iv3.eq.11.or.
>      .        iv1.eq.13.or.iv2.eq.13.or.iv3.eq.13.or.
>      .        iv1.eq.15.or.iv2.eq.15.or.iv3.eq.15)) then
>           do i=1,idim1
>             do k=1,kdim1
>               do j=1,jdim1
>                 tursav(j,k,i,1)=tursav(j,k,i,1)/tursav(j,k,i,2)
> c               Limit new omega to handle extremes
>                 tursav(j,k,i,1)=ccmincr(tursav(j,k,i,1),1.)
>               enddo
>             enddo
>           enddo
>         end if
>         if ((ivisc(1).eq.6.or.ivisc(2).eq.6.or.ivisc(3).eq.6.or.
>      .       ivisc(1).eq.7.or.ivisc(2).eq.7.or.ivisc(3).eq.7) .and.
>      .       (iv1.eq.9.or.iv2.eq.9.or.iv3.eq.9.or.
>      .        iv1.eq.10.or.iv2.eq.10.or.iv3.eq.10.or.
>      .        iv1.eq.11.or.iv2.eq.11.or.iv3.eq.11.or.
>      .        iv1.eq.13.or.iv2.eq.13.or.iv3.eq.13.or.
>      .        iv1.eq.15.or.iv2.eq.15.or.iv3.eq.15)) then
>           do i=1,idim1
>             do k=1,kdim1
>               do j=1,jdim1
>                 tursav(j,k,i,1)=tursav(j,k,i,1)/
1065,1111c1031,1065
< c     Limit new omega to handle extremes
<                            tursav(j,k,i,1)=
<      $                          ccmincr(tursav(j,k,i,1),1.)
<                         enddo
<                      enddo
<                   enddo
<                end if
<                if ((ivisc(1).eq.9.or.ivisc(2).eq.9.or.ivisc(3).eq.9
<      .              .or.ivisc(1).eq.10.or.ivisc(2).eq.10
<      .              .or.ivisc(3).eq.10
<      .              .or.ivisc(1).eq.11.or.ivisc(2).eq.11.or.
<      $              ivisc(3).eq.11.or.
<      .              ivisc(1).eq.13.or.ivisc(2).eq.13.or.
<      $              ivisc(3).eq.13.or.
<      .              ivisc(1).eq.15.or.ivisc(2).eq.15.or.
<      $              ivisc(3).eq.15)
<      .              .and.(iv1.eq.8.or.iv2.eq.8.or.iv3.eq.8.or.
<      .              iv1.eq.12.or.iv2.eq.12.or.iv3.eq.12.or.
<      .              iv1.eq.14.or.iv2.eq.14.or.iv3.eq.14)) then
<                   do i=1,idim1
<                      do k=1,kdim1
<                         do j=1,jdim1
<                            tursav(j,k,i,1)=tursav(j,k,i,1)*
<      $                          tursav(j,k,i,2)
< c     Limit new epsilon to handle extremes
<                            tursav(j,k,i,1)=
<      $                          ccmincr(tursav(j,k,i,1),1.)
<                         enddo
<                      enddo
<                   enddo
<                end if
<                if ((ivisc(1).eq.9.or.ivisc(2).eq.9.or.
<      $              ivisc(3).eq.9.or.
<      .              ivisc(1).eq.10.or.ivisc(2).eq.10.or.
<      $              ivisc(3).eq.10.or.
<      .              ivisc(1).eq.11.or.ivisc(2).eq.11.or.
<      $              ivisc(3).eq.11.or.
<      .              ivisc(1).eq.13.or.ivisc(2).eq.13.or.
<      $              ivisc(3).eq.13.or.
<      .              ivisc(1).eq.15.or.ivisc(2).eq.15.or.
<      $              ivisc(3).eq.15)
<      .              .and.(iv1.eq.6.or.iv2.eq.6.or.iv3.eq.6.or.
<      .              iv1.eq.7.or.iv2.eq.7.or.iv3.eq.7)) then
<                   do i=1,idim1
<                      do k=1,kdim1
<                         do j=1,jdim1
<                            tursav(j,k,i,1)=tursav(j,k,i,1)*
---
> c               Limit new omega to handle extremes
>                 tursav(j,k,i,1)=ccmincr(tursav(j,k,i,1),1.)
>               enddo
>             enddo
>           enddo
>         end if
>         if ((ivisc(1).eq.9.or.ivisc(2).eq.9.or.ivisc(3).eq.9.or.
>      .       ivisc(1).eq.10.or.ivisc(2).eq.10.or.ivisc(3).eq.10.or.
>      .       ivisc(1).eq.11.or.ivisc(2).eq.11.or.ivisc(3).eq.11.or.
>      .       ivisc(1).eq.13.or.ivisc(2).eq.13.or.ivisc(3).eq.13.or.
>      .       ivisc(1).eq.15.or.ivisc(2).eq.15.or.ivisc(3).eq.15)
>      .  .and.(iv1.eq.8.or.iv2.eq.8.or.iv3.eq.8.or.
>      .        iv1.eq.12.or.iv2.eq.12.or.iv3.eq.12.or.
>      .        iv1.eq.14.or.iv2.eq.14.or.iv3.eq.14)) then
>           do i=1,idim1
>             do k=1,kdim1
>               do j=1,jdim1
>                 tursav(j,k,i,1)=tursav(j,k,i,1)*tursav(j,k,i,2)
> c               Limit new epsilon to handle extremes
>                 tursav(j,k,i,1)=ccmincr(tursav(j,k,i,1),1.)
>               enddo
>             enddo
>           enddo
>         end if
>         if ((ivisc(1).eq.9.or.ivisc(2).eq.9.or.ivisc(3).eq.9.or.
>      .       ivisc(1).eq.10.or.ivisc(2).eq.10.or.ivisc(3).eq.10.or.
>      .       ivisc(1).eq.11.or.ivisc(2).eq.11.or.ivisc(3).eq.11.or.
>      .       ivisc(1).eq.13.or.ivisc(2).eq.13.or.ivisc(3).eq.13.or.
>      .       ivisc(1).eq.15.or.ivisc(2).eq.15.or.ivisc(3).eq.15)
>      .  .and.(iv1.eq.6.or.iv2.eq.6.or.iv3.eq.6.or.
>      .        iv1.eq.7.or.iv2.eq.7.or.iv3.eq.7)) then
>           do i=1,idim1
>             do k=1,kdim1
>               do j=1,jdim1
>                 tursav(j,k,i,1)=tursav(j,k,i,1)*
1113,1126c1067,1089
< c     Limit new epsilon to handle extremes
<                            tursav(j,k,i,1)=
<      $                          ccmincr(tursav(j,k,i,1),1.)
<                         enddo
<                      enddo
<                   enddo
<                end if
< #if defined DIST_MPI
< c     
< c     end host section for tursav
< c     
<             end if
< c     
<             mytag = itag_qt + nbl
---
> c               Limit new epsilon to handle extremes
>                 tursav(j,k,i,1)=ccmincr(tursav(j,k,i,1),1.)
>               enddo
>             enddo
>           enddo
>         end if
> #if defined DIST_MPI
> c
> c       end host section for tursav
> c
>         end if
> c
>         mytag = itag_qt + nbl
>         if (myid .eq. myhost) then
>             call MPI_Send(tursav,jki2,MY_MPI_REAL,
>      .                    nd_dest,mytag,mycomm,ierr)
>         else if (myid .eq. mblk2nd(nbl)) then
>             call MPI_Recv(tursav,jki2,MY_MPI_REAL,
>      .                    myhost,mytag,mycomm,istat,ierr)
>         end if
> c
>          if (irghost .ne.0) then
>             mytag = itag_tj0 + nbl
1128,1129c1091,1092
<                call MPI_Send(tursav,jki2,MY_MPI_REAL,
<      .              nd_dest,mytag,mycomm,ierr)
---
>                call MPI_Send(tj0,ki8,MY_MPI_REAL,
>      .                       nd_dest,mytag,mycomm,ierr)
1131,1132c1094,1095
<                call MPI_Recv(tursav,jki2,MY_MPI_REAL,
<      .              myhost,mytag,mycomm,istat,ierr)
---
>                call MPI_Recv(tj0,ki8,MY_MPI_REAL,
>      .                       myhost,mytag,mycomm,istat,ierr)
1134,1170c1097,1104
< c     
<             if (irghost .ne.0) then
<                mytag = itag_tj0 + nbl
<                if (myid .eq. myhost) then
<                   call MPI_Send(tj0,ki8,MY_MPI_REAL,
<      .                 nd_dest,mytag,mycomm,ierr)
<                else if (myid .eq. mblk2nd(nbl)) then
<                   call MPI_Recv(tj0,ki8,MY_MPI_REAL,
<      .                 myhost,mytag,mycomm,istat,ierr)
<                end if
< c     
<                mytag = itag_tk0 + nbl
<                if (myid .eq. myhost) then
<                   call MPI_Send(tk0,ji8,MY_MPI_REAL,
<      .                 nd_dest,mytag,mycomm,ierr)
<                else if (myid .eq. mblk2nd(nbl)) then
<                   call MPI_Recv(tk0,ji8,MY_MPI_REAL,
<      .                 myhost,mytag,mycomm,istat,ierr)
<                end if
< c     
<                mytag = itag_ti0 + nbl
<                if (myid .eq. myhost) then
<                   call MPI_Send(ti0,jk8,MY_MPI_REAL,
<      .                 nd_dest,mytag,mycomm,ierr)
<                else if (myid .eq. mblk2nd(nbl)) then
<                   call MPI_Recv(ti0,jk8,MY_MPI_REAL,
<      .                 myhost,mytag,mycomm,istat,ierr)
<                end if
<             end if
< c     
<             if (myid.eq.myhost) then
< #endif
<                if (icgns .ne. 1) then
<                   read(2) (((smin(j,k,i),j=1,jdim1),
<      $                 k=1,kdim1),i=1,idim1)
<                end if
< #if defined DIST_MPI
---
> c
>             mytag = itag_tk0 + nbl
>             if (myid .eq. myhost) then
>                call MPI_Send(tk0,ji8,MY_MPI_REAL,
>      .                       nd_dest,mytag,mycomm,ierr)
>             else if (myid .eq. mblk2nd(nbl)) then
>                call MPI_Recv(tk0,ji8,MY_MPI_REAL,
>      .                       myhost,mytag,mycomm,istat,ierr)
1172,1173c1106,1107
< c     
<             mytag = itag_smin + nbl
---
> c
>             mytag = itag_ti0 + nbl
1175,1176c1109,1110
<                call MPI_Send(smin,jkim,MY_MPI_REAL,
<      .              nd_dest,mytag,mycomm,ierr)
---
>                call MPI_Send(ti0,jk8,MY_MPI_REAL,
>      .                       nd_dest,mytag,mycomm,ierr)
1178,1179c1112,1113
<                call MPI_Recv(smin,jkim,MY_MPI_REAL,
<      .              myhost,mytag,mycomm,istat,ierr)
---
>                call MPI_Recv(ti0,jk8,MY_MPI_REAL,
>      .                       myhost,mytag,mycomm,istat,ierr)
1181c1115,1117
< c     
---
>          end if
> c
>          if (myid.eq.myhost) then
1183c1119,1121
<             if (iv1.eq.4 .or. iv2.eq.4 .or. iv3.eq.4) then
---
>          if (icgns .ne. 1) then
>         read(2) (((smin(j,k,i),j=1,jdim1),k=1,kdim1),i=1,idim1)
>          end if
1185,1221c1123,1133
<                if (myid.eq.myhost) then
< #endif
<                   if (icgns .ne. 1) then
<                      read(2) (((xjb(j,k,i),j=1,jdim1),
<      $                    k=1,kdim1),i=1,idim1)
<                      read(2) (((xkb(j,k,i),j=1,jdim1),
<      $                    k=1,kdim1),i=1,idim1)
<                      read(2) (((blnum(j,k,i),j=1,jdim1),
<      $                    k=1,kdim1),i=1,idim1)
<                   end if
< #if defined DIST_MPI
<                end if
< c     
<                mytag = itag_xjb + nbl
<                if (myid .eq. myhost) then
<                   call MPI_Send(xjb,jkim,MY_MPI_REAL,
<      .                 nd_dest,mytag,mycomm,ierr)
<                else if (myid .eq. mblk2nd(nbl)) then
<                   call MPI_Recv(xjb,jkim,MY_MPI_REAL,
<      .                 myhost,mytag,mycomm,istat,ierr)
<                end if
<                mytag = itag_xkb + nbl
<                if (myid .eq. myhost) then
<                   call MPI_Send(xkb,jkim,MY_MPI_REAL,
<      .                 nd_dest,mytag,mycomm,ierr)
<                else if (myid .eq. mblk2nd(nbl)) then
<                   call MPI_Recv(xkb,jkim,MY_MPI_REAL,
<      .                 myhost,mytag,mycomm,istat,ierr)
<                end if
<                mytag = itag_blnum + nbl
<                if (myid .eq. myhost) then
<                   call MPI_Send(blnum,jkim,MY_MPI_REAL,
<      .                 nd_dest,mytag,mycomm,ierr)
<                else if (myid .eq. mblk2nd(nbl)) then
<                   call MPI_Recv(blnum,jkim,MY_MPI_REAL,
<      .                 myhost,mytag,mycomm,istat,ierr)
<                end if
---
>         end if
> c
>         mytag = itag_smin + nbl
>         if (myid .eq. myhost) then
>            call MPI_Send(smin,jkim,MY_MPI_REAL,
>      .                   nd_dest,mytag,mycomm,ierr)
>         else if (myid .eq. mblk2nd(nbl)) then
>            call MPI_Recv(smin,jkim,MY_MPI_REAL,
>      .                   myhost,mytag,mycomm,istat,ierr)
>         end if
> c
1223,1251c1135,1137
<             end if
<             if (iv1.eq.8 .or. iv2.eq.8 .or. iv3.eq.8  .or.
<      .           iv1.eq.9 .or. iv2.eq.9 .or. iv3.eq.9  .or.
<      .           iv1.eq.13.or. iv2.eq.13.or. iv3.eq.13 .or.
<      .           iv1.eq.14.or. iv2.eq.14.or. iv3.eq.14) then
< #if defined DIST_MPI
<                if (myid.eq.myhost) then
< #endif
<                   if (icgns .ne. 1) then
<                      if(ivmx .eq. 8 .or. ivmx .eq. 9
<      $                    .or. ivmx .eq. 13 .or. ivmx .eq. 14) then
<                         read(2) (((cmuv(j,k,i),j=1,jdim1),k=1,kdim1),
<      $                       i=1,idim1)
<                      else
<                         read(2) (((dum,j=1,jdim1),k=1,kdim1),
<      $                       i=1,idim1)
<                      end if
<                   end if
< #if defined DIST_MPI
<                end if
< c     
<                mytag = itag_cmuv + nbl
<                if (myid .eq. myhost) then
<                   call MPI_Send(cmuv,jkim,MY_MPI_REAL,
<      .                 nd_dest,mytag,mycomm,ierr)
<                else if (myid .eq. mblk2nd(nbl)) then
<                   call MPI_Recv(cmuv,jkim,MY_MPI_REAL,
<      .                 myhost,mytag,mycomm,istat,ierr)
<                end if
---
>         if (iv1.eq.4 .or. iv2.eq.4 .or. iv3.eq.4) then
> #if defined DIST_MPI
>           if (myid.eq.myhost) then
1253c1139,1142
<             end if
---
>          if (icgns .ne. 1) then
>           read(2) (((xjb(j,k,i),j=1,jdim1),k=1,kdim1),i=1,idim1)
>           read(2) (((xkb(j,k,i),j=1,jdim1),k=1,kdim1),i=1,idim1)
>           read(2) (((blnum(j,k,i),j=1,jdim1),k=1,kdim1),i=1,idim1)
1255,1289d1143
<       end if
< c     
< c     If irest2=1 (results when irest<0 on input), do not save
< c     previous histories; otherwise, do.
< c     
<       if (irest2 .eq. 1) then
<          ntt = 0
<          ntr = 0
<       else
< c     
< c     this was defined earlier for message passing
< c     
< c     ntt = ntr
< c     
<       end if
< 
<       if (iteravg .eq. 2) then
<          if (ipertavg .eq. 0) then
<             if (myid.eq.myhost) then
<                read(97,end=1010,err=1010) dum,dum,dum,xnumavg
<                read(97,end=1010,err=1010) ((((qavg(j,k,i,m),
<      +              i=1,idim-1),j=1,jdim-1),k=1,kdim-1),m=1,5)
< c     need to switch y and z if ialph .ne. 0
<                if (ialph .ne. 0) then
<                   do i=1,idim-1
<                      do j=1,jdim-1
<                         do k=1,kdim-1
<                            temp=qavg(j,k,i,4)
<                            qavg(j,k,i,4)=qavg(j,k,i,3)
<                            qavg(j,k,i,3)=-temp
<                         enddo
<                      enddo
<                   enddo
<                end if
<             end if
1291,1307c1145,1178
< c     
<             mytag = itag_qavg + nbl
<             if (myid .eq. myhost) then
<                call MPI_Send(qavg,jki5,MY_MPI_REAL,
<      .              nd_dest,mytag,mycomm,ierr)
<             else if (myid .eq. mblk2nd(nbl)) then
<                call MPI_Recv(qavg,jki5,MY_MPI_REAL,
<      .              myhost,mytag,mycomm,istat,ierr)
<             end if
<             mytag = itag_xnum + nbl
<             if (myid .eq. myhost) then
<                call MPI_Send(xnumavg,1,MY_MPI_REAL,
<      .              nd_dest,mytag,mycomm,ierr)
<             else if (myid .eq. mblk2nd(nbl)) then
<                call MPI_Recv(xnumavg,1,MY_MPI_REAL,
<      .              myhost,mytag,mycomm,istat,ierr)
<             end if
---
>           end if
> c
>           mytag = itag_xjb + nbl
>           if (myid .eq. myhost) then
>              call MPI_Send(xjb,jkim,MY_MPI_REAL,
>      .                    nd_dest,mytag,mycomm,ierr)
>           else if (myid .eq. mblk2nd(nbl)) then
>              call MPI_Recv(xjb,jkim,MY_MPI_REAL,
>      .                     myhost,mytag,mycomm,istat,ierr)
>           end if
>           mytag = itag_xkb + nbl
>           if (myid .eq. myhost) then
>              call MPI_Send(xkb,jkim,MY_MPI_REAL,
>      .                     nd_dest,mytag,mycomm,ierr)
>           else if (myid .eq. mblk2nd(nbl)) then
>              call MPI_Recv(xkb,jkim,MY_MPI_REAL,
>      .                     myhost,mytag,mycomm,istat,ierr)
>           end if
>           mytag = itag_blnum + nbl
>           if (myid .eq. myhost) then
>              call MPI_Send(blnum,jkim,MY_MPI_REAL,
>      .                     nd_dest,mytag,mycomm,ierr)
>           else if (myid .eq. mblk2nd(nbl)) then
>              call MPI_Recv(blnum,jkim,MY_MPI_REAL,
>      .                     myhost,mytag,mycomm,istat,ierr)
>           end if
> #endif
>         end if
>         if (iv1.eq.8 .or. iv2.eq.8 .or. iv3.eq.8  .or.
>      .      iv1.eq.9 .or. iv2.eq.9 .or. iv3.eq.9  .or.
>      .      iv1.eq.13.or. iv2.eq.13.or. iv3.eq.13 .or.
>      .      iv1.eq.14.or. iv2.eq.14.or. iv3.eq.14) then
> #if defined DIST_MPI
>           if (myid.eq.myhost) then
1309,1338c1180,1187
<          else
<             if (myid.eq.myhost) then
<                read(97,end=1010,err=1010) dum,dum,dum,xnumavg
<                read(97,end=1010,err=1010) ((((qavg(j,k,i,m),
<      +              i=1,idim),j=1,jdim),k=1,kdim),m=1,5) 
< c     
<                read(98,end=1010,err=1010) dum,dum,dum,xnumavg2
<                read(98,end=1010,err=1010) ((((q2avg(j,k,i,m), 
<      +              i=1,idim),j=1,jdim),k=1,kdim),m=1,5)
<             
< c     need to switch y and z if ialph .ne. 0
<                if (ialph .ne. 0) then
<                   do i=1,idim
<                      do j=1,jdim
<                         do k=1,kdim
< c     
<                            temp=qavg(j,k,i,4)
<                            qavg(j,k,i,4)=qavg(j,k,i,3)
<                            qavg(j,k,i,3)=-temp
< c     
<                            temp=q2avg(j,k,i,4) 
<                            q2avg(j,k,i,4)=q2avg(j,k,i,3) 
<                            q2avg(j,k,i,3)=temp 
< c     
<                         enddo
<                      enddo
<                   enddo
<                end if
<             end if
< c     
---
>          if (icgns .ne. 1) then
>           if(ivmx .eq. 8 .or. ivmx .eq. 9 .or. ivmx .eq. 13 .or.
>      .       ivmx .eq. 14) then
>           read(2) (((cmuv(j,k,i),j=1,jdim1),k=1,kdim1),i=1,idim1)
>           else
>           read(2) (((dum,j=1,jdim1),k=1,kdim1),i=1,idim1)
>           end if
>          end if
1340,1374c1189,1198
< c     
<             mytag = itag_qavg + nbl
<             if (myid .eq. myhost) then
<                call MPI_Send(qavg,jki5,MY_MPI_REAL, 
<      .              nd_dest,mytag,mycomm,ierr)
<             else if (myid .eq. mblk2nd(nbl)) then
<                call MPI_Recv(qavg,jki5,MY_MPI_REAL, 
<      .              myhost,mytag,mycomm,istat,ierr)
<             end if
<             mytag = itag_xnum + nbl
<             if (myid .eq. myhost) then
<                call MPI_Send(xnumavg,1,MY_MPI_REAL,
<      .              nd_dest,mytag,mycomm,ierr)
<             else if (myid .eq. mblk2nd(nbl)) then
<                call MPI_Recv(xnumavg,1,MY_MPI_REAL,
<      .              myhost,mytag,mycomm,istat,ierr)
<             end if
< c     
<             mytag = itag_q2avg + nbl 
<             if (myid .eq. myhost) then 
<                call MPI_Send(q2avg,jki5,MY_MPI_REAL, 
<      .              nd_dest,mytag,mycomm,ierr) 
<             else if (myid .eq. mblk2nd(nbl)) then 
<                call MPI_Recv(q2avg,jki5,MY_MPI_REAL, 
<      .              myhost,mytag,mycomm,istat,ierr) 
<             end if                 
<             mytag = itag_xnum2 + nbl 
<             if (myid .eq. myhost) then 
<                call MPI_Send(xnumavg2,1,MY_MPI_REAL, 
<      .              nd_dest,mytag,mycomm,ierr) 
<             else if (myid .eq. mblk2nd(nbl)) then 
<                call MPI_Recv(xnumavg2,1,MY_MPI_REAL, 
<      .              myhost,mytag,mycomm,istat,ierr) 
<             end if                 
< c     
---
>           end if
> c
>           mytag = itag_cmuv + nbl
>           if (myid .eq. myhost) then
>              call MPI_Send(cmuv,jkim,MY_MPI_REAL,
>      .                    nd_dest,mytag,mycomm,ierr)
>           else if (myid .eq. mblk2nd(nbl)) then
>              call MPI_Recv(cmuv,jkim,MY_MPI_REAL,
>      .                     myhost,mytag,mycomm,istat,ierr)
>           end if
1376,1377c1200,1202
<          end if ! ipertavg
<       end if ! iteravg
---
>         end if
>       end if
>       end if
1379c1204,1214
< c     clcd information
---
> c   If irest2=1 (results when irest<0 on input), do not save
> c   previous histories; otherwise, do.
> c
>       if (irest2 .eq. 1) then
>         ntt = 0
>         ntr = 0
>       else
> c
> c       this was defined earlier for message passing
> c
> c       ntt = ntr
1381,1400d1215
<               
<       if (iskip.gt.0) then
<          if (myid.eq.myhost) then
<             if( iclcd .eq. 1 .or. iclcd .eq. 2 ) then
<                clcd(1,:,:) = 1.e100
<                clcd(2,:,:) = 0.e0
<                i_ntt = 0
<             end if
<             if (iclcd .eq. 2) then
<                read(102,end=1012,err=1012) i_clcd,iblocks_clcd,i_ntt
< c     
<                if (n_clcd .ne. i_clcd ) then
<                   write(*,*) 'Inconsistent number of ClCd ',
<      $                 'calcs in restart file ', n_clcd, i_clcd
<                   call termn8(myid,-1,ibufdim,nbuf,bou,nou)
<                end if
<             
<                read(102,end=1012,err=1012) clcd(1:2,1:i_clcd,1:i_ntt)
<             end if
<          end if                 
1402c1217,1234
< 
---
>       if (iteravg .eq. 2) then
>         if (myid.eq.myhost) then
>         read(97,end=1010,err=1010) dum,dum,dum,xnumavg
>         read(97,end=1010,err=1010) ((((qavg(j,k,i,m),
>      +    i=1,idim-1),j=1,jdim-1),k=1,kdim-1),m=1,5)
> c   need to switch y and z if ialph .ne. 0
>         if (ialph .ne. 0) then
>           do i=1,idim-1
>             do j=1,jdim-1
>               do k=1,kdim-1
>                 temp=qavg(j,k,i,4)
>                 qavg(j,k,i,4)=qavg(j,k,i,3)
>                 qavg(j,k,i,3)=-temp
>               enddo
>             enddo
>           enddo
>         end if
>         end if
1404,1410c1236,1260
<       mytag = itag_clcd + nbl 
<       if (myid.eq.myhost) then
<          call MPI_Send(clcd,ntt*2*n_clcd,MY_MPI_REAL,
<      .        nd_dest,mytag,mycomm,ierr) 
<       else if (myid .eq. mblk2nd(nbl)) then 
<          call MPI_Recv(clcd,ntt*2*n_clcd,MY_MPI_REAL, 
<      .        myhost,mytag,mycomm,istat,ierr) 
---
> c
>           mytag = itag_qavg + nbl
>           if (myid .eq. myhost) then
>              call MPI_Send(qavg,jkim5,MY_MPI_REAL,
>      .                    nd_dest,mytag,mycomm,ierr)
>           else if (myid .eq. mblk2nd(nbl)) then
>              call MPI_Recv(qavg,jkim5,MY_MPI_REAL,
>      .                     myhost,mytag,mycomm,istat,ierr)
>           end if
>           mytag = itag_xnum + nbl
>           if (myid .eq. myhost) then
>              call MPI_Send(xnumavg,1,MY_MPI_REAL,
>      .                    nd_dest,mytag,mycomm,ierr)
>           else if (myid .eq. mblk2nd(nbl)) then
>              call MPI_Recv(xnumavg,1,MY_MPI_REAL,
>      .                     myhost,mytag,mycomm,istat,ierr)
>           end if
> #endif
>         return
>  1010   continue
>         write(11,'(/,'' stopping... flag iteravg=2, but cannot read'',
>      +   '' running-average Q file, nbl='',i5)') nbl
>         write(11,'('' ... it either does not exist or it is an'',
>      +   '' incorrect file'')')
>         call termn8(myid,-1,ibufdim,nbuf,bou,nou)
1412,1429c1262
< #endif
< 
< 
<       return
<  1010 continue
<       write(11,'(/,'' stopping... flag iteravg=2, but cannot read'',
<      +     '' running-average Q file, nbl='',i5)') nbl
<       write(11,'('' ... it either does not exist or it is an'',
<      +     '' incorrect file'')')
<       call termn8(myid,-1,ibufdim,nbuf,bou,nou)
<  1012 continue
<       write(11,'(/,'' stopping... flag iclcd=2, but cannot read'',
<      +     '' clcd.bin file, nbl='',i5)') nbl
<       write(11,'('' ... it either does not exist or it is an'',
<      +     '' incorrect file'')')
<       call termn8(myid,-1,ibufdim,nbuf,bou,nou)
< 
< c     
---
> c
Index: source/cfl3d/dist/rrestg.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/dist/rrestg.F,v
retrieving revision 1.13
retrieving revision 1.11
diff -r1.13 -r1.11
18c18
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
110c110
<       common /unst/ time,cfltau,ntstep,ita,iunst,cfltau0,cfltauMax
---
>       common /unst/ time,cfltau,ntstep,ita,iunst
117,118d116
<       common /deformz/ beta1,beta2,alpha1,alpha2,isktyp,negvol,meshdef,
<      .                 nsprgit,ndgrd,ndwrt
589,593d586
<                   if(ndgrd.ne.0.and.iunst.gt.1) then
<                    read(98,*)(((x(j,k,i),i=1,idim),j=1,jdim),k=1,kdim),
<      .                       (((y(j,k,i),i=1,idim),j=1,jdim),k=1,kdim),
<      .                       (((z(j,k,i),i=1,idim),j=1,jdim),k=1,kdim)
<                   end if
Index: source/cfl3d/dist/setslave.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/dist/setslave.F,v
retrieving revision 1.14
retrieving revision 1.9
diff -r1.14 -r1.9
10c10
<      .                    kskmax,nbli) 
---
>      .                    kskmax) 
12c12
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
80c80
<       common /unst/ time,cfltau,ntstep,ita,iunst,cfltau0,cfltauMax
---
>       common /unst/ time,cfltau,ntstep,ita,iunst
84c84
<      .                 nsprgit,ndgrd,ndwrt 
---
>      .                 nsprgit
338c338
<                  do n = 2,500
---
>                  do n = 1,500
345c345
<                  do n = 2,500
---
>                  do n = 1,500
352c352
<                  do n = 2,500
---
>                  do n = 1,500
593c593
<          do m = 1,nbli
---
>          do m = 1,mxbli
1023d1022
< c               if(n2.ne.n.and.iimax(n2).gt.1) then
Index: source/cfl3d/dist/setup.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/dist/setup.F,v
retrieving revision 1.27
retrieving revision 1.21
diff -r1.27 -r1.21
14,15c14
<      .                 cmzw,n_clcd,clcd,nblocks_clcd,blocks_clcd,
<      .                 chdw,swetw,fmdotw,cfttotw,cftmomw,cftpw,
---
>      .                 cmzw,chdw,swetw,fmdotw,cfttotw,cftmomw,cftpw,
31c30
<      .                 iskmax,jskmax,kskmax,ue,irdrea,nbli)
---
>      .                 iskmax,jskmax,kskmax,ue,irdrea)
33c32
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
66d64
<       character*241 avgq2,avgq2pert,clcds,clcdp,output_dir
102d99
<       integer blocks_clcd
106d102
<      .          clcd(2,n_clcd,ncycmax), blocks_clcd(2,nblocks_clcd),
159d154
<       common /ginfo2/ lq2avg,iskip_blocks,inc_2d(3),inc_coarse(3)
168c163
<       common /unst/ time,cfltau,ntstep,ita,iunst,cfltau0,cfltauMax
---
>       common /unst/ time,cfltau,ntstep,ita,iunst
174d168
<       common /filenam2/ avgq2,avgq2pert,clcds,clcdp,output_dir
180c174
<      .                 nsprgit,ndgrd,ndwrt 
---
>      .                 nsprgit
185c179
<       common /avgdata/ xnumavg,iteravg,xnumavg2,ipertavg,iclcd
---
>       common /avgdata/ xnumavg,iteravg
192,197c186
<          rewind( 2)
<          if( iclcd .eq. 1 .or. iclcd .eq. 2 ) then
<             open(unit=102,file=clcds,form='unformatted',
<      $           status='unknown')
<             rewind(102)
<          end if
---
>          rewind 2
215d203
<       xnumavg2  = 0.
563c551
<      .                 nnodes,iskmax,jskmax,kskmax,nbli)
---
>      .                 nnodes,iskmax,jskmax,kskmax)
847,848c835
<      .                myid,mblk2nd,maxbl,nbl,0,iflagv,imin,imax,jmin,
<      .                jmax,kmin,kmax)
---
>      .                myid,mblk2nd,maxbl,nbl)
1663,1664c1650,1651
<       if (irigb.gt.0.or.irbtrim.gt.0) then
<             call init_rb(maxaes,maxbl,zorig,aesrfdat) 
---
>       if (irigb.gt.0) then
>             call init_rb
1922,1949c1909,1914
< 
<            if (ipertavg .ne. 0) then
< 
<               do igrid=1,ngrid
<                  if (itest(igrid) .ne. idimg(nblg(igrid)+mseq-1) .or. 
<      .                jtest(igrid) .ne. jdimg(nblg(igrid)+mseq-1) .or.
<      .                ktest(igrid) .ne. kdimg(nblg(igrid)+mseq-1))
<      .                goto 1011
<               enddo
<               read(98,end=1011,err=1011) ngx 
<               if (ngx .ne. ngrid) goto 1011 
<               read(98,end=1011,err=1011) (itest(igrid),jtest(igrid), 
<      .             ktest(igrid),igrid=1,ngx) 
<               do igrid=1,ngrid  
<                  if (itest(igrid) .ne. idimg(nblg(igrid)+mseq-1) .or. 
<      .                jtest(igrid) .ne. jdimg(nblg(igrid)+mseq-1) .or. 
<      .                ktest(igrid) .ne. kdimg(nblg(igrid)+mseq-1)) 
<      .                goto 1011 
< c     
<               enddo
<            else
<               do igrid=1,ngrid
<                  if (itest(igrid) .ne. idimg(nblg(igrid)+mseq-1)-1 .or. 
<      .                jtest(igrid) .ne. jdimg(nblg(igrid)+mseq-1)-1 .or.
<      .                ktest(igrid) .ne. kdimg(nblg(igrid)+mseq-1)-1) 
<      .                goto 1011
<               enddo
<            end if
---
>            do igrid=1,ngrid
>              if (itest(igrid) .ne. idimg(nblg(igrid)+mseq-1)-1 .or. 
>      .           jtest(igrid) .ne. jdimg(nblg(igrid)+mseq-1)-1 .or.
>      .           ktest(igrid) .ne. kdimg(nblg(igrid)+mseq-1)-1) 
>      .           goto 1011
>            enddo
2014,2016c1979
<      .                 cmxw,cmyw,cmzw,
<      .                 n_clcd, clcd, nblocks_clcd, blocks_clcd,
<      $                 fmdotw,cftmomw,cftpw,cftvw,
---
>      .                 cmxw,cmyw,cmzw,fmdotw,cftmomw,cftpw,cftvw,
2022c1985
<      .                 w(ltj0),w(ltk0),w(lti0),w(lqavg),w(lq2avg)) 
---
>      .                 w(ltj0),w(ltk0),w(lti0),w(lqavg))
2036c1999
<      .            ncycchk, ncyctot, ncycchk, ntt
---
>      .            ncycchk
2187,2194d2149
<                if (ndgrd .ne. 0 .and. iunst .gt. 1) then
<                  if(myid.eq.myhost) then
<                    open(98,file='dgplot3d.bin',form='formatted'
<      .                 ,status='old')
<                    read(98,*) ngridt
<                    read(98,*) (idimt,jdimt,kdimt,igrid=1,ngrid)
<                  end if
<                end if
2379c2334
<       if (myid.eq.myhost) then
---
>          if (myid.eq.myhost) then
2382,2385d2336
<             close (102)
<             if(ndgrd .ne. 0 .and. iunst .gt. 1) then
<               close (98)
<             end if
Index: source/cfl3d/dist/sizer.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/dist/sizer.F,v
retrieving revision 1.27
retrieving revision 1.23
diff -r1.27 -r1.23
12c12
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
265c265
<       common /unst/ time,cfltau,ntstep,ita,iunst,cfltau0,cfltauMax
---
>       common /unst/ time,cfltau,ntstep,ita,iunst
277c277
<       common /moov/movie,nframes,icall1,lhdr,icoarsemovie,i2dmovie
---
>       common /moov/ movie,nframes,icall1,lhdr
284c284
<      .                 nsprgit,ndgrd,ndwrt 
---
>      .                 nsprgit
707,708c707
<       pi       = 4.*atan(1.0)
<       radtodeg = 180.e0/pi
---
>       radtodeg = 180.e0/3.1415927e0
893c892
<          do ii=1,65
---
>          do ii=1,64
1455a1455
>          if (idefrm(nbl) .gt. 0) nv=41
1457,1465d1456
<          if (idefrm(nbl) .gt. 0) then
<            nv=41
<            maxmem = max(jdim*kdim*nv,jdim*idim*nv)
<            mem_updatedg =     16*idim*jdim*kdim +
<      .                             30*jdim*kdim +
<      .                             24*jdim*idim +
<      .                             24*kdim*idim
<            maxmem = maxmem+mem_updatedg 
<          end if
Index: source/cfl3d/dist/termn8.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/dist/termn8.F,v
retrieving revision 1.6
retrieving revision 1.5
diff -r1.6 -r1.5
3c3
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
124d123
<       call my_flush(98)
142,143c141
<          close(97)          
<          close(98)
---
>          close(97)
Index: source/cfl3d/dist/trnsfr_vals.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/dist/trnsfr_vals.F,v
retrieving revision 1.30
retrieving revision 1.24
diff -r1.30 -r1.24
29c29
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
129c129
<       common /avgdata/ xnumavg,iteravg,xnumavg2,ipertavg,iclcd
---
>       common /avgdata/ xnumavg,iteravg
133,134c133
<       common /konew/ ikoprod,isstdenom,pklimterm,ibeta8kzeta,i_bsl,
<      .        keepambient
---
>       common /konew/ ikoprod,isstdenom,pklimterm,ibeta8kzeta
138c137
<      .                 nsprgit,ndgrd,ndwrt 
---
>      .                 nsprgit
156,158c155,156
<       common /unst/ time,cfltau,ntstep,ita,iunst,cfltau0,cfltauMax
<       common /moov/movie,nframes,icall1,lhdr,icoarsemovie,i2dmovie
<       common /ginfo2/ lq2avg,iskip_blocks,inc_2d(3),inc_coarse(3) 
---
>       common /unst/ time,cfltau,ntstep,ita,iunst
>       common /moov/movie,nframes,icall1,lhdr
191,197d188
<       common /rigidbody/ irigb,irbtrim
<       common /rbstmt2/ tmass,yinert,uinfrb,qinfrb,greflrb,gaccel,crefrb,
<      .                 xtmref,areat
<       common /trim/ dmtrmn,dmtrmnm,dlcln,dlclnm,trtol,cmy,cnw,alf0,
<      .              alf1,dzdt,thtd0,thtd1,zrg0,zrg1,dtrmsmx,dtrmsmn,
<      .              dalfmx,ddtmx,ddtrm0,ddtrm1,itrmt,itrminc,fp(4,4),
<      .              tp(4,4),zlfct,epstr,relax,ittrst
438,461d428
<          work(nlast+71) = ipertavg
<          work(nlast+72) = icoarsemovie
<          work(nlast+73) = i2dmovie
<          work(nlast+74) = iclcd
<          iskip_blocks = max(1,iskip_blocks)
<          work(nlast+75) = iskip_blocks
<          work(nlast+76) = cfltauMax
<          work(nlast+77) = cfltau0
<          work(nlast+78) = irbtrim
<          work(nlast+79) = irigb
<          work(nlast+80) = greflrb
<          work(nlast+81) = tmass
<          work(nlast+82) = yinert
<          work(nlast+83) = gaccel
<          work(nlast+84) = relax
<          work(nlast+85) = itrminc
<          work(nlast+86) = tp(1,1)
<          work(nlast+87) = tp(2,1)
<          work(nlast+88) = tp(1,2)
<          work(nlast+89) = tp(2,2)
<          work(nlast+90) = ndgrd
<          work(nlast+91) = ndwrt
<          work(nlast+92) = i_bsl
<          work(nlast+93) = keepambient
712,734d678
<          ipertavg  = int(work(nlast+71))
<          icoarsemovie = int(work(nlast+72))
<          i2dmovie = int(work(nlast+73))
<          iclcd     = int(work(nlast+74))
<          iskip_blocks = int(work(nlast+75))
<          cfltauMax = work(nlast+76)
<          cfltau0 = work(nlast+77)
<          irbtrim   = int(work(nlast+78))
<          irigb     = int(work(nlast+79))
<          greflrb   = work(nlast+80)
<          tmass     = work(nlast+81)
<          yinert    = work(nlast+82)
<          gaccel    = work(nlast+83)
<          relax     = work(nlast+84)
<          itrminc   = int(work(nlast+85))
<          tp(1,1)   = work(nlast+86)
<          tp(2,1)   = work(nlast+87)
<          tp(1,2)   = work(nlast+88)
<          tp(2,2)   = work(nlast+89)
<          ndgrd     = int(work(nlast+90))
<          ndwrt     = int(work(nlast+91))
<          i_bsl     = int(work(nlast+92))
<          keepambient = int(work(nlast+93))
Index: source/cfl3d/dist/updatedg.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/dist/updatedg.F,v
retrieving revision 1.15
retrieving revision 1.9
diff -r1.15 -r1.9
17c17
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
63,64d62
<       character*35 cmd1,cmd2
<       character*3 char1
116c114
<       common /unst/ time,cfltau,ntstep,ita,iunst,cfltau0,cfltauMax
---
>       common /unst/ time,cfltau,ntstep,ita,iunst
234,235d231
<                nou(1) = min(nou(1)+1,ibufdim)
<                write(bou(nou(1),1),443) lwk4 - nwork
240d235
<   443       format(' Increase keyword memadd allocation by ',i8)
512,513d506
<                   nou(1) = min(nou(1)+1,ibufdim)
<                   write(bou(nou(1),1),446) mdim - nwork
553c546
<             mytag   = mblk2nd(nbl)
---
>             mytag   = n1 
558c551
<             mytag   = mblk2nd(nbl)
---
>             mytag   = n1 
594c587
<                    mytag   = mblk2nd(nbl)
---
>                    mytag   = nstrt  
600c593
<                    mytag   = mblk2nd(nbl)
---
>                    mytag   = nstrt  
615c608
<                    mytag   = mblk2nd(nbl)
---
>                    mytag   = nstrt  
621c614
<                    mytag   = mblk2nd(nbl)
---
>                    mytag   = nstrt  
636c629
<                    mytag   = mblk2nd(nbl)
---
>                    mytag   = nstrt  
642c635
<                    mytag   = mblk2nd(nbl)
---
>                    mytag   = nstrt  
694,695d686
<                   nou(1) = min(nou(1)+1,ibufdim)
<                   write(bou(nou(1),1),446) mdim - nwork
700d690
<   446       format(' Increase keyword memadd allocation by ',i8)
744,745d733
<                   nou(1) = min(nou(1)+1,ibufdim)
<                   write(bou(nou(1),1),426) mdim - nroom
749d736
<   426          format(' Increase keyword memadd allocation by ',i8)
774,775d760
<                   nou(1) = min(nou(1)+1,ibufdim)
<                   write(bou(nou(1),1),431) mdim - nroom 
779d763
<   431       format(' Increase keyword memadd allocation by ',i8)
781d764
<                iflagv = 0
784,839c767
<      .                      nbuf,ibufdim,myid,mblk2nd,maxbl,nbl,
<      .                      1,iflagv,imin,imax,jmin,jmax,kmin,kmax)
< c    .                      0,iflagv,imin,imax,jmin,jmax,kmin,kmax)
<                iflagv = 0
<                if(iflagv.eq.1) then
<                  idim1=imax-imin+1
<                  jdim1=jmax-jmin+1
<                  kdim1=kmax-kmin+1
<                  call s_gwrite(nbl,idim,jdim,kdim,imin,imax,jmin,jmax,
<      .                         kmin,kmax,idim1,jdim1,kdim1,w(lx),w(ly),
<      .                         w(lz))
<                  call gridgen_glyf1(nbl)
<                  call gridgen_glyf2(nbl)
<                  cmd1='gridgen -b dgplot3d_gridgen0001.glf'
<                  cmd2='gridgen -b dgplot3d_gridgen0002.glf'
<                  if(nbl.lt.10) then
<                    write(char1,'(i1)') nbl
<                    cmd1(30:30) = char1(1:1)
<                    cmd2(30:30) = char1(1:1)
<                  else if(nbl.lt.100) then
<                    write(char1,'(i2)') nbl
<                    cmd1(29:30) = char1(1:2)
<                    cmd2(29:30) = char1(1:2)
<                  else
<                    write(char1,'(i3)') nbl
<                    cmd1(28:30) = char1(1:3)
<                    cmd2(28:30) = char1(1:3)
<                  end if
<                  Isys=system(cmd1)
<                  Isys=system(cmd2)
<                  call s_gread(nbl,idim,jdim,kdim,imin,imax,jmin,jmax,
<      .                        kmin,kmax,idim1,jdim1,kdim1,w(lx),w(ly),
<      .                        w(lz))
< c
<                  iflag = -1
<                  call metric(jdim,kdim,idim,w(lx),w(ly),w(lz),w(lsj),
<      .                       w(lsk),w(lsi),wk(lt2wk),wk(lt3wk),nbl,
<      .                       iflag,icnt,nbci0,nbcj0,nbck0,nbcidim,
<      .                       nbcjdim,nbckdim,ibcinfo,jbcinfo,kbcinfo,
<      .                       maxbl,maxseg,nou,bou,nbuf,ibufdim,myid,
<      .                       mblk2nd)
< c
< c                calculate temporal metrics for updated grid
< c
<                  call tmetric(jdim,kdim,idim,w(lsj),w(lsk),w(lsi),
<      .                        w(lx),w(ly),w(lz),wk(lvel),wk(lt1wk),
<      .                        wk(lt2wk),wk(lt3wk),nbl)
< c
< c                calculate volumes for updated grid
< c
<                  iflagv = 0
<                  call cellvol(jdim,kdim,idim,w(lx),w(ly),w(lz),w(lsj),
<      .                        w(lsk),w(lsi),w(lvol),wk(lt4wk),nou,bou,
<      .                        nbuf,ibufdim,myid,mblk2nd,maxbl,nbl,
<      .                        1,iflagv,imin,imax,jmin,jmax,kmin,kmax)
<                end if 
---
>      .                      nbuf,ibufdim,myid,mblk2nd,maxbl,nbl)
3332,3494d3259
<        subroutine s_gwrite(nbl,idim,jdim,kdim,ista,iend,jsta,jend,ksta,
<      .                     kend,idim1,jdim1,kdim1,x,y,z)
<        dimension x(jdim,kdim,idim),y(jdim,kdim,idim),z(jdim,kdim,idim)
< c
<       open(5000+nbl,status='unknown',form='formatted')
<       write(5000+nbl,'(i8)') 1
<       write(5000+nbl,'(3i8)')idim1,jdim1,kdim1
<       write(5000+nbl,'(5e21.12)') (((x(j,k,i),i=ista,iend),j=jsta,jend),
<      .                               k=ksta,kend)
<       write(5000+nbl,'(5e21.12)') (((y(j,k,i),i=ista,iend),j=jsta,jend),
<      .                               k=ksta,kend)
<       write(5000+nbl,'(5e21.12)') (((z(j,k,i),i=ista,iend),j=jsta,jend),
<      .                               k=ksta,kend)
<        close(5000+nbl)
<  
<        return
<        end
<       subroutine s_gread(nbl,idim,jdim,kdim,ista,iend,jsta,jend,ksta,
<      .                   kend,idim1,jdim1,kdim1,x,y,z)
<       dimension x(jdim,kdim,idim),y(jdim,kdim,idim),z(jdim,kdim,idim)
< c
<       open(5000+nbl,status='old',form='formatted')
<       read(5000+nbl,*) nblocks
<       read(5000+nbl,*)idim1,jdim1,kdim1
<       read(5000+nbl,*)
<      .          (((x(j,k,i),i=ista,iend),j=jsta,jend),k=ksta,kend)
<      .         ,(((y(j,k,i),i=ista,iend),j=jsta,jend),k=ksta,kend)
<      .         ,(((z(j,k,i),i=ista,iend),j=jsta,jend),k=ksta,kend)
<       close(5000+nbl)
<       return
<       end
<       subroutine gridgen_glyf1(nbl)
<       character*8 bgcontrl,fgcontl
<       character*5 filnm
<       character*3 char1
<       character*24 filnm2
< c
<       open(9700,file='gridgen.options1',status='old',
<      .    form='formatted')
<       read(9700,12030) bgcontrl,fgcontrl
< 12030 format(2a8)
<       read(9700,*) xmgrlx,xmgprlng,iter
<       close(9700)
<       filnm2 = 'dgplot3d_gridgen0001.glf'
<       if(nbl.lt.10) then
<         write(char1,'(i1)') nbl
<         filnm2(19:19) = char1(1:1)
<       else if(nbl.lt.100) then
<         write(char1,'(i2)') nbl
<         filnm2(18:19) = char1(1:2)
<       else
<         write(char1,'(i3)') nbl
<         filnm2(17:19) = char1(1:3)
<       end if
<       open(9900,file=filnm2,status='unknown',form='formatted')
<       filnm(1:5) = 'fort.'
<       iflnum = 5000+nbl
<       write(9900,11021) filnm,iflnum
<       write(9900,11022) 1,1,0
<       write(9900,11025)
<       write(9900,11026)  1
<       write(9900,11039) bgcontrl,fgcontrl,xmgrlx,xmgprlng,iter
<      .                 ,filnm,iflnum
< 11021 format('# Gridgen Journal File V1 (Gridgen 15.09 REL 3)',
<      .   /,'# Created Sun Aug 13 14:47:02 2006',/,
<      .     '#',/,'package require PWI_Glyph 1.6.9',/,/,
<      .     '# Delete any existing grids and database entities.  ',
<      .     'Reset AS/W, defaults, and',/,'# tolerances.',/,
<      .     'gg::memClear',/,'gg::aswDeleteBC -glob "*"',/,
<      .     'gg::aswDeleteVC -glob "*"',/,
<      .     'gg::aswSet GENERIC -dim 3',/,'gg::defReset',/,
<      .     'gg::tolReset',/,'# Check for user input after ',
<      .     'each function, but delay screen updates until',/,
<      .     '# script is finished.',/,'gg::updatePolicy INPUT_ONLY',/,/,
<      .     'set _ggTemp_(1) [gg::blkImport "',a5,i4,'" \ ',/,
<      .     '   -style PLOT3D -form ASCII -precision DOUBLE]')
< 11022 format('set _BL(',i1,') [lindex $_ggTemp_(',i1,') ',i1,']')
< 11025 format('unset _ggTemp_(1)')
< 11026 format('set _ggTemp_(2) [list',' $_BL(',i1,')]')
< 11039 format('gg::blkEllSolverBegin $_ggTemp_(2)',/,
<      .'# gg::blkTFISolverRun $_ggTemp_(2)',/,
<      .'  gg::blkEllSolverAtt $_ggTemp_(2) -bg_control ',a8,/,
<      .'  gg::blkEllSolverAtt $_ggTemp_(2) -fg_control ',a8,/,
<      .'  gg::blkEllSolverAtt $_ggTemp_(2) -spacing_calc INTERPOLATE',/,
<      .'  gg::blkEllSolverAtt $_ggTemp_(2) -angle_calc INTERPOLATE',/,
<      .'  gg::blkEllSolverAtt $_ggTemp_(2) -spacing_blend 2',/,
<      .'  gg::blkEllSolverAtt $_ggTemp_(2) -angle_blend 2',/,
<      .'  gg::blkEllSolverAtt $_ggTemp_(2) -mg_relax ',f3.2,/,
<      .'  gg::blkEllSolverAtt $_ggTemp_(2) -mg_prolongation ',f3.2,/,
<      .'  gg::blkEllSolverStep -iterations ',i5,' -nodisplay',/,
<      .'gg::blkEllSolverEnd',/,'unset _ggTemp_(2)',/,
<      .'gg::blkExport ALL "',a5,i4,'" \ ',/,
<      .'   -style PLOT3D -form ASCII -precision DOUBLE',/,
<      .'gg::terminate')
<        close(9900)
<       return
<       end
<       subroutine gridgen_glyf2(nbl)
<       character*8 bgcontrl,fgcontl
<       character*5 filnm
<       character*3 char1
<       character*24 filnm2
< c
<       open(9700,file='gridgen.options2',status='old',
<      .    form='formatted')
<       read(9700,12030) bgcontrl,fgcontrl
< 12030 format(2a8)
<       read(9700,*) xmgrlx,xmgprlng,iter
<       close(9700)
<       filnm2 = 'dgplot3d_gridgen0002.glf'
<       if(nbl.lt.10) then
<         write(char1,'(i1)') nbl
<         filnm2(19:19) = char1(1:1)
<       else if(nbl.lt.100) then
<         write(char1,'(i2)') nbl
<         filnm2(18:19) = char1(1:2)
<       else
<         write(char1,'(i3)') nbl
<         filnm2(17:19) = char1(1:3)
<       end if
<       open(9900,file=filnm2,status='unknown',form='formatted')
<       filnm(1:5) = 'fort.'
<       iflnum = 5000+nbl
<       write(9900,11021) filnm,iflnum
<       write(9900,11022) 1,1,0
<       write(9900,11025)
<       write(9900,11026)  1
<       write(9900,11039) bgcontrl,fgcontrl,xmgrlx,xmgprlng,iter
<      .                 ,filnm,iflnum
< 11021 format('# Gridgen Journal File V1 (Gridgen 15.09 REL 3)',
<      .   /,'# Created Sun Aug 13 14:47:02 2006',/,
<      .     '#',/,'package require PWI_Glyph 1.6.9',/,/,
<      .     '# Delete any existing grids and database entities.  ',
<      .     'Reset AS/W, defaults, and',/,'# tolerances.',/,
<      .     'gg::memClear',/,'gg::aswDeleteBC -glob "*"',/,
<      .     'gg::aswDeleteVC -glob "*"',/,
<      .     'gg::aswSet GENERIC -dim 3',/,'gg::defReset',/,
<      .     'gg::tolReset',/,'# Check for user input after ',
<      .     'each function, but delay screen updates until',/,
<      .     '# script is finished.',/,'gg::updatePolicy INPUT_ONLY',/,/,
<      .     'set _ggTemp_(1) [gg::blkImport "',a5,i4,'" \ ',/,
<      .     '   -style PLOT3D -form ASCII -precision DOUBLE]')
< 11022 format('set _BL(',i1,') [lindex $_ggTemp_(',i1,') ',i1,']')
< 11025 format('unset _ggTemp_(1)')
< 11026 format('set _ggTemp_(2) [list',' $_BL(',i1,')]')
< 11039 format('gg::blkEllSolverBegin $_ggTemp_(2)',/,
<      .'# gg::blkTFISolverRun $_ggTemp_(2)',/,
<      .'  gg::blkEllSolverAtt $_ggTemp_(2) -bg_control ',a8,/,
<      .'  gg::blkEllSolverAtt $_ggTemp_(2) -fg_control ',a8,/,
<      .'  gg::blkEllSolverAtt $_ggTemp_(2) -spacing_calc INTERPOLATE',/,
<      .'  gg::blkEllSolverAtt $_ggTemp_(2) -angle_calc INTERPOLATE',/,
<      .'  gg::blkEllSolverAtt $_ggTemp_(2) -spacing_blend 2',/,
<      .'  gg::blkEllSolverAtt $_ggTemp_(2) -angle_blend 2',/,
<      .'  gg::blkEllSolverAtt $_ggTemp_(2) -mg_relax ',f3.2,/,
<      .'  gg::blkEllSolverAtt $_ggTemp_(2) -mg_prolongation ',f3.2,/,
<      .'  gg::blkEllSolverStep -iterations ',i5,' -nodisplay',/,
<      .'gg::blkEllSolverEnd',/,'unset _ggTemp_(2)',/,
<      .'gg::blkExport ALL "',a5,i4,'" \ ',/,
<      .'   -style PLOT3D -form ASCII -precision DOUBLE',/,
<      .'gg::terminate')
<        close(9900)
<       return
<       end
Index: source/cfl3d/dist/updateg.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/dist/updateg.F,v
retrieving revision 1.6
retrieving revision 1.4
diff -r1.6 -r1.4
10c10
<      .                   mblk2nd,irigb,irbtrim,nt)
---
>      .                   mblk2nd,irigb,irbtrim)
12c12
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
85c85
<      .              tp(4,4),zlfct,epstr,relax,ittrst 
---
>      .              tp(4,4)
147c147
<             if (irigb .gt. 0 .and. nt .gt. 0) then
---
>             if (irigb .gt. 0) then
161a162,163
>                zorig(nbl) = zrg1
>                wtrans(nbl)= dzdt
165,172d166
< c
< c     This formulation assumes small pitch angles.  sin(thetay)=0,
< c     cos(thetay) = 1.
< c
<                zorig(nbl) = zrg1
<                utrans(nbl)= 0.
<                vtrans(nbl)= 0.
<                wtrans(nbl)= (zorig(nbl) - zold)/dt
197a192,196
>                thetaxl(nbl) = thetax(nbl)
>                thetayl(nbl) = thetay(nbl)
>                thetazl(nbl) = thetaz(nbl)
>                thetay(nbl)  = alf1
>                omegay(nbl)  = thtd1
211c210
<             if (irbtrim .gt. 0 .and. nt .gt. 0) then
---
>             if (irbtrim .gt. 0) then
227c226,230
<                omegay(nbl)  = epstr*(thetay(nbl)-thetayl(nbl))
---
>                thetaxl(nbl) = thetax(nbl)
>                thetayl(nbl) = thetay(nbl)
>                thetazl(nbl) = thetaz(nbl)
>                thetay(nbl)  = alf1
>                omegay(nbl)  = (alf1-alf0)/dt
240,241c243
<             if (itrans(nbl) .gt. 0 .and. irbtrim .eq. 0 .and.
<      .          irigb .eq. 0 .and. nt .gt. 0) then
---
>             if (itrans(nbl) .gt. 0) then
270,271c272
<             if (irotat(nbl) .gt. 0 .and. irbtrim .eq. 0 .and.
<      .          irigb .eq. 0 .and. nt .gt. 0) then
---
>             if (irotat(nbl) .gt. 0) then
Index: source/cfl3d/dist/wrest.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/dist/wrest.F,v
retrieving revision 1.15
retrieving revision 1.14
diff -r1.15 -r1.14
3d2
<      .                 n_clcd, clcd, nblocks_clcd, blocks_clcd,
10c9
<      .                 nou,bou,nbuf,ibufdim,qavg,q2avg,x,y,z)
---
>      .                 nou,bou,nbuf,ibufdim,qavg,x,y,z)
12c11
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
47d45
<       integer blocks_clcd
51d48
<      .          clcd(2,n_clcd,ncycmax), blocks_clcd(2,nblocks_clcd),
61c58
<       dimension qavg(jdim,kdim,idim,5),x(jdim,kdim,idim),
---
>       dimension qavg(jdim-1,kdim-1,idim-1,5),x(jdim,kdim,idim),
69d65
<       dimension q2avg(jdim,kdim,idim,5)
71c67
<       common /ginfo2/ lq2avg,iskip_blocks,inc_2d(3),inc_coarse(3)
---
> c
75c71
<       common /unst/ time,cfltau,ntstep,ita,iunst,cfltau0,cfltauMax
---
>       common /unst/ time,cfltau,ntstep,ita,iunst
91c87
<       common /avgdata/ xnumavg,iteravg,xnumavg2,ipertavg,iclcd
---
>       common /avgdata/ xnumavg,iteravg
124d119
<       itag_qavg2  = itag_qavg   + ioffset
707d701
< 
744c738
<             call MPI_Send(qavg,jki5,MY_MPI_REAL,
---
>             call MPI_Send(qavg,jkim5,MY_MPI_REAL,
748c742
<             call MPI_Recv(qavg,jki5,MY_MPI_REAL,
---
>             call MPI_Recv(qavg,jkim5,MY_MPI_REAL,
751,761d744
<          if (ipertavg .eq. 1 .or. ipertavg .eq. 2) then
<             if (myid .eq. mblk2nd(nbl)) then                       
<                mytag = itag_q2avg + nbl                            
<                call MPI_Send(q2avg,jki5,MY_MPI_REAL,               
<      .              myhost,mytag,mycomm,ierr)             
<             else if (myid .eq. myhost) then                        
<                mytag = itag_q2avg + nbl                            
<                call MPI_Recv(q2avg,jki5,MY_MPI_REAL,               
<      .              nd_srce,mytag,mycomm,istat,ierr)      
<             end if
<          end if                                           
765,885c748,804
<          if (ipertavg .eq. 0) then
< c     write cell-centered plot3d files of current grid and averaged q's
<             if (myid .eq. myhost) then
<                if (ialph .eq. 0) then
<                   write(96)   (((0.125*(x(j  ,k  ,i  )+x(j+1,k  ,i  )+
<      +                 x(j  ,k+1,i  )+x(j  ,k  ,i+1)+
<      +                 x(j+1,k+1,i  )+x(j+1,k  ,i+1)+
<      +                 x(j  ,k+1,i+1)+x(j+1,k+1,i+1)),
<      +                 i=1,idim-1),j=1,jdim-1),k=1,kdim-1),
<      +                 (((0.125*(y(j  ,k  ,i  )+y(j+1,k  ,i  )+
<      +                 y(j  ,k+1,i  )+y(j  ,k  ,i+1)+
<      +                 y(j+1,k+1,i  )+y(j+1,k  ,i+1)+
<      +                 y(j  ,k+1,i+1)+y(j+1,k+1,i+1)),
<      +                 i=1,idim-1),j=1,jdim-1),k=1,kdim-1),
<      +                 (((0.125*(z(j  ,k  ,i  )+z(j+1,k  ,i  )+
<      +                 z(j  ,k+1,i  )+z(j  ,k  ,i+1)+
<      +                 z(j+1,k+1,i  )+z(j+1,k  ,i+1)+
<      +                 z(j  ,k+1,i+1)+z(j+1,k+1,i+1)),
<      +                 i=1,idim-1),j=1,jdim-1),k=1,kdim-1),
<      +                 (((int(blank(j,k,i)),
<      +                 i=1,idim-1),j=1,jdim-1),k=1,kdim-1)
<                else
<                   write(96)   (((0.125*(x(j  ,k  ,i  )+x(j+1,k  ,i  )+
<      +                 x(j  ,k+1,i  )+x(j  ,k  ,i+1)+
<      +                 x(j+1,k+1,i  )+x(j+1,k  ,i+1)+
<      +                 x(j  ,k+1,i+1)+x(j+1,k+1,i+1)),
<      +                 i=1,idim-1),j=1,jdim-1),k=1,kdim-1),
<      +                 (((0.125*(z(j  ,k  ,i  )+z(j+1,k  ,i  )+
<      +                 z(j  ,k+1,i  )+z(j  ,k  ,i+1)+
<      +                 z(j+1,k+1,i  )+z(j+1,k  ,i+1)+
<      +                 z(j  ,k+1,i+1)+z(j+1,k+1,i+1)),
<      +                 i=1,idim-1),j=1,jdim-1),k=1,kdim-1),
<      +                 (((-0.125*(y(j  ,k  ,i  )+y(j+1,k  ,i  )+
<      +                 y(j  ,k+1,i  )+y(j  ,k  ,i+1)+
<      +                 y(j+1,k+1,i  )+y(j+1,k  ,i+1)+
<      +                 y(j  ,k+1,i+1)+y(j+1,k+1,i+1)),
<      +                 i=1,idim-1),j=1,jdim-1),k=1,kdim-1),
<      +                 (((int(blank(j,k,i)),
<      +                 i=1,idim-1),j=1,jdim-1),k=1,kdim-1)
<                end if
< c     xnumavg is used to store the number of averaged iterations so far
<                write(97) xmach,alpha,reue,xnumavg
<                if (ialph .eq. 0) then
<                   write(97) ((((qavg(j,k,i,m),i=1,idim-1),j=1,jdim-1),
<      +                 k=1,kdim-1),m=1,5) 
<                else
<                   write(97) (((qavg(j,k,i,1),i=1,idim-1),j=1,jdim-1),
<      +                 k=1,kdim-1),
<      +                 (((qavg(j,k,i,2),i=1,idim-1),j=1,jdim-1),
<      +                 k=1,kdim-1),
<      +                 (((qavg(j,k,i,4),i=1,idim-1),j=1,jdim-1),
<      +                 k=1,kdim-1),
<      +                 (((-qavg(j,k,i,3),i=1,idim-1),j=1,jdim-1),
<      +                 k=1,kdim-1),
<      +                 (((qavg(j,k,i,5),i=1,idim-1),j=1,jdim-1),
<      +                 k=1,kdim-1)
<                end if
<             end if
<          else
<             if (myid .eq. myhost) then
<                if (ialph .eq. 0) then
<                   write(96)(((x(j,k,i),i=1,idim),j=1,jdim),k=1,kdim), 
<      +                 (((y(j,k,i),i=1,idim),j=1,jdim),k=1,kdim), 
<      +                 (((z(j,k,i),i=1,idim),j=1,jdim),k=1,kdim) 
<                   
<                   
<                else
<                   write(96)(((x(j,k,i),i=1,idim),j=1,jdim),k=1,kdim), 
<      +                 (((z(j,k,i),i=1,idim),j=1,jdim),k=1,kdim), 
<      +                 (((-y(j,k,i),i=1,idim),j=1,jdim),k=1,kdim) 
<                end if
<                
<                write(97) xmach,alpha,reue,xnumavg
<                write(98) xmach,alpha,reue,xnumavg2 
<                write(95) xmach,alpha,reue,xnumavg2 
<                if(ialph .eq. 0)then
<                   write(97) ((((qavg(j,k,i,m),i=1,idim),j=1,jdim), 
<      +                 k=1,kdim),m=1,5) 
< c     
<                   write(98) ((((q2avg(j,k,i,m),i=1,idim),j=1,jdim), 
<      +                 k=1,kdim),m=1,5) 
< c     
<                   write(95) ((((q2avg(j,k,i,m)-qavg(j,k,i,m)**2,
<      +                 i=1,idim),j=1,jdim),k=1,kdim),m=1,5) 
<                else
<                   write(97) (((qavg(j,k,i,1),i=1,idim),j=1,jdim)
<      +                 ,k=1,kdim),
<      +                 (((qavg(j,k,i,2),i=1,idim),j=1,jdim),k=1,kdim),
<      +                 (((qavg(j,k,i,4),i=1,idim),j=1,jdim),k=1,kdim),
<      +                 (((-qavg(j,k,i,3),i=1,idim),j=1,jdim),k=1,kdim),
<      +                 (((qavg(j,k,i,5),i=1,idim),j=1,jdim),k=1,kdim)
<                   write(98) (((q2avg(j,k,i,1),i=1,idim),j=1,jdim)
<      +                 ,k=1,kdim),
<      +                 (((q2avg(j,k,i,2),i=1,idim),j=1,jdim),k=1,kdim),
<      +                 (((q2avg(j,k,i,4),i=1,idim),j=1,jdim),k=1,kdim),
<      +                 (((q2avg(j,k,i,3),i=1,idim),j=1,jdim),k=1,kdim),
<      +                 (((q2avg(j,k,i,5),i=1,idim),j=1,jdim),k=1,kdim)
<                   write(95)(((q2avg(j,k,i,1)-qavg(j,k,i,1)**2,i=1,idim),
<      +                 j=1,jdim),k=1,kdim),
<      +                 (((q2avg(j,k,i,2)-qavg(j,k,i,2)**2,i=1,idim),
<      +                 j=1,jdim),k=1,kdim),
<      +                 (((q2avg(j,k,i,4)-qavg(j,k,i,4)**2,i=1,idim),
<      +                 j=1,jdim),k=1,kdim),
<      +                 (((q2avg(j,k,i,3)-qavg(j,k,i,3)**2,i=1,idim),
<      +                 j=1,jdim),k=1,kdim),
<      +                 (((q2avg(j,k,i,5)-qavg(j,k,i,5)**2,i=1,idim),
<      +                 j=1,jdim),k=1,kdim)
<                endif            !end of ialph=0/1
< c     
<             end if              !end of myid=host
< 
<          end if                 !end of ipertavg=1/2 
<       end if                    !end of iteravg=1/2 
<       
< c clcd information
< c
<       if (myid .eq. myhost .and. iskip.gt.0) then
<          if (iclcd .eq. 1 .or. iclcd .eq. 2) then
<             write(102) n_clcd,nblocks_clcd,ntt
<             write(102) clcd(1:2,1:n_clcd,1:ntt)
<          end if
---
> c   write cell-centered plot3d files of current grid and averaged q's
>         if (myid .eq. myhost) then
>         if (ialph .eq. 0) then
>         write(96)   (((0.125*(x(j  ,k  ,i  )+x(j+1,k  ,i  )+
>      +                        x(j  ,k+1,i  )+x(j  ,k  ,i+1)+
>      +                        x(j+1,k+1,i  )+x(j+1,k  ,i+1)+
>      +                        x(j  ,k+1,i+1)+x(j+1,k+1,i+1)),
>      +                        i=1,idim-1),j=1,jdim-1),k=1,kdim-1),
>      +              (((0.125*(y(j  ,k  ,i  )+y(j+1,k  ,i  )+
>      +                        y(j  ,k+1,i  )+y(j  ,k  ,i+1)+
>      +                        y(j+1,k+1,i  )+y(j+1,k  ,i+1)+
>      +                        y(j  ,k+1,i+1)+y(j+1,k+1,i+1)),
>      +                        i=1,idim-1),j=1,jdim-1),k=1,kdim-1),
>      +              (((0.125*(z(j  ,k  ,i  )+z(j+1,k  ,i  )+
>      +                        z(j  ,k+1,i  )+z(j  ,k  ,i+1)+
>      +                        z(j+1,k+1,i  )+z(j+1,k  ,i+1)+
>      +                        z(j  ,k+1,i+1)+z(j+1,k+1,i+1)),
>      +                        i=1,idim-1),j=1,jdim-1),k=1,kdim-1),
>      +              (((int(blank(j,k,i)),
>      +                        i=1,idim-1),j=1,jdim-1),k=1,kdim-1)
>         else
>         write(96)   (((0.125*(x(j  ,k  ,i  )+x(j+1,k  ,i  )+
>      +                        x(j  ,k+1,i  )+x(j  ,k  ,i+1)+
>      +                        x(j+1,k+1,i  )+x(j+1,k  ,i+1)+
>      +                        x(j  ,k+1,i+1)+x(j+1,k+1,i+1)),
>      +                        i=1,idim-1),j=1,jdim-1),k=1,kdim-1),
>      +              (((0.125*(z(j  ,k  ,i  )+z(j+1,k  ,i  )+
>      +                        z(j  ,k+1,i  )+z(j  ,k  ,i+1)+
>      +                        z(j+1,k+1,i  )+z(j+1,k  ,i+1)+
>      +                        z(j  ,k+1,i+1)+z(j+1,k+1,i+1)),
>      +                        i=1,idim-1),j=1,jdim-1),k=1,kdim-1),
>      +              (((-0.125*(y(j  ,k  ,i  )+y(j+1,k  ,i  )+
>      +                        y(j  ,k+1,i  )+y(j  ,k  ,i+1)+
>      +                        y(j+1,k+1,i  )+y(j+1,k  ,i+1)+
>      +                        y(j  ,k+1,i+1)+y(j+1,k+1,i+1)),
>      +                        i=1,idim-1),j=1,jdim-1),k=1,kdim-1),
>      +              (((int(blank(j,k,i)),
>      +                        i=1,idim-1),j=1,jdim-1),k=1,kdim-1)
>         end if
> c   xnumavg is used to store the number of averaged iterations so far
>         write(97) xmach,alpha,reue,xnumavg
>         if (ialph .eq. 0) then
>         write(97) ((((qavg(j,k,i,m),i=1,idim-1),j=1,jdim-1),
>      +    k=1,kdim-1),m=1,5) 
>         else
>         write(97) (((qavg(j,k,i,1),i=1,idim-1),j=1,jdim-1),
>      +    k=1,kdim-1),
>      +            (((qavg(j,k,i,2),i=1,idim-1),j=1,jdim-1),
>      +    k=1,kdim-1),
>      +            (((qavg(j,k,i,4),i=1,idim-1),j=1,jdim-1),
>      +    k=1,kdim-1),
>      +            (((-qavg(j,k,i,3),i=1,idim-1),j=1,jdim-1),
>      +    k=1,kdim-1),
>      +            (((qavg(j,k,i,5),i=1,idim-1),j=1,jdim-1),
>      +    k=1,kdim-1)
>         end if
>         end if
887c806
< 
---
> c
Index: source/cfl3d/dist/wrestg.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/dist/wrestg.F,v
retrieving revision 1.9
retrieving revision 1.7
diff -r1.9 -r1.7
16c16
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
92c92
<       common /unst/ time,cfltau,ntstep,ita,iunst,cfltau0,cfltauMax
---
>       common /unst/ time,cfltau,ntstep,ita,iunst
96,97d95
<       common /deformz/ beta1,beta2,alpha1,alpha2,isktyp,negvol,meshdef,
<      .                 nsprgit,ndgrd,ndwrt
377,382d374
<                   if(ndwrt.ne.0) then
<                    write(98,'(5e21.12)')
<      .                     (((x(j,k,i),i=1,idim),j=1,jdim),k=1,kdim),
<      .                     (((y(j,k,i),i=1,idim),j=1,jdim),k=1,kdim),
<      .                     (((z(j,k,i),i=1,idim),j=1,jdim),k=1,kdim)
<                   end if
Index: source/cfl3d/libs/ae_pred.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/ae_pred.F,v
retrieving revision 1.6
retrieving revision 1.2
diff -r1.6 -r1.2
3c3
<      .                zorig,nmds,maxaes,irbtrim,maxbl,myid)
---
>      .                zorig,nmds,maxaes,irbtrim,maxbl)
5c5
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
27a28
>       dimension xorig(maxbl),yorig(maxbl),zorig(maxbl)
53,54c54,55
<       call moddefl(xs,xxn,aesrfdat,perturb,cmyt,cnwt,xorig,yorig,
<      .             zorig,maxaes,nmds,irbtrim,maxbl,myid)
---
>       call moddefl(xs,aesrfdat,perturb,cmyt,cnwt,xorig,yorig,
>      .             zorig,maxaes,nmds,irbtrim,maxbl)
Index: source/cfl3d/libs/af3f.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/af3f.F,v
retrieving revision 1.3
retrieving revision 1.2
diff -r1.3 -r1.2
6c6
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
42c42
<       common /unst/ time,cfltau,ntstep,ita,iunst,cfltau0,cfltauMax
---
>       common /unst/ time,cfltau,ntstep,ita,iunst
Index: source/cfl3d/libs/amafi.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/amafi.F,v
retrieving revision 1.3
retrieving revision 1.2
diff -r1.3 -r1.2
4c4
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
26c26
<       common /unst/ time,cfltau,ntstep,ita,iunst,cfltau0,cfltauMax
---
>       common /unst/ time,cfltau,ntstep,ita,iunst
Index: source/cfl3d/libs/amafj.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/amafj.F,v
retrieving revision 1.3
retrieving revision 1.2
diff -r1.3 -r1.2
4c4
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
25c25
<       common /unst/ time,cfltau,ntstep,ita,iunst,cfltau0,cfltauMax
---
>       common /unst/ time,cfltau,ntstep,ita,iunst
Index: source/cfl3d/libs/amafk.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/amafk.F,v
retrieving revision 1.3
retrieving revision 1.2
diff -r1.3 -r1.2
4c4
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
24c24
<       common /unst/ time,cfltau,ntstep,ita,iunst,cfltau0,cfltauMax
---
>       common /unst/ time,cfltau,ntstep,ita,iunst
Index: source/cfl3d/libs/barth3d.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/barth3d.F,v
retrieving revision 1.9
retrieving revision 1.8
diff -r1.9 -r1.8
8c8
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
36c36
<       common /unst/ time,cfltau,ntstep,ita,iunst,cfltau0,cfltauMax
---
>       common /unst/ time,cfltau,ntstep,ita,iunst
Index: source/cfl3d/libs/bc2008.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/bc2008.F,v
retrieving revision 1.8
retrieving revision 1.7
diff -r1.8 -r1.7
7c7
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
45c45
<       common /unst/ time,cfltau,ntstep,ita,iunst,cfltau0,cfltauMax
---
>       common /unst/ time,cfltau,ntstep,ita,iunst
Index: source/cfl3d/libs/bc2016.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/bc2016.F,v
retrieving revision 1.5
retrieving revision 1.3
diff -r1.5 -r1.3
9c9
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
98c98
<       common /unst/ time,cfltau,ntstep,ita,iunst,cfltau0,cfltauMax
---
>       common /unst/ time,cfltau,ntstep,ita,iunst
183c183
<       if (real(rfreq).lt.0.0) then
---
>       if (rfreq.lt.0.0) then
429c429
<       if (real(rfreq).lt.0.0) then
---
>       if (rfreq.lt.0.0) then
675c675
<       if (real(rfreq).lt.0.0) then
---
>       if (rfreq.lt.0.0) then
921c921
<       if (real(rfreq).lt.0.0) then
---
>       if (rfreq.lt.0.0) then
1167c1167
<       if (real(rfreq).lt.0.0) then
---
>       if (rfreq.lt.0.0) then
1413c1413
<       if (real(rfreq).lt.0.0) then
---
>       if (rfreq.lt.0.0) then
Index: source/cfl3d/libs/bc2102.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/bc2102.F,v
retrieving revision 1.5
retrieving revision 1.4
diff -r1.5 -r1.4
7c7
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
47c47
<       common /unst/ time,cfltau,ntstep,ita,iunst,cfltau0,cfltauMax
---
>       common /unst/ time,cfltau,ntstep,ita,iunst
Index: source/cfl3d/libs/cellvol.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/cellvol.F,v
retrieving revision 1.6
retrieving revision 1.4
diff -r1.6 -r1.4
2,3c2
<      .                   nbuf,ibufdim,myid,mblk2nd,maxbl,nbl,iflagv1,
<      .                   iflagv,imin,imax,jmin,jmax,kmin,kmax)
---
>      .                   nbuf,ibufdim,myid,mblk2nd,maxbl,nbl)
5c4
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
25,26c24
<      .                 nsprgit,ndgrd,ndwrt 
<       common /zero/ iexp
---
>      .                 nsprgit
28d25
<       eps  =  10.**(-iexp+1)
177,182d173
<          imin = 100000000
<          imax = 0
<          jmin = 100000000
<          jmax = 0
<          kmin = 100000000
<          kmax = 0
186,199c177,180
<            if (real(vol(j,k,i)).lt.real(eps)) then 
<              if(i.lt.imin) imin = i
<              if(i.gt.imax) imax = i
<              if(j.lt.jmin) jmin = j
<              if(j.gt.jmax) jmax = j
<              if(k.lt.kmin) kmin = k
<              if(k.gt.kmax) kmax = k
<              iflagv = 1
<              vol(j,k,i) = ccabs(vol(j,k,i))
<              if(iflagv1.eq.1) then
<                nou(1) = min(nou(1)+1,ibufdim)
<                write(bou(nou(1),1),83) i,j,k,nbl
<              end if
<            end if
---
>          if (real(vol(j,k,i)).gt.0.0) go to 65
>          vol(j,k,i) = ccabs(vol(j,k,i))
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),83) i,j,k,nbl
203,214d183
<          imin = imin - 10
<          jmin = jmin - 10
<          kmin = kmin - 10
<          imax = imax + 10
<          jmax = jmax + 10
<          kmax = kmax + 10
<          if(imin.lt.1   ) imin=1
<          if(jmin.lt.1   ) jmin=1
<          if(kmin.lt.1   ) kmin=1
<          if(imax.gt.idim) imax=idim
<          if(jmax.gt.jdim) jmax=jdim
<          if(kmax.gt.kdim) kmax=kdim
Index: source/cfl3d/libs/cgnstools.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/cgnstools.F,v
retrieving revision 1.15
retrieving revision 1.13
diff -r1.15 -r1.13
2c2
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
971,972c971,973
< c     smin, xjb, etc). Currently we output nearby values for these.
< c     For 2-D solutions, rind cells are not written in the i-direction.
---
> c     smin, xjb, etc). Currently we output -999 for these o indicate 
> c     are not applicable. For 2-D solutions, rind cells are not written
> c     in the i-direction
1868c1869
<       dimension numseg(6),normalindex(3)
---
>       dimension numseg(6)
1970c1971
<       dimension ibctyp(maxseg),numdata(maxseg),normalindex(3)
---
>       dimension ibctyp(maxseg),numdata(maxseg)
4882c4883
< c     Currently we output nearby values for these.
---
> c     Currently we output -999 to indicate they are not applicable.
5410c5411
< c                        nearby values)
---
> c                        -999)
5421a5423,5446
> c   Load dummy value (-999) for rind cells if iflag=2
>       if(iflag .eq. 2) then
>         do i=i2d,idima-i2d,idima-i2d
>         do j=0,jdima
>         do k=0,kdima
>           wk(i,j,k)=-999.
>         enddo
>         enddo
>         enddo
>         do j=0,jdima,jdima
>         do i=i2d,idima-i2d
>         do k=0,kdima
>           wk(i,j,k)=-999.
>         enddo
>         enddo
>         enddo
>         do k=0,kdima,kdima
>         do i=i2d,idima-i2d
>         do j=0,jdima
>           wk(i,j,k)=-999.
>         enddo
>         enddo
>         enddo
>       end if
5450,5489d5474
< c   Load nearby values for rind cells if iflag=2
<       if(iflag .eq. 2) then
<         if (i2d .ne. 1) then
<         i=0
<         do j=1,jdima-1
<         do k=1,kdima-1
<           wk(i,j,k)=wk(i+1,j,k)
<         enddo
<         enddo
<         do j=1,jdima-1
<           wk(i,j,0)=wk(i+1,j,1)
<           wk(i,j,kdima)=wk(i+1,j,kdima-1)
<         enddo
<         do k=1,kdima-1
<           wk(i,0,k)=wk(i+1,1,k)
<           wk(i,jdima,k)=wk(i+1,jdima-1,k)
<         enddo
<         wk(i,0,0)=wk(i+1,1,1)
<         wk(i,jdima,0)=wk(i+1,jdima-1,1)
<         wk(i,0,kdima)=wk(i+1,1,kdima-1)
<         wk(i,jdima,kdima)=wk(i+1,jdima-1,kdima-1)
<         i=idima
<         do j=1,jdima-1
<         do k=1,kdima-1
<           wk(i,j,k)=wk(i-1,j,k)
<         enddo
<         enddo
<         do k=1,kdima-1
<           wk(i,0,k)=wk(i-1,1,k)
<           wk(i,jdima,k)=wk(i-1,jdima-1,k)
<         enddo
<         do j=1,jdima-1
<           wk(i,j,0)=wk(i-1,j,1)
<           wk(i,j,kdima)=wk(i-1,j,kdima-1)
<         enddo
<         wk(i,0,0)=wk(i-1,1,1)
<         wk(i,jdima,0)=wk(i-1,jdima-1,1)
<         wk(i,0,kdima)=wk(i-1,1,kdima-1)
<         wk(i,jdima,kdima)=wk(i-1,jdima-1,kdima-1)
<         end if
5491,5573c5476
<         j=0
<         do i=1,idima-1
<         do k=1,kdima-1
<           wk(i,j,k)=wk(i,j+1,k)
<         enddo
<         enddo
<         do i=1,idima-1
<           wk(i,j,0)=wk(i,j+1,1)
<           wk(i,j,kdima)=wk(i,j+1,kdima-1)
<         enddo
<         if (i2d .ne. 1) then
<           do k=1,kdima-1
<             wk(0,j,k)=wk(1,j+1,k)
<             wk(idima,j,k)=wk(idima-1,j+1,k)
<           enddo
<           wk(0,j,0)=wk(1,j+1,1)
<           wk(idima,j,0)=wk(idima-1,j+1,1)
<           wk(0,j,kdima)=wk(1,j+1,kdima-1)
<           wk(idima,j,kdima)=wk(idima-1,j+1,kdima-1)
<         end if
<         j=jdima
<         do i=1,idima-1
<         do k=1,kdima-1
<           wk(i,j,k)=wk(i,j-1,k)
<         enddo
<         enddo
<         do i=1,idima-1
<           wk(i,j,0)=wk(i,j-1,1)
<           wk(i,j,kdima)=wk(i,j-1,kdima-1)
<         enddo
<         if (i2d .ne. 1) then
<           do k=1,kdima-1
<             wk(0,j,k)=wk(1,j-1,k)
<             wk(idima,j,k)=wk(idima-1,j-1,k)
<           enddo
<           wk(0,j,0)=wk(1,j-1,1)
<           wk(idima,j,0)=wk(idima-1,j-1,1)
<           wk(0,j,kdima)=wk(1,j-1,kdima-1)
<           wk(idima,j,kdima)=wk(idima-1,j-1,kdima-1)
<         end if
< c
<         k=0
<         do i=1,idima-1
<         do j=1,jdima-1
<           wk(i,j,k)=wk(i,j,k+1)
<         enddo
<         enddo
<         do i=1,idima-1
<           wk(i,0,k)=wk(i,1,k+1)
<           wk(i,jdima,k)=wk(i,jdima-1,k+1)
<         enddo
<         if (i2d .ne. 1) then
<           do j=1,jdima-1
<             wk(0,j,k)=wk(1,j,k+1)
<             wk(idima,j,k)=wk(idima-1,j,k+1)
<           enddo
<           wk(0,0,k)=wk(1,1,k+1)
<           wk(idima,0,k)=wk(idima-1,1,k+1)
<           wk(0,jdima,k)=wk(1,jdima-1,k+1)
<           wk(idima,jdima,k)=wk(idima-1,jdima-1,k+1)
<         end if
<         k=kdima
<         do i=1,idima-1
<         do j=1,jdima-1
<           wk(i,j,k)=wk(i,j,k-1)
<         enddo
<         enddo
<         do i=1,idima-1
<           wk(i,0,k)=wk(i,1,k-1)
<           wk(i,jdima,k)=wk(i,jdima-1,k-1)
<         enddo
<         if (i2d .ne. 1) then
<           do j=1,jdima-1
<             wk(0,j,k)=wk(1,j,k-1)
<             wk(idima,j,k)=wk(idima-1,j,k-1)
<           enddo
<           wk(0,0,k)=wk(1,1,k-1)
<           wk(idima,0,k)=wk(idima-1,1,k-1)
<           wk(0,jdima,k)=wk(1,jdima-1,k-1)
<           wk(idima,jdima,k)=wk(idima-1,jdima-1,k-1)
<         end if
<         return
<       end if
---
>       if(iflag .eq. 2) return
Index: source/cfl3d/libs/ctime1.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/ctime1.F,v
retrieving revision 1.5
retrieving revision 1.3
diff -r1.5 -r1.3
5c5
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
39c39
<       common /unst/ time,cfltau,ntstep,ita,iunst,cfltau0,cfltauMax
---
>       common /unst/ time,cfltau,ntstep,ita,iunst
42d41
<       common /mgrd/ levt,kode,mode,ncyc,mtt,icyc,level,lglobal
54,59c53
<             if( real(cfltauMax) > real(cfltau) .and. ncyc > 2 ) then
<                dt = -(cfltau +
<      $              (cfltauMax-cfltau)*((icyc-1.)/(ncyc-1.))**cfltau0)
<             else
<                dt=-cfltau
<             end if
---
>             dt=-cfltau
Index: source/cfl3d/libs/deform.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/deform.F,v
retrieving revision 1.16
retrieving revision 1.12
diff -r1.16 -r1.12
56c56
<       common /unst/ time,cfltau,ntstep,ita,iunst,cfltau0,cfltauMax 
---
>       common /unst/ time,cfltau,ntstep,ita,iunst
399c399
<      .                 nsprgit,ndgrd,ndwrt
---
>      .                 nsprgit
461c461
<       call atimes(n,nc,x,r,sa,ija,0,myid) 
---
>       call atimes(n,nc,x,r,sa,ija,0) 
466c466
<       call atimes(n,nc,r,rr,sa,ija,0,myid) 
---
>       call atimes(n,nc,r,rr,sa,ija,0) 
509c509
<         call atimes(n,nc,p,z,sa,ija,0,myid) 
---
>         call atimes(n,nc,p,z,sa,ija,0) 
515c515
<         call atimes(n,nc,pp,zz,sa,ija,1,myid) 
---
>         call atimes(n,nc,pp,zz,sa,ija,1) 
598c598
<       SUBROUTINE atimes(n,nc,x,r,sa,ija,itrnsp,myid) 
---
>       SUBROUTINE atimes(n,nc,x,r,sa,ija,itrnsp) 
604c604
<         call dsprsax(sa,ija,x,r,n,nc,myid) 
---
>         call dsprsax(sa,ija,x,r,n,nc) 
606c606
<         call dsprstx(sa,ija,x,r,n,nc,myid) 
---
>         call dsprstx(sa,ija,x,r,n,nc) 
612c612
<       SUBROUTINE dsprstx(sa,ija,x,b,n,nc,myid)
---
>       SUBROUTINE dsprstx(sa,ija,x,b,n,nc)
656c656
<       SUBROUTINE dsprsax(sa,ija,x,b,n,nc,myid)
---
>       SUBROUTINE dsprsax(sa,ija,x,b,n,nc)
792c792
<      .                 nsprgit,ndgrd,ndwrt
---
>      .                 nsprgit
827c827
<             if(rave.lt.rmin.and.rave.gt.eps) rmin = rave  
---
>             if(rave.lt.rmin.and.rave.gt.0.) rmin = rave  
830c830
<         eps1 = rmin/10000.
---
>         eps = rmin/10000.
847c847
<      .                     +eps1 
---
>      .                     +eps 
951c951
<      .                 nsprgit,ndgrd,ndwrt
---
>      .                 nsprgit
958,959c958,961
<         rmax = 0. 
<         rmin = 1.e+30  
---
> c       if(nt.eq.1) then
>           rmax = 0. 
>           rmin = 1.e+30  
> c       end if  
962d963
<           islavept(n1,21,iseqr) = 0
1048a1050
>           
1050a1053,1057
> c          if(nt.eq.1) then
>              n2    = islavept(n1,21,iseqr)
>              if(r(n1).gt.rmax) rmax = r(n1)    
>              if(r(n1).lt.rmin.and.r(n1).gt.0.) rmin = r(n1)   
> c          end if
1052,1062d1058
<           if(islavept(n1,21,iseqr).eq.0) then
<             r(n1) = 0.
<             islavept(n1,21,iseqr) = n1
<           end if
<         enddo
<         rmax = 0.
<         rmin = 1.e+30
<         do n1 = 1,nslave
<           n2    = islavept(n1,21,iseqr)
<           if(r(n1).gt.rmax) rmax = r(n1)
<           if(r(n1).lt.rmin.and.r(n1).gt.eps) rmin = r(n1)
1063a1060,1062
> 
>          
>  
1075,1077c1074
<           denom    = (1.-exp(-beta1*(rave-r0)/(rmax-r0))) 
<           if(denom.lt.eps) denom = eps
<           fact  = 1./denom
---
>           fact     = 1./(1.-exp(-beta1*(rave-r0)/(rmax-r0))) 
1211c1208
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
1311c1308
<      .                 nsprgit,ndgrd,ndwrt
---
>      .                 nsprgit
1313c1310
<       common /moov/movie,nframes,icall1,lhdr,icoarsemovie,i2dmovie 
---
>       common /moov/movie,nframes,icall1,lhdr
2012c2009
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
Index: source/cfl3d/libs/diagi.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/diagi.F,v
retrieving revision 1.3
retrieving revision 1.2
diff -r1.3 -r1.2
4c4
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
29c29
<       common /unst/ time,cfltau,ntstep,ita,iunst,cfltau0,cfltauMax
---
>       common /unst/ time,cfltau,ntstep,ita,iunst
Index: source/cfl3d/libs/diagj.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/diagj.F,v
retrieving revision 1.3
retrieving revision 1.2
diff -r1.3 -r1.2
4c4
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
29c29
<       common /unst/ time,cfltau,ntstep,ita,iunst,cfltau0,cfltauMax
---
>       common /unst/ time,cfltau,ntstep,ita,iunst
Index: source/cfl3d/libs/diagk.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/diagk.F,v
retrieving revision 1.3
retrieving revision 1.2
diff -r1.3 -r1.2
4c4
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
29c29
<       common /unst/ time,cfltau,ntstep,ita,iunst,cfltau0,cfltauMax
---
>       common /unst/ time,cfltau,ntstep,ita,iunst
Index: source/cfl3d/libs/global.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/global.F,v
retrieving revision 1.42
retrieving revision 1.31
diff -r1.42 -r1.31
29c29
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
115a116
>       dimension iskipt(maxbl,500),jskipt(maxbl,500),kskipt(maxbl,500)
123,126d123
<       integer stats
<       real, dimension(:,:), allocatable :: riskp,rjskp,rkskp
<       integer, dimension(:,:), allocatable :: iskipt,jskipt,kskipt
< c
174c171
<      .                 nsprgit,ndgrd,ndwrt 
---
>      .                 nsprgit
178,179d174
<       common /konew/ ikoprod,isstdenom,pklimterm,ibeta8kzeta,i_bsl,
<      .        keepambient
790,827d784
<       if (ikoprod .gt. 0 .and. (ivmx.ne.6 .and. ivmx.ne.7 .and.
<      .  ivmx.ne.10 .and. ivmx.ne.15)) then
<         write(iunit11,'('' WARNING: ikoprod not active'',
<      .  '' unless ivisc=6,7,10, or 15 used'')')
<       end if
< c
<       if (iturbprod .gt. 0 .and. (ivmx.ne.8 .and. ivmx.ne.9 .and.
<      .  ivmx.ne.13 .and. ivmx.ne.14)) then
<         write(iunit11,'('' WARNING: iturbprod not active'',
<      .  '' unless ivisc=8,9,13, or 14 used'')')
<       end if
< c
<       if (isstdenom .ne. 0 .and. ivmx .ne. 7) then
<         write(iunit11,'('' WARNING: isstdenom not active'',
<      .  '' unless ivisc=7 used'')')
<       else if (isstdenom .ne. 0 .and. i_bsl .ne. 0) then
<         write(iunit11,'('' WARNING: isstdenom not active'',
<      .  '' when i_bsl=1 (BSL option in effect)'')')
<       end if
< c
<       if (ibeta8kzeta .ne. 0 .and. ivmx .ne. 15) then
<         write(iunit11,'('' WARNING: ibeta8kzeta not active'',
<      .  '' unless ivisc=15 used'')')
<       end if
< c
<       if (i_bsl .ne. 0 .and. ivmx .ne. 7) then
<         write(iunit11,'('' WARNING: i_bsl not active'',
<      .  '' unless ivisc=7 used'')')
<       end if
< c
<       if (keepambient .ne. 0 .and. (ivmx.ne.6 .and. ivmx.ne.7 .and.
<      .  ivmx.ne.8 .and. ivmx.ne.9 .and. ivmx.ne.10 .and.
<      .  ivmx.ne.11 .and. ivmx.ne.12 .and. ivmx.ne.13 .and.
<      .  ivmx.ne.14)) then
<         write(iunit11,'('' WARNING: keepambient not active'',
<      .  '' unless ivisc=6,7,8,9,10,11,12,13, or 14 used'')')
<       end if
< c
3441c3398
<      .       (iptyp+6)*(iptyp-2)*(iptyp+4) .ne. 0) then
---
>      .       (iptyp+6)*(iptyp-2) .ne. 0) then
4521,4526d4477
<          allocate( riskp(maxbl,500), stat=stats )
<          allocate( rjskp(maxbl,500), stat=stats )
<          allocate( rkskp(maxbl,500), stat=stats )
<          allocate( iskipt(maxbl,500), stat=stats )
<          allocate( jskipt(maxbl,500), stat=stats )
<          allocate( kskipt(maxbl,500), stat=stats )
6008,6014c5959,5961
<                    if(idim.gt.2) then
<                      iskip(nbl,1) = iskip(nbl-1,1)/2
<                    else
<                      iskip(nbl,1) = iskip(nbl-1,1)
<                    end if
<                    jskip(nbl,1) = jskip(nbl-1,1)/2
<                    kskip(nbl,1) = kskip(nbl-1,1)/2
---
>                    iskip(nbl,1) = (iskip(nbl-1,1)-1)/2 + 1
>                    jskip(nbl,1) = (jskip(nbl-1,1)-1)/2 + 1
>                    kskip(nbl,1) = (kskip(nbl-1,1)-1)/2 + 1
6019c5966
<              if(idim.eq.2) then
---
>              if(i2d.ne.0) then
6055c6002
<            do ng=1,ngrid
---
>            do ng=1,nskip
6059d6005
<                 nbl = nblg(ng)
6061,6084c6007,6009
<                   iskipt(nbl,ii)= iskip(nbl,ii)
<                 enddo
<                 if(idim.gt.2) then
<                   do n=1,ncg
<                     nbl = nbl + 1
<                     do ii = 1,nskpi1(ng)
<                       iskip(nbl,ii) = (iskip(nbl-1,ii)-1)/2 + 1
<                       iskipt(nbl,ii)= iskip(nbl,ii)
<                       riskp(nbl,ii) = .5*real(iskip(nbl-1,ii)-1) + 1.0  
<                     end do
<                     do ii = 2,nskpi1(ng)-1  
<                       if(iskip(nbl,ii).ge.iskip(nbl,ii+1).and.
<      .                   real(iskip(nbl,ii)).ne.riskp(nbl,ii)) 
<      .                    iskip(nbl,ii) = iskip(nbl,ii)-1
<                       if(iskip(nbl,ii).le.iskip(nbl,ii-1).and.
<      .                   real(iskip(nbl,ii)).ne.riskp(nbl,ii))  
<      .                    iskip(nbl,ii) = iskip(nbl,ii)+1
<                     enddo
<                     do ii = 1,nskpi1(ng)
<                       iskipt(nbl,ii)= iskip(nbl,ii)
<                     enddo
<                   enddo
<                 else
<                   do n=1,ncg
---
>                  nbl = nblg(ng)
>                  iskipt(nbl,ii)= iskip(nbl,ii)
>                  do n=1,ncg
6086,6096c6011,6012
<                     do ii = 1,nskpi1(ng)
<                       iskip(nbl,ii) = iskip(nbl-1,ii)
<                     end do
<                     do ii = 1,nskpi1(ng)
<                       iskipt(nbl,ii)= iskip(nbl,ii)
<                     enddo
<                   enddo
<                 end if 
<                 nbl = nblg(ng)
<                 do ii = 1,nskpj1(ng)
<                   jskipt(nbl,ii)= jskip(nbl,ii)
---
>                     iskip(nbl,ii) = (iskip(nbl-1,ii)-1)/2 + 1
>                  end do
6098,6100c6014,6018
<                 do n=1,ncg
<                   nbl = nbl + 1
<                   do ii = 1,nskpj1(ng)
---
>                 do ii = 1,nskpj1(ng)
>                  nbl = nblg(ng)
>                  jskipt(nbl,ii)= jskip(nbl,ii)
>                  do n=1,ncg
>                     nbl = nbl + 1
6102,6114c6020
<                     rjskp(nbl,ii) = .5*real(jskip(nbl-1,ii)-1) + 1.0
<                   end do
<                   do ii = 2,nskpj1(ng)-1
<                     if(jskip(nbl,ii).ge.jskip(nbl,ii+1).and.
<      .                 real(jskip(nbl,ii)).ne.rjskp(nbl,ii))
<      .                  jskip(nbl,ii) = jskip(nbl,ii)-1
<                     if(jskip(nbl,ii).le.jskip(nbl,ii-1).and.
<      .                 real(jskip(nbl,ii)).ne.rjskp(nbl,ii))
<      .                  jskip(nbl,ii) = jskip(nbl,ii)+1
<                   enddo
<                   do ii = 1,nskpj1(ng)
<                     jskipt(nbl,ii)= jskip(nbl,ii)
<                   enddo
---
>                  end do
6116d6021
<                 nbl = nblg(ng)
6118,6122c6023,6026
<                   kskipt(nbl,ii)= kskip(nbl,ii)
<                 enddo
<                 do n=1,ncg
<                   nbl = nbl + 1
<                   do ii = 1,nskpk1(ng)
---
>                  nbl = nblg(ng)
>                  jskipt(nbl,ii)= jskip(nbl,ii)
>                  do n=1,ncg
>                     nbl = nbl + 1
6124,6136c6028
<                     rkskp(nbl,ii) = .5*real(kskip(nbl-1,ii)-1) + 1.0
<                   end do
<                   do ii = 2,nskpk1(ng)-1
<                     if(kskip(nbl,ii).ge.kskip(nbl,ii+1).and.
<      .                 real(kskip(nbl,ii)).ne.rkskp(nbl,ii))
<      .                  kskip(nbl,ii) = kskip(nbl,ii)-1
<                     if(kskip(nbl,ii).le.kskip(nbl,ii-1).and.
<      .                 real(kskip(nbl,ii)).ne.rkskp(nbl,ii))
<      .                  kskip(nbl,ii) = kskip(nbl,ii)+1
<                   enddo
<                   do ii = 1,nskpk1(ng)
<                     kskipt(nbl,ii)= kskip(nbl,ii)
<                   enddo
---
>                  end do
6143c6035
<           if(meshdef.eq.1) then
---
>           if(meshdef.eq.1.and.myid.eq.myhost) then
6196,6197c6088
<          if(abs(isktyp).eq.2) then
<           do ng=1,ngrid
---
>          do ng=1,ngrid
6200a6092,6114
>             if (ncg.gt.0) then
>               do ii = 1,nskpi1(ng)
>                nbl = nblg(ng)
>                do n=1,ncg
>                   nbl = nbl + 1
>                   iskipt(nbl,ii)= (iskipt(nbl-1,ii)-1)/2 + 1
>                end do
>               enddo
>               do ii = 1,nskpj1(ng)
>                nbl = nblg(ng)
>                do n=1,ncg
>                   nbl = nbl + 1
>                   jskipt(nbl,ii)= (jskipt(nbl-1,ii)-1)/2 + 1
>                end do
>               enddo
>               do ii = 1,nskpk1(ng)
>                nbl = nblg(ng)
>                do n=1,ncg
>                   nbl = nbl + 1
>                   kskipt(nbl,ii)= (kskipt(nbl-1,ii)-1)/2 + 1
>                end do
>               enddo
>             end if
6226,6227c6140
<           enddo
<          end if
---
>          enddo
6359,6360d6271
<          deallocate(riskp,rjskp,rkskp)
<          deallocate(iskipt,jskipt,kskipt)
Index: source/cfl3d/libs/histout.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/histout.F,v
retrieving revision 1.9
retrieving revision 1.6
diff -r1.9 -r1.6
2,4c2
<      .                   cmxw,cmyw,cmzw,
<      .                   n_clcd,clcd,nblocks_clcd,blocks_clcd,
<      .                   chdw,swetw,fmdotw,cfttotw,
---
>      .                   cmxw,cmyw,cmzw,chdw,swetw,fmdotw,cfttotw,
8c6
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
20,22d17
<       character*80 filename, num
<       character*241 avgq2,avgq2pert,clcds,clcdp,output_dir
<       integer blocks_clcd
32,33c27
<      .          aehist(ncycmax,3,nmds,maxaes), aesrfdat(5,maxaes),
<      .          clcd(2,n_clcd,ncycmax), blocks_clcd(2,nblocks_clcd)
---
>      .          aehist(ncycmax,3,nmds,maxaes), aesrfdat(5,maxaes)
35d28
<       common /filenam2/ avgq2,avgq2pert,clcds,clcdp,output_dir
39c32
<       common /unst/ time,cfltau,ntstep,ita,iunst,cfltau0,cfltauMax
---
>       common /unst/ time,cfltau,ntstep,ita,iunst
45d37
<       common /avgdata/ xnumavg,iteravg,xnumavg2,ipertavg,iclcd
79,85c71,72
<             if (iclcd .ne. 1 .and. iclcd .ne. 2) then
<                write(12,'(''#'',i5,'' it    log(res)        cl'',
<      .            ''            cd            cy            cmy'')') ntt
<             else
<                write(12,'(''variables = it    log(res)        cl'',
<      .            ''            cd            cz            cmz'')')
<             end if
---
>             write(12,'(''#'',i5,'' it    log(res)        cl'',
>      .      ''            cd            cy            cmy'')') ntt
96,102c83,84
<             if (iclcd .ne. 1 .and. iclcd .ne. 2) then
<                write(12,'(''#'',i5,'' it    log(res)        cl'',
<      .            ''            cd            cy            cmy'')') ntt
<             else
<                write(12,'(''variables = it    log(res)        cl'',
<      .            ''            cd            cz            cmz'')')
<             end if
---
>             write(12,'(''#'',i5,'' it    log(res)        cl'',
>      .      ''            cd            cz            cmz'')') ntt
110,130d91
< 
<             if (iclcd .eq. 1 .or. iclcd .eq. 2) then
<                do nn = 1, n_clcd
<                   write(num,'(I2)') nn
<                   num = adjustl(num)
<                   filename = clcdp(1:len_trim(clcdp)) //
<      $                 num(1:len_trim(num)) // ".dat"
<                   open(unit=151,file=filename,form="formatted",
<      .                 status="unknown") 
<                   write(151,'(''variables=it,Cl,Cd,Clt,Cdt,Cdp,Cdv'')')
<                   do n=1,ntt       
<                      if (real(clcd(1,nn,n)) < 1e99) then
<                         write(151,'(3x,i6,6e15.7)') n, 
<      .                       real(clcd(1,nn,n)), real(clcd(2,nn,n)),
<      .                       real(clw(n)), real(cdw(n)),
<      .                       real(cdpw(n)), real(cdvw(n)) 
<                      end if
<                   enddo            
<                   close(151)
<                end do
<             end if
132c93
<          write(12,'('' Final mass_flow,cftp,cftv,cftmom='',4e12.4)')
---
>          write(12,'(''# Final mass_flow,cftp,cftv,cftmom='',4e12.4)')
135,141c96,97
<          if (iclcd .ne. 1 .and. iclcd .ne. 2) then
<             write(12,'(''#'',i5,'' it    log(res)      mass_flow'',
<      .           ''       cftp           cftv        cftmom '')') ntt
<          else
<             write(12,'(i6,'' it    log(res)      mass_flow'',
<      .           ''       cftp           cftv        cftmom '')') ntt
<          end if
---
>          write(12,'(''#'',i5,'' it    log(res)      mass_flow'',
>      .   ''       cftp           cftv        cftmom '')') ntt
149c105
<          write(12,'('' Final cl,cd       ='',2e13.5)')
---
>          write(12,'(''# Final cl,cd       ='',2e13.5)')
151c107
<          write(12,'('' Final cx,cy,cz    ='',3e13.5)')
---
>          write(12,'(''# Final cx,cy,cz    ='',3e13.5)')
153c109
<          write(12,'('' Final cmx,cmy,cmz ='',3e13.5)')
---
>          write(12,'(''# Final cmx,cmy,cmz ='',3e13.5)')
156c112
<          write(12,'(''    it     log(res)           cl'',
---
>          write(12,'(''#   it     log(res)           cl'',
174c130
<          write(13,'(''# Mach='',e12.4,'', alpha='',e12.4,
---
>          write(13,'('' Mach='',e12.4,'', alpha='',e12.4,
177,178c133,134
<          write(13,'(''# Final turres1='',e12.4)') real(rmstr1(ntt))
<          write(13,'(''# Final turres2='',e12.4)') real(rmstr2(ntt))
---
>          write(13,'('' Final turres1='',e12.4)') real(rmstr1(ntt))
>          write(13,'('' Final turres2='',e12.4)') real(rmstr2(ntt))
180,187c136
<          write(13,'(''# Final time (for unsteady)='',f10.4)')real(time)
<          end if
<          if (iclcd .ne. 1 .and. iclcd .ne. 2) then
<             write(13,'(''#'',i6,'' it  log(turres1)  log(turres2)'',
<      .           ''  nneg1  nneg2'')') ntt
<          else
<             write(13,'(''variables= it  log(turres1)  log(turres2)'',
<      .           ''  nneg1  nneg2'')')
---
>            write(13,'('' Final time (for unsteady)='',f10.4)')real(time)
188a138,139
>          write(13,'(i6,'' it  log(turres1)  log(turres2)'',
>      .         ''  nneg1  nneg2'')') ntt
225d175
< 
Index: source/cfl3d/libs/histout_img.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/histout_img.F,v
retrieving revision 1.5
retrieving revision 1.4
diff -r1.5 -r1.4
6c6
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
37c37
<       common /unst/ time,cfltau,ntstep,ita,iunst,cfltau0,cfltauMax
---
>       common /unst/ time,cfltau,ntstep,ita,iunst
Index: source/cfl3d/libs/init_ae.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/init_ae.F,v
retrieving revision 1.5
retrieving revision 1.2
diff -r1.5 -r1.2
4c4
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
40,41d39
<       common /rbstmt2/ tmass,yinert,uinfrb,qinfrb,greflrb,gaccel,crefrb,
<      .                 xtmref,areat
60a59
>                xs(m,iaes)      = x0(m,iaes)
Index: source/cfl3d/libs/init_rb.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/init_rb.F,v
retrieving revision 1.5
retrieving revision 1.2
diff -r1.5 -r1.2
1c1
<       subroutine init_rb(maxaes,maxbl,zorig,aesrfdat) 
---
>       subroutine init_rb
3c3
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
28d27
<       dimension aesrfdat(5,maxaes),zorig(maxbl)
35,38d33
<       common /trim/ dmtrmn,dmtrmnm,dlcln,dlclnm,trtol,cmy,cnw,alf0,
<      .              alf1,dzdt,thtd0,thtd1,zrg0,zrg1,dtrmsmx,dtrmsmn,
<      .              dalfmx,ddtmx,ddtrm0,ddtrm1,itrmt,itrminc,fp(4,4),
<      .              tp(4,4),zlfct,epstr,relax,ittrst
44c39,46
<       xcg      = xmc
---
>       greflrb  =  1.
>       uinfrb   =  380.
>       qinfrb   =  290.
>       yinert   =  1000.000
>       tmass    =  10.
>       gaccel   =  32.2
>       xcg      = -.40
> c
48,50d49
<       grefl    = aesrfdat(2,1)
<       uinfrb   = aesrfdat(3,1)
<       qinfrb   = aesrfdat(4,1)
52,54c51,52
<       timesc   = grefl/ainf
<       dts      = dt*timesc
<       zrg0     = zorig(1)
---
>       rgrefl   = 1./greflrb
>       timesc   = greflrb/ainf
72c70
<          stmirb(i,i) = dts
---
>          stmirb(i,i) = dt*timesc
75,82c73,80
<       stmrb(1,2)   = dts
<       stmrb(1,4)   = 0.
<       stmrb(3,4)   = dts
<       stmrb(2,4)   = 0.
<       stmirb(1,2)  = 0.5*dts*dts
<       stmirb(1,4)  = 0.
<       stmirb(2,4)  = 0.
<       stmirb(3,4)  = 0.5*dts*dts
---
>       stmrb(1,2)   = dt*timesc
>       stmrb(1,4)   = 0.5*dt*dt*timesc*timesc*uinfrb 
>       stmrb(3,4)   = dt*timesc
>       stmrb(2,4)   = dt*timesc*uinfrb 
>       stmirb(1,2)  = 0.5*dt*dt*timesc*timesc
>       stmirb(1,4)  = dt*dt*dt*timesc*timesc*uinfrb/6.0 
>       stmirb(2,4)  = 0.5*dt*timesc*dt*timesc*uinfrb 
>       stmirb(3,4)  = 0.5*dt*timesc*dt*timesc
Index: source/cfl3d/libs/init_trim.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/init_trim.F,v
retrieving revision 1.8
retrieving revision 1.2
diff -r1.8 -r1.2
3c3
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
16,18c16
<      .              tp(4,4),zlfct,epstr,relax,ittrst 
<       common /trim1/ dcl(5000),ddclda(5000),ddcmda(5000),r33,r44,ittr
<      .              ,dcm(5000),dd(5000),da(5000),a11,a12,a22,r11,r22
---
>      .              tp(4,4)
21a20,24
>       itrminc = 5
>       dclda   = 6.
>       dcldd   = 1.4
>       dcmda   =-.2
>       dcmdd   =-.88
28,30c31,33
<       ddtmx   =  0.0005
<       dalfmx  =  0.0005
<       trtol   =  0.0000002
---
>       ddtmx   =  0.02
>       dalfmx  =  0.02
>       trtol   =  0.0002
32,39d34
<       epstr   =  1.e-7
<       a11     = 0.
<       a12     = 0.
<       a22     = 0.
<       r11     = 0.
<       r22     = 0.
<       r33     = 0.
<       r44     = 0.
40a36,39
>       tp(1,1) = dclda
>       tp(1,2) = dcldd
>       tp(2,1) = dcmda
>       tp(2,2) = dcmdd
Index: source/cfl3d/libs/l2norm2.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/l2norm2.F,v
retrieving revision 1.3
retrieving revision 1.2
diff -r1.3 -r1.2
4c4
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
22c22
<       common /unst/ time,cfltau,ntstep,ita,iunst,cfltau0,cfltauMax
---
>       common /unst/ time,cfltau,ntstep,ita,iunst
Index: source/cfl3d/libs/lead.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/lead.F,v
retrieving revision 1.4
retrieving revision 1.3
diff -r1.4 -r1.3
3c3
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
26d25
<       common /ginfo2/ lq2avg,iskip_blocks,inc_2d(3),inc_coarse(3)
140d138
<       lq2avg = lw(65,nbl)
Index: source/cfl3d/libs/moddefl.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/moddefl.F,v
retrieving revision 1.16
retrieving revision 1.4
diff -r1.16 -r1.4
1,2c1,2
<       subroutine moddefl(xs,xxn,aesrfdat,perturb,cmyt,cnwt,xorig,yorig,
<      .                   zorig,maxaes,nmds,irbtrim,maxbl,myid)
---
>       subroutine moddefl(xs,aesrfdat,perturb,cmyt,cnwt,xorig,yorig,
>      .                   zorig,maxaes,nmds,irbtrim,maxbl)
4c4
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
17c17,18
<      .          xs(2*nmds,maxaes),xxn(2*nmds,maxaes) 
---
>      .          xs(2*nmds,maxaes)
>       dimension xorig(maxbl),yorig(maxbl),zorig(maxbl)
21c22
<       common /unst/ time,cfltau,ntstep,ita,iunst,cfltau0,cfltauMax 
---
>       common /unst/ time,cfltau,ntstep,ita,iunst
30,32c31
<      .              tp(4,4),zlfct,epstr,relax,ittrst 
<       common /trim1/ dcl(5000),ddclda(5000),ddcmda(5000),r33,r44,ittr
<      .              ,dcm(5000),dd(5000),da(5000),a11,a12,a22,r11,r22
---
>      .              tp(4,4)
47d45
<          qinf   = aesrfdat(4,iaes)
112,121c110,114
<                 if ((abs(real(dlcln)) .lt.real(trtol)) .and.
<      .              (abs(real(dmtrmn)).lt.real(trtol)) .and.
<      .              (itrmt .gt. 0)) return
<                   itrmt = itrmt + 1
<                   alf0  = alf1
<                   ddtrm0 = xs(2*nm-1,iaes)
< c                 call sqrtcumm(itrmt,dcl,dcm,ddclda,ddcmda,da,dd
< c    .                         ,dlcln,dmtrmn,tp,fp,a11,a12,a22
< c    .                         ,r11,r22,r33,r44,alf1,alf0,ddtrm1
< c    .                         ,ddtrm0)
---
> c
> c                 Update the angle of attack and control surface trim
> c                 angle to reach the trim lift coefficient
> c                 (tmass*g/(qinf*areat*gfrefl*gfrefl))
> c                 and zero moment coefficient.
126d118
<                   qinfrb  = qinf
130,131c122
< c
<                   cmy     = cmyt + cnwt*(xorig-xmc0)/crefrb
---
>                   cmy     = cmyt + cnwt*(xorig(1)-xmc0)/crefrb
136c127
<      .                        (qinfrb*areat*grefl*grefl))
---
>      .                        (2.*qinfrb*areat*greflrb*greflrb))
139c130,133
<  
---
> 
>                   ddtrm0 = xs(2*nm-1,iaes)
>                   alf0   = alf1
>                   relax  = .20
141a136,137
>                   write(79,21928) itrmt,ntt,cmy,ddtrm0,ddtrm1,dlcln
>      .                            ,alf0,alf1
152,159c148,150
<                   if(myid.eq.0) then
<                     write(79+myid,21928) itrmt,ntt,cmyt,cmy,cnwt,dlcln
<      .                            ,ddtrm1*180./3.14159,alf1*180./3.14159
<      .                          ,xorig,xmc0,crefrb
< 21928               format(2i8,9(1x,f16.9))
<                   end if
<                 else
<                   xs(2*nm-1,iaes) = xxn(2*nm-1,iaes)
---
> 21928             format(2i8,6(1x,f16.9))
>                   itrmt = itrmt + 1
>                   irbtrim = 1
168,216d158
<       subroutine sqrtcumm(ittr,dcl,dcm,ddclda,ddcmda,da,dd
<      .                    ,dlcln,dmtrmn,tp,fp,a11,a12,a22
<      .                    ,r11,r22,r33,r44,alf1,alf0,ddtrm1
<      .                    ,ddtrm0) 
<       dimension dcl(5000),ddclda(5000),ddcmda(5000)
<      .         ,dcm(5000),dd(5000),da(5000),tp(4,4),fp(4,4)
<       dcl(ittr) = dlcln 
<       dcm(ittr) = dmtrmn
<       if(ittr.eq.1) then
<         da(ittr) = 0.
<         dd(ittr) = 0.
<       else
<         da(ittr) = alf1-alf0
<         dd(ittr) = ddtrm1-ddtrm0
<         ddclda(ittr) = (dcl(ittr)-dcl(ittr-1))
<         ddcmda(ittr) = (dcm(ittr)-dcm(ittr-1))
<         a1  = da(ittr-1)*da(ittr-1) 
<         a2  = da(ittr-1)*dd(ittr-1)
<         a3  = dd(ittr-1)*dd(ittr-1)
<         r1  = ddclda(ittr)*da(ittr-1)
<         r2  = ddclda(ittr)*dd(ittr-1)
<         r3  = ddcmda(ittr)*da(ittr-1)
<         r4  = ddcmda(ittr)*dd(ittr-1)
<         a11 =a11+a1
<         a12 =a12+a2
<         a22 =a22+a3
<         r11 = r11 + r1
<         r22 = r22 + r2
<         r33 = r33 + r3
<         r44 = r44 + r4
<         dtrm = a11*a22-a12*a12
<         if(ittr.gt.2) then
<           if(dtrm.ne.0.) then
<             tp(1,1) =( a22*r11 - a12*r22)/dtrm
<             tp(1,2) =(-a12*r11 + a11*r22)/dtrm
<             tp(2,1) =( a22*r33 - a12*r44)/dtrm
<             tp(2,2) =(-a12*r33 + a11*r44)/dtrm
<           end if
<           dtr     = tp(1,1)*tp(2,2)-tp(1,2)*tp(2,1)
<           if(dtr.ne.0.) then
<             fp(1,1) = tp(2,2)/dtr
<             fp(1,2) =-tp(1,2)/dtr
<             fp(2,1) =-tp(2,1)/dtr
<             fp(2,2) = tp(1,1)/dtr
<           end if
<         end if
<       end if
<       return
<       end
Index: source/cfl3d/libs/modread.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/modread.F,v
retrieving revision 1.9
retrieving revision 1.8
diff -r1.9 -r1.8
6c6
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
79c79
<       lbc = iabs(jbcinfo(nbl,ns,1,m))
---
>       lbc = abs(jbcinfo(nbl,ns,1,m))
148c148
<       lbc = iabs(kbcinfo(nbl,ns,1,m))
---
>       lbc = abs(kbcinfo(nbl,ns,1,m))
217c217
<       lbc = iabs(ibcinfo(nbl,ns,1,m))
---
>       lbc = abs(ibcinfo(nbl,ns,1,m))
Index: source/cfl3d/libs/pltmode.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/pltmode.F,v
retrieving revision 1.13
retrieving revision 1.11
diff -r1.13 -r1.11
8c8
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
Index: source/cfl3d/libs/qface.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/qface.F,v
retrieving revision 1.3
retrieving revision 1.2
diff -r1.3 -r1.2
4c4
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
162c162
<       if (i2d.eq.1 .or. idim.eq.2) id2 = idim-1
---
>       if (i2d.eq.1) id2 = idim-1
Index: source/cfl3d/libs/rb_corr.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/rb_corr.F,v
retrieving revision 1.3
retrieving revision 1.2
diff -r1.3 -r1.2
1c1
<       subroutine rb_corr(aesrfdat,cnt,cmt,maxaes)
---
>       subroutine rb_corr(cn,cm)
3c3
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
25,29d24
<       common /trim/ dmtrmn,dmtrmnm,dlcln,dlclnm,trtol,cmy,cnw,alf0,
<      .              alf1,dzdt,thtd0,thtd1,zrg0,zrg1,dtrmsmx,dtrmsmn,
<      .              dalfmx,ddtmx,ddtrm0,ddtrm1,itrmt,itrminc,fp(4,4),
<      .              tp(4,4),zlfct,epstr,relax,ittrst
<       dimension aesrfdat(5,maxaes)
34,36d28
<          grefl  = aesrfdat(2,1)
<          cnw = cnt
<          cmy = cmt
38c30
<          gforcsrb(2) = tmass*gaccel-qinfrb*areat*grefl*grefl*cnt 
---
>          gforcsrb(2) = tmass*gaccel-qinfrb*areat*greflrb*greflrb*cn 
40,41c32,33
<          gforcsrb(4) = qinfrb*areat*grefl*grefl*greflrb*(crefrb*cmt 
<      .               + xtmref*cnt) 
---
>          gforcsrb(4) = qinfrb*areat*greflrb*greflrb*greflrb*(crefrb*cm
>      .               + xtmref*cn) 
Index: source/cfl3d/libs/rb_pred.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/rb_pred.F,v
retrieving revision 1.4
retrieving revision 1.2
diff -r1.4 -r1.2
1c1
<       subroutine rb_pred(nt)
---
>       subroutine rb_pred(zrg1,zrg0,alf1,alf0,thtd1,thtd0,dzdt) 
3c3
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
25,31d24
<       common /trim/ dmtrmn,dmtrmnm,dlcln,dlclnm,trtol,cmy,cnw,alf0,
<      .              alf1,dzdt,thtd0,thtd1,zrg0,zrg1,dtrmsmx,dtrmsmn,
<      .              dalfmx,ddtmx,ddtrm0,ddtrm1,itrmt,itrminc,fp(4,4),
<      .              tp(4,4),zlfct,epstr,relax,ittrst
<       common /info/ title(20),rkap(3),xmach,alpha,beta,dt,fmax,nit,ntt,
<      .        idiag(3),nitfo,iflagts,iflim(3),nres,levelb(5),mgflag,
<      .        iconsf,mseq,ncyc1(5),levelt(5),nitfo1(5),ngam,nsm(5),iipv
38c31,33
<          gforcnrb(j)  = gforcsrb(j)
---
>       end do
>       do j = 1,4
>          gforcnrb(j) = gforcsrb(j)
40a36,38
>       zrg0 = -xnmrb(1)/greflrb 
>       alf0 =  xnmrb(3)
>       thtd0=  xnmrb(4)
53,54c51,52
<       zrg1 = zrg0 - xsrb(1)/greflrb
<       dzdt = - xsrb(2)/greflrb
---
>       zrg1 = -xsrb(1)/greflrb 
>       dzdt = -xsrb(2)/greflrb
57,59d54
<       write(299,31029) dt*real(nt),zrg1,xsrb(3),gforcnrb(2),
<      .                 gforcnrb(4)
< 31029 format(5(1x,e16.8))
Index: source/cfl3d/libs/readkey.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/readkey.F,v
retrieving revision 1.33
retrieving revision 1.24
diff -r1.33 -r1.24
4c4
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
20,21d19
<       character*241 avgq2,avgq2pert,clcds,clcdp,output_dir,filename
<       logical isthere
27d24
<       common /unst/ time,cfltau,ntstep,ita,iunst,cfltau0,cfltauMax
29,31c26
<       common /avgdata/ xnumavg,iteravg,xnumavg2,ipertavg,iclcd
<       common /moov/movie,nframes,icall1,lhdr,icoarsemovie,i2dmovie
<       common /ginfo2/ lq2avg,iskip_blocks,inc_2d(3),inc_coarse(3)
---
>       common /avgdata/ xnumavg,iteravg
56c51
<      .                 nsprgit,ndgrd,ndwrt 
---
>      .                 nsprgit
63,64c58
<       common /konew/ ikoprod,isstdenom,pklimterm,ibeta8kzeta,i_bsl,
<      .        keepambient
---
>       common /konew/ ikoprod,isstdenom,pklimterm,ibeta8kzeta
69,76d62
<       common /rigidbody/ irigb,irbtrim
<       common /rbstmt2/ tmass,yinert,uinfrb,qinfrb,greflrb,gaccel,crefrb,
<      .                 xtmref,areat
<       common /filenam2/ avgq2,avgq2pert,clcds,clcdp,output_dir
<       common /trim/ dmtrmn,dmtrmnm,dlcln,dlclnm,trtol,cmy,cnw,alf0,
<      .              alf1,dzdt,thtd0,thtd1,zrg0,zrg1,dtrmsmx,dtrmsmn,
<      .              dalfmx,ddtmx,ddtrm0,ddtrm1,itrmt,itrminc,fp(4,4),
<      .              tp(4,4),zlfct,epstr,relax,ittrst
267c253
<       edvislim  = 1.e10
---
>       edvislim  = 100000.
465,558d450
< c     ipertavg - Average r,u,v,w,p and second moments
<       ipertavg = 0 
<       nkey     = nkey + 1 
< 
< c     icoarsemovie - write movie files of coarse planar and volume data
<       icoarsemovie = 0
<       nkey     = nkey + 1
< c
< c     i2dmovie - write 2D movie files of coarse planar and volume data
<       i2dmovie = 0
<       nkey     = nkey + 1
< c
< c     iclcd - write cl and cd history for separate blocks using clcd.inp
<       iclcd    = 0
<       nkey     = nkey + 1
< c
< c     iskip_blocks - skip factor for 2d coarse movie
<       iskip_blocks    = 1
<       nkey     = nkey + 1
< c
< c     cfltauMax - Maximum value for the cfltau during subiterations
<       cfltauMax= -1.0
<       nkey     = nkey + 1
< c
< c     cfltau0 - Exponent for cfltau growth with subiteration
<       cfltau0= 1.0
<       nkey     = nkey + 1
< 
< c     parameter to perform trim (1) or not to perform trim (0)
<       irbtrim = 0
<       nkey     = nkey + 1
< c
< c     parameter to perform rigid body sim (1) or not to perform (0)
<       irigb    = 0
<       nkey     = nkey + 1
< c
< c     Conversion factor from rigid body dynamics length scale
< c     to CFD grid length scale.
<       greflrb  = 1.
<       nkey     = nkey + 1
< c
< c     Total aircraft mass for trim and rigid body motion
<       tmass = 1.
<       nkey     = nkey + 1
< c
< c     Total aircraft y-mass moment of inertia for
< c     rigid body motion
<       yinert = 1.
<       nkey     = nkey + 1
< c
< c     Acceleration of gravity for rigid/flex trim and motion
<       gaccel = 1.
<       nkey     = nkey + 1
< c
< c     Relaxation parameter for the trim algorithm
<       relax = 0.5
<       nkey     = nkey + 1
< c
< c     Iteration increment to update trim equations
<       itrminc = 5
<       nkey     = nkey + 1
< c
< c     dclda to be used for trim
<       dclda    = 6.
<       nkey     = nkey + 1
< c
< c     dcldd to be used for trim
<       dcldd    = 1.4
<       nkey     = nkey + 1
< c
< c     dcmda to be used for trim
<       dcmda    =-0.2
<       nkey     = nkey + 1
< c
< c     dcmdd to be used for trim
<       dcmdd    =-0.88
<       nkey     = nkey + 1
< c
< c     Parameter controling dynamic grid input
<       ndgrd    = 0
<       nkey     = nkey + 1
< c
< c     Parameter controling dynamic grid output
<       ndwrt    = 0
<       nkey     = nkey + 1
< c
< c     i_bsl used to turn on Menter's BSL model
<       i_bsl     = 0
<       nkey     = nkey + 1
< c
< c     keepambient used to maintain ambient turb levels for 2-eq models
<       keepambient = 0
<       nkey     = nkey + 1
< c
596,647d487
< c     Check for the existence of the averaging files
<          if( iteravg .eq. 2 ) then
<             isthere = .false.
<             if (ipertavg .eq. 2 ) then
<                filename = output_dir(1:len_trim(output_dir)) //
<      $              "/" // "cfl3d_avg_ruvwp.p3d"
<             else
<                filename = output_dir(1:len_trim(output_dir)) //
<      $              "/" // "cfl3d_avgq.p3d"
<             end if
<             inquire (file=filename,exist=isthere)
<             if( isthere ) then
<                open(150, file=filename, form='unformatted',
<      $              status='old')
<                read(150,end=1011,err=1011) idummy
<                close(150)
<                goto 1013
<             else
<                goto 1012
<             end if
<          else
<             goto 1013
<          end if
< 
<  1011    close(150)
<  1012    iteravg = 1
<          if( ipertavg .eq. 2 ) ipertavg = 1
<  1013    continue
<          
< c     Check for the existence of the clcd.bin file
<          if( iclcd .eq. 2 ) then
<             isthere = .false.
<             filename = output_dir(1:len_trim(output_dir)) //
<      $           "/" // "clcd.bin"
<             inquire (file=filename,exist=isthere)
<             if( isthere ) then
<                open(unit=150,file=filename,form='unformatted',
<      $              status='old')
<                read(150,end=1014,err=1014) idummy1, idummy2, idummy3
<                close(150)
<                goto 1016
<             else
<                goto 1015
<             end if
<          else
<             goto 1016
<          end if
< 
<  1014    close(150)
<  1015    iclcd = 1
<  1016    continue
<          
1026,1127d865
<       else if (inpstr(lc1:lc2).eq.'ipertavg') then
<          lc2 = lc2 +1
<          read(inpstr(lc2:lcl),*) ipertavg
<          if (ipertavg .ne. 0) iteravg = ipertavg
< c
<       else if (inpstr(lc1:lc2).eq.'icoarsemovie') then 
<          lc2 = lc2 +1
<          read(inpstr(lc2:lcl),*) icoarsemovie
< c
<       else if (inpstr(lc1:lc2).eq.'i2dmovie') then 
<          lc2 = lc2 +1
<          read(inpstr(lc2:lcl),*) i2dmovie
< c
<       else if (inpstr(lc1:lc2).eq.'iclcd') then 
<          lc2 = lc2 +1
<          read(inpstr(lc2:lcl),*) iclcd
< c
<       else if (inpstr(lc1:lc2).eq.'iskip_blocks') then 
<          lc2 = lc2 +1
<          read(inpstr(lc2:lcl),*) iskip_blocks
< c
<       else if (inpstr(lc1:lc2).eq.'cfltauMax') then 
<          lc2 = lc2 +1
<          read(inpstr(lc2:lcl),*) cfltauMax
< c
<       else if (inpstr(lc1:lc2).eq.'cfltau0') then 
<          lc2 = lc2 +1
<          read(inpstr(lc2:lcl),*) cfltau0
< c
<       else if (inpstr(lc1:lc2).eq.'irbtrim') then
<          lc2 = lc2 +1
<          read(inpstr(lc2:lcl),*) irbtrim
< c
<       else if (inpstr(lc1:lc2).eq.'irigb') then
<          lc2 = lc2 +1
<          read(inpstr(lc2:lcl),*) irigb
< c
<       else if (inpstr(lc1:lc2).eq.'greflrb') then
<          lc2 = lc2 +1
<          read(inpstr(lc2:lcl),*) realval(1)
<          greflrb = realval(1)
< c
<       else if (inpstr(lc1:lc2).eq.'tmass') then
<          lc2 = lc2 +1
<          read(inpstr(lc2:lcl),*) realval(1)
<          tmass = realval(1) 
< c
<       else if (inpstr(lc1:lc2).eq.'yinert') then
<          lc2 = lc2 +1
<          read(inpstr(lc2:lcl),*) realval(1)
<          yinert = realval(1) 
< c
<       else if (inpstr(lc1:lc2).eq.'gaccel') then
<          lc2 = lc2 +1
<          read(inpstr(lc2:lcl),*) realval(1)
<          gaccel = realval(1) 
< c
<       else if (inpstr(lc1:lc2).eq.'relax') then
<          lc2 = lc2 +1
<          read(inpstr(lc2:lcl),*) realval(1)
<          relax = realval(1) 
< c
<       else if (inpstr(lc1:lc2).eq.'itrminc') then
<          lc2 = lc2 +1
<          read(inpstr(lc2:lcl),*) itrminc
< c
<       else if (inpstr(lc1:lc2).eq.'dclda') then
<          lc2 = lc2 +1
<          read(inpstr(lc2:lcl),*) realval(1)
<          dclda = realval(1) 
< c
<       else if (inpstr(lc1:lc2).eq.'dcldd') then
<          lc2 = lc2 +1
<          read(inpstr(lc2:lcl),*) realval(1)
<          dcldd = realval(1) 
< c
<       else if (inpstr(lc1:lc2).eq.'dcmda') then
<          lc2 = lc2 +1
<          read(inpstr(lc2:lcl),*) realval(1)
<          dcmda = realval(1) 
< c
<       else if (inpstr(lc1:lc2).eq.'dcmdd') then
<          lc2 = lc2 +1
<          read(inpstr(lc2:lcl),*) realval(1)
<          dcmdd = realval(1) 
< c
<       else if (inpstr(lc1:lc2).eq.'ndgrd') then
<          lc2 = lc2 +1
<          read(inpstr(lc2:lcl),*) ndgrd
< c
<       else if (inpstr(lc1:lc2).eq.'ndwrt') then
<          lc2 = lc2 +1
<          read(inpstr(lc2:lcl),*) ndwrt
< c
<       else if (inpstr(lc1:lc2).eq.'i_bsl') then
<          lc2 = lc2 +1
<          read(inpstr(lc2:lcl),*) i_bsl
< c
<       else if (inpstr(lc1:lc2).eq.'keepambient') then
<          lc2 = lc2 +1
<          read(inpstr(lc2:lcl),*) keepambient
< c
1137,1143d874
< c
< c     Set trim data
<       tp(1,1) = dclda
<       tp(1,2) = dcldd
<       tp(2,1) = dcmda
<       tp(2,2) = dcmdd
< c
Index: source/cfl3d/libs/resadd.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/resadd.F,v
retrieving revision 1.3
retrieving revision 1.2
diff -r1.3 -r1.2
3c3
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
21c21
<       common /unst/ time,cfltau,ntstep,ita,iunst,cfltau0,cfltauMax
---
>       common /unst/ time,cfltau,ntstep,ita,iunst
Index: source/cfl3d/libs/resid.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/resid.F,v
retrieving revision 1.17
retrieving revision 1.15
diff -r1.17 -r1.15
12c12
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
60c60
<       dimension qavg(jdim,kdim,idim,5)
---
>       dimension qavg(jdim-1,kdim-1,idim-1,5)
62c62
<       common /avgdata/ xnumavg,iteravg,xnumavg2,ipertavg,iclcd
---
>       common /avgdata/ xnumavg,iteravg
74c74
<       common /unst/ time,cfltau,ntstep,ita,iunst,cfltau0,cfltauMax
---
>       common /unst/ time,cfltau,ntstep,ita,iunst
79,80c79
<       common /konew/ ikoprod,isstdenom,pklimterm,ibeta8kzeta,i_bsl,
<      .        keepambient
---
>       common /konew/ ikoprod,isstdenom,pklimterm,ibeta8kzeta
841,844d839
<       if (ipertavg .eq. 1 .or. ipertavg .eq. 2) then
<          return
<       end if
< 
Index: source/cfl3d/libs/setcorner.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/setcorner.F,v
retrieving revision 1.5
retrieving revision 1.4
diff -r1.5 -r1.4
5c5
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
34c34
<      .                 nsprgit,ndgrd,ndwrt 
---
>      .                 nsprgit
Index: source/cfl3d/libs/spalart.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/spalart.F,v
retrieving revision 1.15
retrieving revision 1.14
diff -r1.15 -r1.14
8c8
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
39c39
<       common /unst/ time,cfltau,ntstep,ita,iunst,cfltau0,cfltauMax
---
>       common /unst/ time,cfltau,ntstep,ita,iunst
Index: source/cfl3d/libs/swafi.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/swafi.F,v
retrieving revision 1.3
retrieving revision 1.2
diff -r1.3 -r1.2
4c4
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
27c27
<       common /unst/ time,cfltau,ntstep,ita,iunst,cfltau0,cfltauMax
---
>       common /unst/ time,cfltau,ntstep,ita,iunst
Index: source/cfl3d/libs/swafk.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/swafk.F,v
retrieving revision 1.3
retrieving revision 1.2
diff -r1.3 -r1.2
4c4
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
26c26
<       common /unst/ time,cfltau,ntstep,ita,iunst,cfltau0,cfltauMax
---
>       common /unst/ time,cfltau,ntstep,ita,iunst
Index: source/cfl3d/libs/twoeqn.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/twoeqn.F,v
retrieving revision 1.17
retrieving revision 1.14
diff -r1.17 -r1.14
18c18
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
53,55c53,54
<       common /unst/ time,cfltau,ntstep,ita,iunst,cfltau0,cfltauMax
<       common /konew/ ikoprod,isstdenom,pklimterm,ibeta8kzeta,i_bsl,
<      .        keepambient
---
>       common /unst/ time,cfltau,ntstep,ita,iunst
>       common /konew/ ikoprod,isstdenom,pklimterm,ibeta8kzeta
205c204
<         if(ivmx .eq. 7 .and. i_bsl .ne. 1) then
---
>         if(ivmx .eq. 7) then
224,235d222
<         else if(ivmx .eq. 7 .and. i_bsl .eq. 1) then
<            nou(1) = min(nou(1)+1,ibufdim)
<            write(bou(nou(1),1),'(''     k-omega BSL (Menter)'')')
<            if(ikoprod .eq. 1) then
<              nou(1) = min(nou(1)+1,ibufdim)
<              write(bou(nou(1),1),'(''     strain-based production'',
<      +       '' term'')')
<            else
<              nou(1) = min(nou(1)+1,ibufdim)
<              write(bou(nou(1),1),'(''     approx (vort) production'',
<      .         '' term'')')
<            end if
431,436d417
<         if(keepambient .eq. 1 .and. ivmx .ne. 15) then
<            nou(1) = min(nou(1)+1,ibufdim)
<            write(bou(nou(1),1),'(''     2-eqn ambient turbulence'',
<      .     '' levels not allowed to decay'')')
<         end if
< c
493,494d473
< c The following will effectively override the SST denominator option:
<       if (i_bsl .eq. 1) a1 = 1.e8
527,528c506
<       if(ivmx.eq.7 .and. i_bsl .ne. 1)              sigk1=0.85
<       if(ivmx.eq.7 .and. i_bsl .eq. 1)              sigk1=0.5
---
>       if(ivmx.eq.7)                                 sigk1=0.85
1720,1723d1697
<               rhside(j,k,i,1)=rhside(j,k,i,1) + keepambient*
<      +         re*betax*tur10*tur10
<               rhside(j,k,i,2)=rhside(j,k,i,2) + keepambient*
<      +         re*cmuc*tur10*tur20
1822,1825d1795
<               rhside(j,k,i,1)=rhside(j,k,i,1) + keepambient*
<      +         re*beta1*tur10*tur10
<               rhside(j,k,i,2)=rhside(j,k,i,2) + keepambient*
<      +         re*tur10*tur20
1875,1878d1844
<               rhside(j,k,i,1)=rhside(j,k,i,1) + keepambient*
<      +         re*beta1*tur10*tur10/tur20
<               rhside(j,k,i,2)=rhside(j,k,i,2) + keepambient*
<      +         re*tur10
1992,1995d1957
<               rhside(j,k,i,1)=rhside(j,k,i,1) + keepambient*
<      +         re*beta1*tur10*tur10/tur20
<               rhside(j,k,i,2)=rhside(j,k,i,2) + keepambient*
<      +         re*tur10
2098,2101d2059
<               rhside(j,k,i,1)=rhside(j,k,i,1) + keepambient*
<      +         re*beta1*tur10*tur10/tur20
<               rhside(j,k,i,2)=rhside(j,k,i,2) + keepambient*
<      +         re*tur10
2198,2201d2155
<               rhside(j,k,i,1)=rhside(j,k,i,1) + keepambient*
<      +         re*beta1*tur10*tur10
<               rhside(j,k,i,2)=rhside(j,k,i,2) + keepambient*
<      +         re*tur10*tur20
3443c3397
<      +          real(tur1cutlev)) then
---
>      +          tur1cutlev) then
3445c3399
<                 if (real(tur1cut).gt.0.) turre(j,k,i,1)=tur1cut
---
>                 if (tur1cut.gt.0.) turre(j,k,i,1)=tur1cut
3451c3405
<      +          real(tur2cutlev)) then
---
>      +          tur2cutlev) then
3453c3407
<                 if (real(tur2cut).gt.0.) turre(j,k,i,2)=tur2cut
---
>                 if (tur2cut.gt.0.) turre(j,k,i,2)=tur2cut
Index: source/ronnie/ronnie.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/ronnie/ronnie.F,v
retrieving revision 1.7
retrieving revision 1.6
diff -r1.7 -r1.6
4c4
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
125c125
<      .        lxnm2,lynm2,lznm2,lxnm1,lynm1,lznm1,lqavg
---
>      .        lxold,lyold,lzold,lxorg,lyorg,lzorg
Index: source/ronnie/setup.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/ronnie/setup.F,v
retrieving revision 1.6
retrieving revision 1.2
diff -r1.6 -r1.2
4c4
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
29c29
<      .        lxnm2,lynm2,lznm2,lxnm1,lynm1,lznm1,lqavg
---
>      .        lxold,lyold,lzold,lxorg,lyorg,lzorg
80,88c80
<         irr=0
<         call rp3d(w(lx),w(ly),w(lz),jdim,kdim,idim,igrid,ialph,0,irr)
<         if (irr .ne. 0) then
<           write(11,*) ' Stopping... error reading grid...'
<           write(11,*) ' (Common error:  grid not written in same',
<      .    ' precision that RONNIE was compiled)'
<           stop
<         end if
< c
---
>         call rp3d(w(lx),w(ly),w(lz),jdim,kdim,idim,igrid,ialph,1)
Index: source/tools/cgns_to_cfl3dinput.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/tools/cgns_to_cfl3dinput.F,v
retrieving revision 1.3
retrieving revision 1.2
diff -r1.3 -r1.2
283d282
<      +          ibocotype .ne. BCWall .and.
799,800c798
<      +         ibctype(n,nn) .eq. BCWallViscousHeatFlux .or.
<      +         ibctype(n,nn) .eq. BCWall) then
---
>      +         ibctype(n,nn) .eq. BCWallViscousHeatFlux) then
914,915c912
<      +         ibctype(n,nn) .eq. BCWallViscousHeatFlux .or.
<      +         ibctype(n,nn) .eq. BCWall) then
---
>      +         ibctype(n,nn) .eq. BCWallViscousHeatFlux) then
1029,1030c1026
<      +         ibctype(n,nn) .eq. BCWallViscousHeatFlux .or.
<      +         ibctype(n,nn) .eq. BCWall) then
---
>      +         ibctype(n,nn) .eq. BCWallViscousHeatFlux) then
1144,1145c1140
<      +         ibctype(n,nn) .eq. BCWallViscousHeatFlux .or.
<      +         ibctype(n,nn) .eq. BCWall) then
---
>      +         ibctype(n,nn) .eq. BCWallViscousHeatFlux) then
1259,1260c1254
<      +         ibctype(n,nn) .eq. BCWallViscousHeatFlux .or.
<      +         ibctype(n,nn) .eq. BCWall) then
---
>      +         ibctype(n,nn) .eq. BCWallViscousHeatFlux) then
1374,1375c1368
<      +         ibctype(n,nn) .eq. BCWallViscousHeatFlux .or.
<      +         ibctype(n,nn) .eq. BCWall) then
---
>      +         ibctype(n,nn) .eq. BCWallViscousHeatFlux) then
Index: source/tools/plot3dg_to_cgns.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/tools/plot3dg_to_cgns.F,v
retrieving revision 1.11
retrieving revision 1.10
diff -r1.11 -r1.10
3c3
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
32c32
<       write(6,'('' Note:  currently, you must be linked to CGNS V2.4'',
---
>       write(6,'('' Note:  currently, you must be linked to CGNS V2.2'',
35d34
<       write(6,'(''   (be sure that IREST=0 in this file!!!)'')')
596,599c595
<             write(6,'('' i0:   1-1, patch, or overset BC at '',
<      +       ''zone,  ilo,ihi,jlo,jhi,klo,khi='',i4,4x,6i4)') n,
<      +       ipnts(1,1),ipnts(1,2),ipnts(2,1),ipnts(2,2),
<      +       ipnts(3,1),ipnts(3,2)
---
>             continue
741,744c737
<             write(6,'('' imax: 1-1, patch, or overset BC at '',
<      +       ''zone,  ilo,ihi,jlo,jhi,klo,khi='',i4,4x,6i4)') n,
<      +       ipnts(1,1),ipnts(1,2),ipnts(2,1),ipnts(2,2),
<      +       ipnts(3,1),ipnts(3,2)
---
>             continue
886,889c879
<             write(6,'('' j0:   1-1, patch, or overset BC at '',
<      +       ''zone,  ilo,ihi,jlo,jhi,klo,khi='',i4,4x,6i4)') n,
<      +       ipnts(1,1),ipnts(1,2),ipnts(2,1),ipnts(2,2),
<      +       ipnts(3,1),ipnts(3,2)
---
>             continue
1031,1034c1021
<             write(6,'('' jmax: 1-1, patch, or overset BC at '',
<      +       ''zone,  ilo,ihi,jlo,jhi,klo,khi='',i4,4x,6i4)') n,
<      +       ipnts(1,1),ipnts(1,2),ipnts(2,1),ipnts(2,2),
<      +       ipnts(3,1),ipnts(3,2)
---
>             continue
1176,1179c1163
<             write(6,'('' k0:   1-1, patch, or overset BC at '',
<      +       ''zone,  ilo,ihi,jlo,jhi,klo,khi='',i4,4x,6i4)') n,
<      +       ipnts(1,1),ipnts(1,2),ipnts(2,1),ipnts(2,2),
<      +       ipnts(3,1),ipnts(3,2)
---
>             continue
1321,1324c1305
<             write(6,'('' kmax: 1-1, patch, or overset BC at '',
<      +       ''zone,  ilo,ihi,jlo,jhi,klo,khi='',i4,4x,6i4)') n,
<      +       ipnts(1,1),ipnts(1,2),ipnts(2,1),ipnts(2,2),
<      +       ipnts(3,1),ipnts(3,2)
---
>             continue
1498,1502d1478
<           write(6,'(''    Pair:'')')
<           write(6,'(''    zone,  ilo,ihi,jlo,jhi,klo,khi='',i4,4x,6i4)')
<      +     iblk1(n),ilo1(n),ihi1(n),jlo1(n),jhi1(n),klo1(n),khi1(n) 
<           write(6,'(''    zone,  ilo,ihi,jlo,jhi,klo,khi='',i4,4x,6i4)')
<      +     iblk2(n),ilo2(n),ihi2(n),jlo2(n),jhi2(n),klo2(n),khi2(n) 
1555,1726d1530
< c
< c  if there are patched or overset connectivities:
< c
<       if (ninter .lt. 0 .or. iovmx .ne. 0) then
<         write(6,'(/,'' There appear to be patched and/or overset'',
<      +   '' boundaries'')')
<         write(6,'('' There are currently Information Descriptor'',
<      +   '' nodes written to the CGNS file'')')
<         write(6,'('' If you also want GridConnectivity_t node(s)'',
<      +   '' written, you must supply info here:'')')
< c  Patched:
<         write(6,'(''   Input number of patched faces'',
<      +   '' (typically 2 for each interface)'')')
<         write(6,'(''   (type 0 if there are none, or if you'',
<      +   '' want to leave out this info):'')')
<         read(5,*) ipatch
<         if (ipatch .gt. 0) then
<           do i=1,ipatch
<             write(6,'('' Input to-zone index information:'')')
<             write(6,'('' Input zone #,ilo,ihi,jlo,jhi,klo,khi:'')')
<             read(5,*) izto,iloto,ihito,jloto,jhito,kloto,khito
<             irange(1,1)=iloto
<             irange(2,1)=jloto
<             irange(3,1)=kloto
<             irange(1,2)=ihito
<             irange(2,2)=jhito
<             irange(3,2)=khito
<             iok=0
<             if (iloto .eq. ihito .or. jloto .eq. jhito .or.
<      +          kloto .eq. khito) then
<               iok=1
<             end if
<             if (iok .eq. 0) then
<               write(6,'('' Error... one index must be identical.'',
<      +         ''  Stopping.'')')
<               stop
<             end if
< c  get donor zone name
<             write(6,'('' Input primary number of zone donor for this'',
<      +       '' patch:'')')
<             read(5,*) izfr
<             donorname=zonename(izfr)
< c  get interface name
<             if(i .lt. 10000) then
<               write(filecon,102) i
<             else
<               write(6,'('' too many zones - limited to 9999'')')
<               write(6,'('' Aborting.  The ADF file is no good.'')')
<               stop
<             end if
< c  get connect name
<             connectname = 'PatchInterfaceA' // filecon
<             call cg_conn_write_short_f(iccg,ibase,iz(izto),connectname,
<      +        Vertex,Abutting,PointRange,2,irange,donorname,
<      +        iindexto,ier)
<             if (ier .ne. 0) call cg_error_exit_f
<             call cg_conn_write_short_f(iccgr,ibase,iz(izto),connectname,
<      +        Vertex,Abutting,PointRange,2,irange,donorname,
<      +        iindexto,ier)
<             if (ier .ne. 0) call cg_error_exit_f
< c  write descriptors to go along with patching
<             call cg_goto_f(iccg,ibase,ier,'Zone_t',izto,
<      +       'ZoneGridConnectivity_t',1,'GridConnectivity_t',
<      +       iindexto,'end')
<             textf='Patching connectivity InterpolantsDonor info is'//
<      +       ' NOT included in this file'
<             call cg_descriptor_write_f('InterpolantsDonorInfo',
<      +       textf,ier)
<             if (ier .ne. 0) call cg_error_exit_f
<             textf='Patching connectivity CellListDonor info is'//
<      +       ' NOT included in this file'
<             call cg_descriptor_write_f('CellListDonorInfo',
<      +       textf,ier)
<             if (ier .ne. 0) call cg_error_exit_f
< c
<             call cg_goto_f(iccgr,ibase,ier,'Zone_t',izto,
<      +       'ZoneGridConnectivity_t',1,'GridConnectivity_t',
<      +       iindexto,'end')
<             textf='Patching connectivity InterpolantsDonor info is'//
<      +       ' NOT included in this file'
<             call cg_descriptor_write_f('InterpolantsDonorInfo',
<      +       textf,ier)
<             if (ier .ne. 0) call cg_error_exit_f
<             textf='Patching connectivity CellListDonor info is'//
<      +       ' NOT included in this file'
<             call cg_descriptor_write_f('CellListDonorInfo',
<      +       textf,ier)
<             if (ier .ne. 0) call cg_error_exit_f
<           enddo
<         end if
< c  Overset:
<         write(6,'(''   Input number of overset faces'',
<      +   '' (typically 2 for each interface)'')')
<         write(6,'(''   (type 0 if there are none, or if you'',
<      +   '' want to leave out this info):'')')
<         read(5,*) iover
<         if (iover .gt. 0) then
<           do i=1,iover
<             write(6,'('' Input to-zone index information:'')')
<             write(6,'('' Input zone #,ilo,ihi,jlo,jhi,klo,khi:'')')
<             read(5,*) izto,iloto,ihito,jloto,jhito,kloto,khito
<             irange(1,1)=iloto
<             irange(2,1)=jloto
<             irange(3,1)=kloto
<             irange(1,2)=ihito
<             irange(2,2)=jhito
<             irange(3,2)=khito
<             iok=0
<             if (iloto .eq. ihito .or. jloto .eq. jhito .or.
<      +          kloto .eq. khito) then
<               iok=1
<             end if
<             if (iok .eq. 0) then
<               write(6,'('' Error... one index must be identical.'',
<      +         ''  Stopping.'')')
<               stop
<             end if
< c  get donor zone name
<             write(6,'('' Input primary number of zone donor for this'',
<      +       '' patch:'')')
<             read(5,*) izfr
<             donorname=zonename(izfr)
< c  get interface name
<             if(i .lt. 10000) then
<               write(filecon,102) i
<             else
<               write(6,'('' too many zones - limited to 9999'')')
<               write(6,'('' Aborting.  The ADF file is no good.'')')
<               stop
<             end if
< c  get connect name
<             connectname = 'OversetInterfaceA' // filecon
<             call cg_conn_write_short_f(iccg,ibase,iz(izto),connectname,
<      +        Vertex,Overset,PointRange,2,irange,donorname,
<      +        iindexto,ier)
<             if (ier .ne. 0) call cg_error_exit_f
<             call cg_conn_write_short_f(iccgr,ibase,iz(izto),connectname,
<      +        Vertex,Overset,PointRange,2,irange,donorname,
<      +        iindexto,ier)
<             if (ier .ne. 0) call cg_error_exit_f
< c  write descriptors to go along with overset
<             call cg_goto_f(iccg,ibase,ier,'Zone_t',izto,
<      +       'ZoneGridConnectivity_t',1,'GridConnectivity_t',
<      +       iindexto,'end')
<             textf='Overset connectivity InterpolantsDonor info is'//
<      +       ' NOT included in this file'
<             call cg_descriptor_write_f('InterpolantsDonorInfo',
<      +       textf,ier)
<             if (ier .ne. 0) call cg_error_exit_f
<             textf='Overset connectivity CellListDonor info is'//
<      +       ' NOT included in this file'
<             call cg_descriptor_write_f('CellListDonorInfo',
<      +       textf,ier)
<             if (ier .ne. 0) call cg_error_exit_f
< c
<             call cg_goto_f(iccgr,ibase,ier,'Zone_t',izto,
<      +       'ZoneGridConnectivity_t',1,'GridConnectivity_t',
<      +       iindexto,'end')
<             textf='Overset connectivity InterpolantsDonor info is'//
<      +       ' NOT included in this file'
<             call cg_descriptor_write_f('InterpolantsDonorInfo',
<      +       textf,ier)
<             if (ier .ne. 0) call cg_error_exit_f
<             textf='Overset connectivity CellListDonor info is'//
<      +       ' NOT included in this file'
<             call cg_descriptor_write_f('CellListDonorInfo',
<      +       textf,ier)
<             if (ier .ne. 0) call cg_error_exit_f
<           enddo
<         end if
< c
<       end if
Index: source/tools/v6inpdoubhalf.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/tools/v6inpdoubhalf.F,v
retrieving revision 1.4
retrieving revision 1.2
diff -r1.4 -r1.2
3c3
< c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
---
> c     $Id: cvs_diff_May_29_2007,v 1.1 2007/05/29 14:05:34 rumsey Exp $
117c117
<       write(3,'(e10.4,2i10,f10.4,i10,f10.4)') dt,ir,if,fm,iu,cf
---
>       write(3,'(f10.4,2i10,f10.4,i10,f10.4)') dt,ir,if,fm,iu,cf
1446,1451d1445
<       if (name .eq. '') then
<         write(6,'(/,'' WARNING:  input file has a blank line after'',
<      +   '' control surface info...'')')
<         write(6,'(''           any subsequent lines will be ignored'')')
<         goto 999
<       end if
