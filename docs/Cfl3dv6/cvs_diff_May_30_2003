Index: build/Install
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/build/Install,v
retrieving revision 1.20
retrieving revision 1.11
diff -r1.20 -r1.11
1d0
< 
4c3
< #     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> #     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
40,41c39,40
< #   -cgnsdir=DIR   where DIR is the CGNS base directory, used if CGNS
< #                  compatability is desired
---
> #   -cgnsdir=DIR  where DIR is the CGNS base directory, used if CGNS
> #                 compatability is desired
62,63d60
< #   -linux_compiler_flags=(PG,Intel,Lahey,Alpha)
< #                  compile with particular flags for Linux operating system
84d80
< linux_compiler_flags="default" # default linux compiler flags
88,95c84,90
<     -single)            do_dou=no ;;
<     -no_opt)            do_no_opt=yes ;;
<     -noredi*)           do_redirect=no ;;
<     -f77)               do_f90=no ;;
<     -purify)            do_purify=yes ;;
<     -mpichdir=*)        mpichdir=`echo $1 | sed 's/[-a-z_]*=//'` ;;
<     -cgnsdir=*)         cgnsdir=`echo $1 | sed 's/[-a-z_]*=//'` ;;
<     -linux_compiler_flags=*)  linux_compiler_flags=`echo $1 | sed 's/[-a-z_]*=//'` ;;
---
>     -single)      do_dou=no ;;
>     -no_opt)      do_no_opt=yes ;;
>     -noredi*)     do_redirect=no ;;
>     -f77)         do_f90=no ;;
>     -purify)      do_purify=yes ;;
>     -mpichdir=*)  mpichdir=`echo $1 | sed 's/[-a-z_]*=//'` ;;
>     -cgnsdir=*)   cgnsdir=`echo $1 | sed 's/[-a-z_]*=//'` ;;
107d101
<        -linux_compiler_flags=(PG,Intel,Lahey,Alpha) for Linux
176c170
<         UNAME="$dir/uname"
---
> 	UNAME="$dir/uname"
216,223c210,217
<         AIX|RIOS) FARCH=rs6000; break ;;
<         HP-UX) FARCH=hpux ; break ;;
<         IRIX64|IRIX) FARCH=$LARCH ; break ;;
<         Linux)  FARCH=LINUX ; break ;;
<         i586|i486|i86pc)
<             GARCH=$LARCH ;;
<         sun4*)
<         Version=`$UNAME -r`
---
> 	AIX|RIOS) FARCH=rs6000; break ;;
> 	HP-UX) FARCH=hpux ; break ;;
> 	IRIX64|IRIX) FARCH=$LARCH ; break ;;
> 	Linux)  FARCH=LINUX ; break ;;
> 	i586|i486|i86pc)
> 	    GARCH=$LARCH ;;
> 	sun4*)
> 	Version=`$UNAME -r`
232,237c226,231
<         else
<             FARCH=sun4
<         fi
<         break ;;
<         hp9000*|hp7000*) FARCH=hpux ; break ;;
<         mips|dec-5000)   FARCH=dec5000 ; break ;;
---
> 	else
> 	    FARCH=sun4
> 	fi
> 	break ;;
> 	hp9000*|hp7000*) FARCH=hpux ; break ;;
> 	mips|dec-5000)   FARCH=dec5000 ; break ;;
241,242c235,236
<         next)            FARCH=NeXT ; break ;;  
<         KSR1|KSR2)       FARCH=ksr ; break ;;   
---
>         next)            FARCH=NeXT ; break ;;	
> 	KSR1|KSR2)       FARCH=ksr ; break ;;	
244,245c238,239
<         i386)            GARCH=ipsc2 ;;
<         ULTRIX|RISC)     GARCH=dec5000 ;;
---
> 	i386)            GARCH=ipsc2 ;;
> 	ULTRIX|RISC)     GARCH=dec5000 ;;
253,256c247,250
<         C90) GARCH=CRAY ;;
<         J90) GARCH=CRAY ;;
<         T90) GARCH=CRAY ;;
<         YMP) GARCH=CRAY ;;
---
> 	C90) GARCH=CRAY ;;
> 	J90) GARCH=CRAY ;;
> 	T90) GARCH=CRAY ;;
> 	YMP) GARCH=CRAY ;;
263c257
<         FARCH=$LLARCH
---
> 	FARCH=$LLARCH
266c260
<         FARCH=unknown
---
> 	FARCH=unknown
269a264
> 
424a420,422
> # Intel 
> # CC="icc"
> 
436,440d433
< # default libraries
< 
<   LLIB_SEQ=""
<   LLIB=""
< 
475,477c468,470
<   MPI_INCDIR="-I$MPI_HOME/include"
<   MPI_LLIBDIR="-L$MPI_HOME/lib"
<   MPI_LLIB="-lmpi"
---
>   MPI_INCDIR="$MPI_HOME/include"
>   MPI_LLIBDIR="$MPI_HOME/lib"
>   MPI_LLIB="mpi"
482,484c475,477
<         MPI_INCDIR="-I$MPI_HOME/build/$FARCH/ch_p4/include"
<         MPI_LLIBDIR="-L$MPI_HOME/build/$FARCH/ch_p4/lib"
<         MPI_LLIB="-lmpich"
---
>         MPI_INCDIR="$MPI_HOME/build/$FARCH/ch_p4/include"
>         MPI_LLIBDIR="$MPI_HOME/build/$FARCH/ch_p4/lib"
>         MPI_LLIB="mpich"
506,507c499,500
<         CGNS_INCDIR="-I$CGNS_HOME"
<         CGNS_LLIBDIR="-L$CGNS_HOME/lib"
---
>         CGNS_INCDIR="$CGNS_HOME"
>         CGNS_LLIBDIR="$CGNS_HOME/lib"
551,552c544,545
<   MPI_INCDIR="-I$MPI_HOME/include"
<   MPI_LLIBDIR="-L$MPI_HOME/lib"
---
>   MPI_INCDIR="$MPI_HOME/include"
>   MPI_LLIBDIR="$MPI_HOME/lib"
598c591
<      CGNS_LLIB="cgns.mips64"
---
>      CGNS_LLIB="cgns.mips4_64"
601c594
<      MPI_LLIBDIR="-L$MPI_HOME/lib64"
---
>      MPI_LLIBDIR="$MPI_HOME/lib64"
611c604
<        CGNS_LLIB="cgns.mips4"
---
>        CGNS_LLIB="cgns.mips4_32"
614c607
<        MPI_LLIBDIR="-L$MPI_HOME/lib32"
---
>        MPI_LLIBDIR="$MPI_HOME/lib32"
630a624
>      FFLAG="$FFLAG -qarch=pwr2"
637c631
<      MPI_INCDIR="-I$MPI_HOME/include"
---
>      MPI_INCDIR="$MPI_HOME/include"
640c634
<      CGNS_LLIB="cgns.ibm"
---
>      CGNS_LLIB="cgns.IBM"
647a642,644
> # note: must explicitly ask for i4 with solaris OS on sun's
> # since r8 alters integer length !!!
> 
650c647
<      PREC="-xtypemap=real:64,integer:32"
---
>      PREC="$PREC -i4"
657c654
<      CGNS_LLIB="cgns.sol"
---
>      CGNS_LLIB="cgns.SOL"
683c680
<      CGNS_LLIB="cgns.hp"
---
>      CGNS_LLIB="cgns.HP"
692,700d688
< 
<   FTN="mpif77"
< # Alternate compiler you may need if mpif77 doesn't
< # work (e.g. you don't have mpi installed):
< # FTN="fort"
< 
<   CC="gcc"                                                                              
<   CPP="cpp"
< 
702c690
<      FFLAG="-O3 -fast -w -fpe3"
---
>      FFLAG="-O4 -convert big_endian"
704c692
<      FFLAG=""
---
>      FFLAG="-convert big_endian"
706d693
< 
708,712d694
<   LFLAG="-non_shared"
<   CFLAG=""
<   LLIB=""
<   LLIB_SEQ=""
< 
714,722c696
<      CGNS_LLIB="cgns.alpha"
<   fi
< 
<   FFLAG_SPEC="$FFLAG"
< 
<   if [ $do_dou = yes ]; then
<      PREC="-r8 -fpconstant"
<   else
<      PREC=""
---
>      CGNS_LLIB="cgns.ALPHA"
724d697
< 
741c714,715
<   CPPOPT_SP="$CPPOPT_SP -DLINUX"
---
> # Portland Group Compiler
>   FFLAG="-fast -tp p7 -byteswapio"
743c717,728
< # Default to INTEL settings:
---
> # Alpha Compiler
> # FFLAG="-O2 -convert big_endian"
> 
> # Lahey Fujitsu Compiler
> # FFLAG="--o1 --ap"
> # Note: the following evironment variable must be set in order
> #       to use "bigendian" files (like those generated on an SGI)
> #       with the Lahey Fujitsu compiler
> #setenv FORT90L -Wl,-T
> 
> # Intel Fortan Compiler
> # FFLAG="-O3 -tpp7 -w -ip"
745,746d729
<   CFLAG="-r8"
<   FFLAG="-O2 -w -ip"
748,756d730
<   LFLAG="-static"                                                               
<   LLIB="-lsvml -lPEPCF90"
<   LLIB_SEQ=$LLIB
<   LLIBDIR=""
<   MPI_LLIBDIR=""
<   MPI_LLIB=""
<   MPI_INCDIR=""
<   CC="gcc"
<   CPP="cpp"
757a732,733
> 
> #    Portland Group Compiler
759,765d734
<   else
<      PREC=""
<   fi
<   if [ ! x$cgnsdir = x ]; then
<      CGNS_LLIB="cgns.linux"
<   fi
<   FTN="mpif77"
767,768c736,740
< # Alternate compiler choices you may need if mpif77 doesn't
< # work (e.g. you don't have mpi installed):
---
> # Alpha Compiler
> #    PREC="-r8"
> 
> #    Lahey Fujitsu Compiler
> #    PREC="--dbl"
770,773d741
< # Portland Group Compiler
< #   FTN="pgf90"
< # Lahey Fujitsu Compiler
< #   FTN="lf95"
775,777c743
< #   FTN="ifc"
< # Alpha-using-Linux Compiler
< #   FTN="fort"
---
> #    PREC="-r8"
779c745
< # Force alternate optimazation flags, etc.
---
>   else
781c747
< # Intel Compiler
---
>      PREC=""
783,807d748
<   if [ $linux_compiler_flags = Intel ]; then
<      CFLAG="-r8"
<      FFLAG="-O2 -w -ip"
<      FFLAG_SPEC="$FFLAG"
<      LFLAG="-static"
<      LLIB="-lsvml -lPEPCF90"
<      LLIB_SEQ=$LLIB
<      LLIBDIR=""
<      MPI_LLIBDIR=""
<      MPI_LLIB=""
<      MPI_INCDIR=""
<      CC="gcc"
<      CPP="cpp"
<      if [ $do_dou = yes ]; then
<         PREC="-r8"
<      else
<         PREC=""
<      fi
<      if [ ! x$cgnsdir = x ]; then
<         CGNS_LLIB="cgns.linux"
<      fi
<      FTN="mpif77"
< # Alternate Intel compiler you may need if mpif77 doesn't
< # work (e.g. you don't have mpi installed):
< #    FTN="ifc"
810,837c751
< # Portland Group Compiler
< 
<   if [ $linux_compiler_flags = PG ]; then
<      CFLAG=""
<      FFLAG="-fast"
<      FFLAG_SPEC="$FFLAG"
<      LFLAG="-Wl,-Bstatic"
<      LLIB=""
<      LLIB_SEQ=""
<      LLIBDIR=""
<      MPI_LLIBDIR=""
<      MPI_LLIB=""
<      MPI_INCDIR=""
<      CC="gcc"
<      CPP="cpp"
<      if [ $do_dou = yes ]; then
<         PREC="-r8"
<      else
<         PREC=""
<      fi
<      if [ ! x$cgnsdir = x ]; then
<         CGNS_LLIB="cgns.linux"
<      fi
<      FTN="mpif77"
< # Alternate Portland group compiler you may need if mpif77 doesn't
< # work (e.g. you don't have mpi installed):
< #    FTN="pgf90"
<   fi
---
>   CPP="cpp"
839c753,754
< # Lahey Compiler
---
> # Portland Group Compiler
>   FTN="pgf90"
841,866c756,757
<   if [ $linux_compiler_flags = Lahey ]; then
<      CFLAG=""
<      FFLAG="-O --ap"
<      FFLAG_SPEC="$FFLAG"
<      LFLAG="--staticlink"
<      LLIB=""
<      LLIB_SEQ=""
<      LLIBDIR=""
<      MPI_LLIBDIR=""
<      MPI_LLIB=""
<      MPI_INCDIR=""
<      CC="gcc"
<      CPP="cpp"
<      if [ $do_dou = yes ]; then
<         PREC="--dbl"
<      else
<         PREC=""
<      fi
<      if [ ! x$cgnsdir = x ]; then
<         CGNS_LLIB="cgns.linux"
<      fi
<      FTN="mpif77"
< # Alternate Lahey compiler you may need if mpif77 doesn't
< # work (e.g. you don't have mpi installed):
< #    FTN="lf95"
<   fi
---
> # Alpha Compiler
> # FTN="fort"
868c759,760
< # ALPHA Compiler
---
> # Lahey Fujitsu Compiler
> # FTN="lf95"
870,895c762,763
<   if [ $linux_compiler_flags = Alpha ]; then
<      CFLAG=""
<      FFLAG="-O3 -fast -w -fpe3"
<      FFLAG_SPEC="$FFLAG"
<      LFLAG="-non_shared"                                                               
<      LLIB=""
<      LLIB_SEQ=""
<      LLIBDIR=""
<      MPI_LLIBDIR=""
<      MPI_LLIB=""
<      MPI_INCDIR=""
<      CC="gcc"
<      CPP="cpp"
<      if [ $do_dou = yes ]; then
<         PREC="-r8 -fpconstant"
<      else
<         PREC=""
<      fi
<      if [ ! x$cgnsdir = x ]; then
<         CGNS_LLIB="cgns.alpha"
<      fi
<      FTN="mpif77"
< # Alternate Alpha compiler you may need if mpif77 doesn't
< # work (e.g. you don't have mpi installed):
< #    FTN="fort"
<   fi
---
> # Intel Fortan Compiler
> # FTN="ifc"
897,900c765
< # Note: the following environment variable must be set in order
< #       to use "bigendian" files (like those generated on an SGI)
< #       with the Lahey Fujitsu compiler
< #setenv FORT90L -Wl,-T
---
>   CPPOPT_SP="$CPPOPT_SP -DLINUX"
919a785
> 
933c799
< LLIB="$LLIB $MPI_LLIB"
---
> LLIB="-l$MPI_LLIB"
936c802
<    LLIB_SEQ="$LLIB_SEQ -l$CGNS_LLIB"
---
>    LLIB_SEQ="-l$CGNS_LLIB"
938a805,807
> # Intel Fortran Compiler
> # LLIB="$LLIB -lsvml -lPEPCF90"
> 
941c810
< LLIBDIR="$MPI_LLIBDIR"
---
> LLIBDIR="-L$MPI_LLIBDIR"
943,944c812,813
<    LLIBDIR="$LLIBDIR $CGNS_LLIBDIR"
<    LLIBDIR_SEQ="$CGNS_LLIBDIR"
---
>    LLIBDIR="$LLIBDIR -L$CGNS_LLIBDIR"
>    LLIBDIR_SEQ="-L$CGNS_LLIBDIR"
952c821
< MPI_INCDIR="$MPI_INCDIR"
---
> MPI_INCDIR="-I$MPI_INCDIR"
954c823
<    CGNS_INCDIR="$CGNS_INCDIR"
---
>    CGNS_INCDIR="-I$CGNS_INCDIR"
1004c873,877
< echo 'makefile created to use fortran compiler......'$FTN
---
> if [ $do_f90 = yes ]; then
>    echo 'makefile created to use fortran compiler......f90'
> else
>    echo 'makefile created to use fortran compiler......f77'
> fi
1054c927
< case $FARCH in LINUX)
---
> case $LARCH in Linux)
1059,1095c932,936
<    echo 'Linux has been identified as the OS. The default flags'
<    echo 'are set for the Intel compiler; alternate flag settings'
<    echo 'for the Portland Group compiler or the Lahey-Fujitsu'
<    echo 'or the Alpha compiler may be obtained by rerunning this'
<    echo 'script with the the command line option'
<    echo '-linux_compiler_flags=PG or -linux_compiler_flags=Lahey'
<    echo 'or -linux_compiler_flags=Alpha'
<    echo ' '
<    echo 'Note the default Fortran compiler is currently set'
<    echo 'as mpif77 - if this does not work, you will need'
<    echo 'to change this: e.g. ifc, pgf90, etc.'
<    echo ' '
<    echo 'For certain implementations of MPI you may need to'
<    echo 'use the -noredirect install option and re-install to'
<    echo 'turn off input file redirection'
<    echo ' '
<    echo 'Some MPI implementations have a problem'
<    echo 'with the following 2 lines of coding in main.F'
<    echo '      sysfile = rm -f stop'
<    echo '      call system(sysfile)'
<    echo 'If the code will not run for you, try commenting out'
<    echo 'these lines... you would then need to manually remove'
<    echo 'any stop files that are present'
< esac
< case $FARCH in alpha)
<    echo ' '
<    echo 'Note the default Fortran compiler is currently set'
<    echo 'as mpif77 - if this does not work, you will need'
<    echo 'to change this: e.g. fort'
<    echo ' '
<    echo 'Some MPI implementations have a problem'
<    echo 'with the following 2 lines of coding in main.F'
<    echo '      sysfile = rm -f stop'
<    echo '      call system(sysfile)'
<    echo 'If the code will not run for you, try commenting out'
<    echo 'these lines... you would then need to manually remove'
<    echo 'any stop files that are present'
---
>    echo 'Linux has been identified as the OS. See the section'
>    echo '"LINUX ARCHITECTURE" in the Install script for'
>    echo 'some values which have been used in the past -'
>    echo 'however these may well need to be tweeked for'
>    echo 'any particular installation'
Index: build/cfl/libs/makefile
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/build/cfl/libs/makefile,v
retrieving revision 1.7
retrieving revision 1.6
diff -r1.7 -r1.6
1c1
< #     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> #     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
37c37
< 	collx.F        dsmin.F        initvist.F     lamfix.F \
---
> 	collx.F        dsmin.F        initvist.F \
Index: build/cfl/libs/makefile_cpp
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/build/cfl/libs/makefile_cpp,v
retrieving revision 1.8
retrieving revision 1.7
diff -r1.8 -r1.7
1c1
< #     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> #     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
44c44
< 	collx.f        dsmin.f        initvist.f     lamfix.f \
---
> 	collx.f        dsmin.f        initvist.f \
Index: build/cflcmplx/libs/makefile
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/build/cflcmplx/libs/makefile,v
retrieving revision 1.7
retrieving revision 1.6
diff -r1.7 -r1.6
1c1
< #     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> #     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
37c37
< 	collx.F        dsmin.F        initvist.F     lamfix.F \
---
> 	collx.F        dsmin.F        initvist.F \
Index: build/cflcmplx/libs/makefile_cpp
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/build/cflcmplx/libs/makefile_cpp,v
retrieving revision 1.8
retrieving revision 1.7
diff -r1.8 -r1.7
1c1
< #     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> #     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
44c44
< 	collx.f        dsmin.f        initvist.f     lamfix.f \
---
> 	collx.f        dsmin.f        initvist.f \
Index: build/tools/seq/makefile
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/build/tools/seq/makefile,v
retrieving revision 1.5
retrieving revision 1.4
diff -r1.5 -r1.4
1c1
< #     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> #     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
72d71
< SOURCE15 = cgns_to_cfl3dinput.F
88d86
< OBJECT15 = $(SOURCE15:.F=.o)
118,119d115
< $(OBJECT15):
< 	$(FTN) $(CPPOPT) $(FFLAG) -c $*.F
136d131
< EXEC15 = cgns_to_cfl3dinput
180,182d174
< $(EXEC15): $(SOURCE15)  $(OBJECT15) $(LIBS)
< 	$(FTN) $(CPPOPT) $(LFLAG) -o $(EXEC15) $(OBJECT15) $(LIBS) $(LLIBS)
< 
184,185c176
< 	 $(EXEC8) $(EXEC9) $(EXEC10) $(EXEC11) $(EXEC12) $(EXEC13) $(EXEC14) \
<          $(EXEC15)
---
> 	 $(EXEC8) $(EXEC9) $(EXEC10) $(EXEC11) $(EXEC12) $(EXEC13) $(EXEC14)
207d197
< 	@ echo "                      $(DIR)/$(EXEC15)                        "
227,228c217
< 	 $(EXEC8) $(EXEC9) $(EXEC10) $(EXEC11) $(EXEC12) $(EXEC13) $(EXEC14) \
<          $(EXEC15)
---
> 	 $(EXEC8) $(EXEC9) $(EXEC10) $(EXEC11) $(EXEC12) $(EXEC13) $(EXEC14)
Index: build/tools/seq/makefile_cpp
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/build/tools/seq/makefile_cpp,v
retrieving revision 1.6
retrieving revision 1.5
diff -r1.6 -r1.5
1c1
< #     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> #     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
79d78
< SOURCE15 = cgns_to_cfl3dinput.f
95d93
< OBJECT15  = $(SOURCE15:.f=.o)
125,126d122
< $(OBJECT15):
< 	$(FTN) $(FFLAG) -c $*.f
142d137
< EXEC15 = cgns_to_cfl3dinput
186,188d180
< $(EXEC15): $(SOURCE15)  $(OBJECT15) $(LIBS)
< 	$(FTN) $(LFLAG) -o $(EXEC15) $(OBJECT15) $(LIBS) $(LLIBS)
< 
190,191c182
< 	 $(EXEC8) $(EXEC9) $(EXEC10) $(EXEC11) $(EXEC12) $(EXEC13) $(EXEC14) \
<          $(EXEC15)
---
> 	 $(EXEC8) $(EXEC9) $(EXEC10) $(EXEC11) $(EXEC12) $(EXEC13) $(EXEC14)
213d203
< 	@ echo "                      $(DIR)/$(EXEC15)                        "
233,234c223
< 	 $(EXEC8) $(EXEC9) $(EXEC10) $(EXEC11) $(EXEC12) $(EXEC13) $(EXEC14) \
<          $(EXEC15)
---
> 	 $(EXEC8) $(EXEC9) $(EXEC10) $(EXEC11) $(EXEC12) $(EXEC13) $(EXEC14)
Index: source/cfl3d/dist/calyplus.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/dist/calyplus.F,v
retrieving revision 1.6
retrieving revision 1.5
diff -r1.6 -r1.5
9c9
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
166,167c166
<          if (abs(kbcinfo(nbl,nseg,1,m)) .eq. 2004 .or.
<      .       abs(kbcinfo(nbl,nseg,1,m)) .eq. 2014) then
---
>          if (abs(kbcinfo(nbl,nseg,1,m)) .eq. 2004) then
628,629c627
<          if (abs(jbcinfo(nbl,nseg,1,m)) .eq. 2004 .or.
<      .       abs(jbcinfo(nbl,nseg,1,m)) .eq. 2014) then
---
>          if (abs(jbcinfo(nbl,nseg,1,m)) .eq. 2004) then
1095,1096c1093
<          if (abs(ibcinfo(nbl,nseg,1,m)) .eq. 2004 .or.
<      .       abs(ibcinfo(nbl,nseg,1,m)) .eq. 2014) then
---
>          if (abs(ibcinfo(nbl,nseg,1,m)) .eq. 2004) then
Index: source/cfl3d/dist/cfl3d.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/dist/cfl3d.F,v
retrieving revision 1.4
retrieving revision 1.3
diff -r1.4 -r1.3
8c8
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
377,382c377,382
<       allocate( bcvali(maxbl,maxseg,12,2),stat=stats )
<       call umalloc(maxbl*maxseg*12*2,0,'bcvali',memuse,stats)
<       allocate( bcvalj(maxbl,maxseg,12,2),stat=stats )
<       call umalloc(maxbl*maxseg*12*2,0,'bcvalj',memuse,stats)
<       allocate( bcvalk(maxbl,maxseg,12,2),stat=stats )
<       call umalloc(maxbl*maxseg*12*2,0,'bcvalk',memuse,stats)
---
>       allocate( bcvali(maxbl,maxseg,7,2),stat=stats )
>       call umalloc(maxbl*maxseg*7*2,0,'bcvali',memuse,stats)
>       allocate( bcvalj(maxbl,maxseg,7,2),stat=stats )
>       call umalloc(maxbl*maxseg*7*2,0,'bcvalj',memuse,stats)
>       allocate( bcvalk(maxbl,maxseg,7,2),stat=stats )
>       call umalloc(maxbl*maxseg*7*2,0,'bcvalk',memuse,stats)
Index: source/cfl3d/dist/findmin_new.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/dist/findmin_new.F,v
retrieving revision 1.4
retrieving revision 1.3
diff -r1.4 -r1.3
8c8
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
174c174
<                if(abs(nbctype).eq.2004 .or. abs(nbctype).eq.2014) then
---
>                if(abs(nbctype).eq.2004) then
287c287
<                if(abs(nbctype).eq.2004 .or. abs(nbctype).eq.2014) then
---
>                if(abs(nbctype).eq.2004) then
400c400
<                if(abs(nbctype).eq.2004 .or. abs(nbctype).eq.2014) then
---
>                if(abs(nbctype).eq.2004) then
686c686
< c slarge...large number to add at points that: 1) have a bctype=2004/14
---
> c slarge...large number to add at points that: 1) have a bctype=2004
819c819
< c slarge...large number to add at points that: 1) have a bctype=2004/14
---
> c slarge...large number to add at points that: 1) have a bctype=2004
Index: source/cfl3d/dist/main.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/dist/main.F,v
retrieving revision 1.12
retrieving revision 1.11
diff -r1.12 -r1.11
3c3
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
179c179
< c        models), key off boundary condition type 2004/14 (viscous
---
> c        models), key off boundary condition type 2004 (viscous
Index: source/cfl3d/dist/mgbl.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/dist/mgbl.F,v
retrieving revision 1.13
retrieving revision 1.11
diff -r1.13 -r1.11
53c53
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
154,155c154,155
<       dimension bcvali(maxbl,maxseg,12,2),
<      .          bcvalj(maxbl,maxseg,12,2),bcvalk(maxbl,maxseg,12,2),
---
>       dimension bcvali(maxbl,maxseg,7,2),
>      .          bcvalj(maxbl,maxseg,7,2),bcvalk(maxbl,maxseg,7,2),
225c225,226
<       common /alphait/ ialphit,cltarg,rlxalph,dalim,dalpha,icycupdt
---
>       common /alphait/ cltarg,resupdt,cltol,dalim,dcldal,alphalast,
>      .                 ialphit,nttlast,icycupdt
629c630,631
<      .      ''            alpha           dalpha'')')
---
>      .      ''            alpha        d(cl)/d(a)used'',
>      .      ''  d(cl)/d(a)computed'')')
Index: source/cfl3d/dist/mgblk.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/dist/mgblk.F,v
retrieving revision 1.17
retrieving revision 1.14
diff -r1.17 -r1.14
53c53
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
122,123c122,123
<       dimension bcvali(maxbl,maxseg,12,2),
<      .          bcvalj(maxbl,maxseg,12,2),bcvalk(maxbl,maxseg,12,2),
---
>       dimension bcvali(maxbl,maxseg,7,2),
>      .          bcvalj(maxbl,maxseg,7,2),bcvalk(maxbl,maxseg,7,2),
257c257,258
<       common /alphait/ ialphit,cltarg,rlxalph,dalim,dalpha,icycupdt
---
>       common /alphait/ cltarg,resupdt,cltol,dalim,dcldal,alphalast,
>      .                 ialphit,nttlast,icycupdt
884a886,888
>       nttlast = ntt+1
>       alphalast=alpha
> c
1903,1905d1906
< c     if using fixed Cl option, update angle of attack, then perform
< c     instantaneous velocity rotation for all points in flowfield;
< c     rotation angle is change in alpha, velocity magnitude remains unchanged
1907,1908c1908,1909
<       if (icycupdt .gt. 0) then
<       if (mod(ntt,icycupdt) .eq. 0) then
---
> c     if using fixed Cl option, update angle of attack
> c
1911,1922d1911
<          do nbl = 1, nblock
<             if (mblk2nd(nbl) .eq. myid) then
<                call lead(nbl,lw,lw2,maxbl)
<                angx = 0
<                angy = -dalpha
<                angz = 0
<                call rotateq(jdim,kdim,idim,w(lq),w(lq),1,idim,
<      .                      1,jdim,1,kdim,angx,angy,angz)
<             end if
<          end do
<       end if
<       end if
2695d2683
<                   if (icgns .eq. 1) then
2704d2691
<                   end if
2738d2724
<                   if (icgns .eq. 1) then
2742d2727
<                   end if
Index: source/cfl3d/dist/newalpha.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/dist/newalpha.F,v
retrieving revision 1.4
retrieving revision 1.3
diff -r1.4 -r1.3
3c3
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
11,16d10
< c
< c     recoded by S. Allmaras (5/03) to implmement TLNS3D Cl matching
< c     algorithm; at each iteration perform:
< c     (1) relaxation of alpha based on error in Cl
< c     (2) instantaneous velocity rotation for all points in flowfield;
< c         the rotation angle is the change in alpha
43c37,40
<       common /alphait/ ialphit,cltarg,rlxalph,dalim,dalpha,icycupdt
---
>       common /alphait/ cltarg,resupdt,cltol,dalim,dcldal,alphalast,
>      .                 ialphit,nttlast,icycupdt
>       common /mgrd/ levt,kode,mode,ncyc,mtt,icyc,level,lglobal
>       common /fsum/ sref,cref,bref,xmc,ymc,zmc
49,52c46,47
< c     cltarg...target cl
< c     rlxalph..relaxation parameter for updating alpha (default = 1)
< c     dalim....limit on magnitude of alpha change (default = 0.2 deg)
< c     dalpha...alpha change
---
> c     cltol....stop alpha iteration when abs(delcl) < cltol
> c     dalim....limit of alpha change (deg.) per update
53a49,50
> c
>       cltol  = 1.e-6
56d52
< c     update alpha based on error in cl; 
58,62c54,76
<          rlx    = rlxalph / real(radtodeg)
<          dalpha = -rlx*(clw(ntt) - cltarg)
<          if (abs(real(dalpha)) .gt. real(dalim)/real(radtodeg)) then
<            sgn    = ccsignrc(1., dalpha)
<            dalpha = sgn*(dalim/radtodeg)
---
> c
>          clntt = clw(ntt)
>          delcl = cltarg - clntt
> c     compute d(cl)/d(alpha)
>          dclprv = clw(ntt) - clw(nttlast)
>          daprev = alpha - alphalast
>          if (daprev .ne. 0.) then
>            claprv = dclprv/daprev
>          else
>            claprv = dcldal
>          end if
>          dcldal0 = 0.
> c      if computed d(cl)/d(alpha) of opposite sign from
> c      input value, then convergence probably not good
> c      enough to use it... default to input value
>          if ((real(claprv))*(real(dcldal)) .lt. 0.) claprv = dcldal
> c
>          if (real(rms(ntt)).gt.0) then
>             rms0 = rms(nttlast)
>             if(real(rms0) .eq. 0.) rms0 = 1.0
>             alogres = cclog10(rms(ntt)/rms0)
>          else
>             alogres = 1.0
64d77
<          alpha     = alpha + dalpha
66,71c79,119
< c        output to cfl3d.alpha
<          if (ioalph .gt. 0) then
<             write(27,'(3x,i6,4e16.8)') ntt,log10(real(rms(ntt))),
<      .                                 real(clw(ntt)),
<      .                                 real(alpha)*real(radtodeg),
<      .                                 real(dalpha)*real(radtodeg)
---
>          if (real(cltarg).ne.0. .and.
>      .       abs(real(delcl)) .gt. real(cltol)) then
> c      check if residual has dropped enough
>          if(real(alogres).le.real(resupdt)) then
>            iupdt=1
>          else
>            iupdt=0
>          end if
> c      check if cycle number for update has been reached
> c      (this takes precedence over residual update method)
>          if(icycupdt .gt. 0) then
>            if(mod(ntt,icycupdt) .eq. 0) then
>              iupdt=1
>            else
>              iupdt=0
>            end if
>          end if
>          if (iupdt .eq. 1) then
> c      use computed d(cl)/d(alpha) in certain circumstances
> c      (this technique copied from OVERFLOW):
>              if (real(claprv) .ne. 0. .and. real(dcldal) .ne. 0.) then
>                 if (max(real(dcldal)/(real(claprv)),
>      .                  real(claprv)/(real(dcldal))) .le. 2.) then
>                   dcldal0 = claprv
>                 else
>                   dcldal0 = dcldal
>                 end if
>              end if
>              if (real(dcldal0) .eq. 0.) then
>                 dal = 0.
>              else
>                 dal = radtodeg*(cltarg-clntt)/dcldal0
>              end if
> c      update alpha (limited to be no greater than dalim)
>              alphalast = alpha
>              nttlast = ntt + 1
>              if (abs(real(dal)).gt.real(dalim)) then
>                 dal = dalim*dal/ccabs(dal)
>              end if
>              alpha = alpha + dal/radtodeg
>          end if
72a121
> c
77c126
<       call mpi_Bcast(dalpha,1,MY_MPI_REAL,myhost,mycomm,ierr)
---
> c
80a130,138
> c
>       if (myid.eq.myhost) then
>          if (ioalph .gt. 0) then
>             write(27,'(3x,i6,5e16.8)') ntt,log10(real(rms(ntt))),
>      .                                 real(clw(ntt)),
>      .                                 real(alpha)*real(radtodeg),
>      .                                 real(dcldal0),real(claprv)
>          end if
>       end if
Index: source/cfl3d/dist/plot3c.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/dist/plot3c.F,v
retrieving revision 1.5
retrieving revision 1.3
diff -r1.5 -r1.3
11c11
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
243c243
<       if (iflag.eq.1 .and. iblnk.gt.0) then
---
>       if (iflag.eq.1 .or. iblnk.gt.0) then
520c520
<  2041          format(3x,35hplot3d files to be read with /mgrid,
---
>  2041          format(3x,39hplot3d files to be read with /mgrid/for,
530c530
<  2042          format(3x,35hplot3d files to be read with /mgrid,
---
>  2042          format(3x,39hplot3d files to be read with /mgrid/for,
574c574
<          call MPI_Send (xg, nng, MY_MPI_REAL, myhost, mytag,
---
>          call MPI_Send (xg, nng, MPI_REAL, myhost, mytag,
577c577
<          call MPI_Recv (xg, nng, MY_MPI_REAL, nd_srce,
---
>          call MPI_Recv (xg, nng, MPI_REAL, nd_srce,
898c898
<                xw(jw,kw,iw,1) = real(ccabs(smin(j,k,i)))
---
>                xw(jw,kw,iw,1) = real(smin(j,k,i))
900c900
<                xw(jw,kw,iw,1) = imag(ccabs(smin(j,k,i)))/real(delh)
---
>                xw(jw,kw,iw,1) = imag(smin(j,k,i))/real(delh)
903c903
<             xw(jw,kw,iw,1) = real(ccabs(smin(j,k,i)))
---
>             xw(jw,kw,iw,1) = real(smin(j,k,i))
1246c1246
<          call MPI_Send (xw, nnq, MY_MPI_REAL, myhost, mytag,
---
>          call MPI_Send (xw, nnq, MPI_REAL, myhost, mytag,
1249c1249
<          call MPI_Recv (xw, nnq, MY_MPI_REAL, nd_srce,
---
>          call MPI_Recv (xw, nnq, MPI_REAL, nd_srce,
1512c1512
<          call MPI_Send (xw, nnq, MY_MPI_REAL, myhost, mytag,
---
>          call MPI_Send (xw, nnq, MPI_REAL, myhost, mytag,
1515c1515
<          call MPI_Recv (xw, nnq, MY_MPI_REAL, nd_srce,
---
>          call MPI_Recv (xw, nnq, MPI_REAL, nd_srce,
1524c1524
<          call MPI_Send (xg, nng, MY_MPI_REAL, myhost, mytag,
---
>          call MPI_Send (xg, nng, MPI_REAL, myhost, mytag,
1527c1527
<          call MPI_Recv (xg, nng, MY_MPI_REAL, nd_srce,
---
>          call MPI_Recv (xg, nng, MPI_REAL, nd_srce,
Index: source/cfl3d/dist/plot3d.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/dist/plot3d.F,v
retrieving revision 1.8
retrieving revision 1.7
diff -r1.8 -r1.7
12c12
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
160c160
<       if (iflag.eq.1 .and. iblnk.gt.0) then
---
>       if (iflag.eq.1 .or. iblnk.gt.0) then
782c782
<  2041          format(3x,35hplot3d files to be read with /mgrid,
---
>  2041          format(3x,39hplot3d files to be read with /mgrid/for,
792c792
<  2042          format(3x,35hplot3d files to be read with /mgrid,
---
>  2042          format(3x,39hplot3d files to be read with /mgrid/for,
Index: source/cfl3d/dist/plot3t.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/dist/plot3t.F,v
retrieving revision 1.8
retrieving revision 1.5
diff -r1.8 -r1.5
12c12
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
439c439
<          call MPI_Send (xg, nng, MY_MPI_REAL, myhost, mytag,
---
>          call MPI_Send (xg, nng, MPI_REAL, myhost, mytag,
442c442
<          call MPI_Recv (xg, nng, MY_MPI_REAL, nd_srce,
---
>          call MPI_Recv (xg, nng, MPI_REAL, nd_srce,
558,568d557
<       zk=0.
< c   currently unused printout to fort.50 (specifically for k-line)
< c     write(50,'(''variables="y","uuplus","wwplus","vvplus","uwplus",'',
< c    + ''"uvplus","vwplus","u_scaled","kplus","yplus","uplus",'',
< c    + ''"mu_turbulent/mu_lam_ref","eplus","cmu"'')')
< c     jloc=49
< c     iloc=1
< c     write(50,'(''#'',i5,''  CFL3D scaled turb results along k-line'',
< c    + '' at j,i='',2i4, '' x='',f16.6)') k2-k1+1,jloc,iloc,
< c    +  0.5*(x(jloc,1,iloc)+x(jloc+1,1,iloc))
< c     write(50,'(''# NOTE: eplus applies to k-eps models only'')')
606,614d594
<             if (ivmx .lt. 6) then
< c   The following gets an estimate for turb kinetic energy for
< c   models that do not compute it directly, in case it is needed
< c   (from AIAA 92-0439, where structure parameter taken as a1=0.5*(0.31))
<               zk=vist3d(j,k,i)/q(j,k,i,1)*sqrt(2.*xis)/(re*.31)
<             else
< c   Otherwise, use exact computed turb kinetic energy
<               zk=turre(j,k,i,2)
<             end if
617,619c597,599
<               t11 = -2.*vist3d(j,k,i)*(s11 - 0.33333*(s11+s22+s33))
<               t22 = -2.*vist3d(j,k,i)*(s22 - 0.33333*(s11+s22+s33))
<               t33 = -2.*vist3d(j,k,i)*(s33 - 0.33333*(s11+s22+s33))
---
>               t11 = -2.*vist3d(j,k,i)*s11
>               t22 = -2.*vist3d(j,k,i)*s22
>               t33 = -2.*vist3d(j,k,i)*s33
622,625c602,613
<               t11=t11+2.*q(j,k,i,1)*zk*re/3.
<               t22=t22+2.*q(j,k,i,1)*zk*re/3.
<               t33=t33+2.*q(j,k,i,1)*zk*re/3.
< c
---
>               if (ivmx .ge. 6) then
>                  t11=t11+2.*q(j,k,i,1)*turre(j,k,i,2)*re/3.
>                  t22=t22+2.*q(j,k,i,1)*turre(j,k,i,2)*re/3.
>                  t33=t33+2.*q(j,k,i,1)*turre(j,k,i,2)*re/3.
>               else
> c   less-than-two equation models use approximation for 2/3*k 
> c   (from AIAA 92-0439, where structure parameter taken as a1=0.5*(0.31))
> c   approx for k/aref^2 is:  vist3d(j,k,i)/q(j,k,i,1)*sqrt(2.*xis)/(re*.31)
>                t11=t11+2./3.*vist3d(j,k,i)/q(j,k,i,1)*sqrt(2.*xis)/.31
>                t22=t22+2./3.*vist3d(j,k,i)/q(j,k,i,1)*sqrt(2.*xis)/.31
>                t33=t33+2./3.*vist3d(j,k,i)/q(j,k,i,1)*sqrt(2.*xis)/.31
>               end if
844,883d831
< c
< c   currently unused printout to fort.50 (specifically for k-line)
< c     if (j .eq. jloc .and. i .eq. iloc) then
< c       yget=ccabs(smin(j,k,i))
< c       qset=sqrt(q(j,1,i,2)**2+q(j,1,i,3)**2+q(j,1,i,4)**2)
< c       tt=gamma*q(j,1,i,5)/q(j,1,i,1)
< c       c2b=198.6/tinf
< c       c2bp=c2b+1.0
< c       fnuw=c2bp*tt*sqrt(tt)/(c2b+tt)
< c       utau=sqrt(fnuw*qset/(ccabs(smin(j,1,i))*
< c    +     q(j,1,i,1)*re))
< c       ypl=re*q(j,1,i,1)*utau*ccabs(smin(j,k,i))/fnuw
< c       upl=sqrt(q(j,k,i,2)**2+q(j,k,i,3)**2+q(j,k,i,4)**2)
< c    +        /utau
< c       zkplus=zk/(utau**2)
< c       uuplus=abs(t11)/(re*utau*utau)
< c       vvplus=abs(t22)/(re*utau*utau)
< c       wwplus=abs(t33)/(re*utau*utau)
< c       uwplus=-t13/(re*utau*utau)
< c       vwplus=-t23/(re*utau*utau)
< c       uvplus=-t12/(re*utau*utau)
< c       uloc=sqrt(q(j,k,i,2)**2+q(j,k,i,3)**2+q(j,k,i,4)**2)/xmach
< c       ttx=gamma*q(j,k,i,5)/q(j,k,i,1)
< c       fnu=c2bp*ttx*sqrt(ttx)/(c2b+ttx)
< c       if (ivmx .eq. 9 .or. ivmx .eq. 10 .or. ivmx .eq. 11 .or.
< c    +      ivmx .eq. 13) then
< c       eplus=turre(j,k,i,1)*fnu/(q(j,k,i,1)*utau*utau*utau*utau)
< c       else
< c       eplus=0.
< c       end if
< c       if(ivmx .eq. 8 .or. ivmx .eq. 9 .or. ivmx .ge. 13) then
< c         cmuxx=-cmuv(j,k,i)
< c       else
< c         cmuxx=.09
< c       end if
< c       write(50,'(14e15.5)') yget,uuplus,wwplus,vvplus,uwplus,
< c    +   uvplus,vwplus,uloc,zkplus,ypl,upl,vist3d(j,k,i),eplus,
< c    +   cmuxx
< c     end if
< c
1083c1031
<          call MPI_Send (xw, nnq, MY_MPI_REAL, myhost, mytag,
---
>          call MPI_Send (xw, nnq, MPI_REAL, myhost, mytag,
1086c1034
<          call MPI_Recv (xw, nnq, MY_MPI_REAL, nd_srce,
---
>          call MPI_Recv (xw, nnq, MPI_REAL, nd_srce,
Index: source/cfl3d/dist/pointers.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/dist/pointers.F,v
retrieving revision 1.7
retrieving revision 1.6
diff -r1.7 -r1.6
12c12
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
609c609
< c........bcdataj(npts,mpts,2,12)
---
> c........bcdataj(npts,mpts,2,7)
622c622
<      .       (jbcinfo(nbl,nseg,5,1)-jbcinfo(nbl,nseg,4,1))*12*2
---
>      .       (jbcinfo(nbl,nseg,5,1)-jbcinfo(nbl,nseg,4,1))*7*2
628c628
<      .       (jbcinfo(nbl,nseg,5,2)-jbcinfo(nbl,nseg,4,2))*12*2
---
>      .       (jbcinfo(nbl,nseg,5,2)-jbcinfo(nbl,nseg,4,2))*7*2
633c633
<             ns = jbcmax*12*2
---
>             ns = jbcmax*7*2
636c636
< c........bcdatak(npts,mpts,2,12)
---
> c........bcdatak(npts,mpts,2,7)
649c649
<      .       (kbcinfo(nbl,nseg,5,1)-kbcinfo(nbl,nseg,4,1))*12*2
---
>      .       (kbcinfo(nbl,nseg,5,1)-kbcinfo(nbl,nseg,4,1))*7*2
655c655
<      .       (kbcinfo(nbl,nseg,5,2)-kbcinfo(nbl,nseg,4,2))*12*2
---
>      .       (kbcinfo(nbl,nseg,5,2)-kbcinfo(nbl,nseg,4,2))*7*2
660c660
<             ns = kbcmax*12*2
---
>             ns = kbcmax*7*2
663c663
< c........bcdatai(npts,mpts,2,12)
---
> c........bcdatai(npts,mpts,2,7)
676c676
<      .       (ibcinfo(nbl,nseg,5,1)-ibcinfo(nbl,nseg,4,1))*12*2
---
>      .       (ibcinfo(nbl,nseg,5,1)-ibcinfo(nbl,nseg,4,1))*7*2
682c682
<      .       (ibcinfo(nbl,nseg,5,2)-ibcinfo(nbl,nseg,4,2))*12*2
---
>      .       (ibcinfo(nbl,nseg,5,2)-ibcinfo(nbl,nseg,4,2))*7*2
687c687
<             ns = ibcmax*12*2
---
>             ns = ibcmax*7*2
Index: source/cfl3d/dist/pre_bc.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/dist/pre_bc.F,v
retrieving revision 1.3
retrieving revision 1.2
diff -r1.3 -r1.2
13c13
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
48,49c48,49
<       dimension bcvali(maxbl,maxseg,12,2),bcvalj(maxbl,maxseg,12,2),
<      .          bcvalk(maxbl,maxseg,12,2),nbci0(maxbl),nbcidim(maxbl),
---
>       dimension bcvali(maxbl,maxseg,7,2),bcvalj(maxbl,maxseg,7,2),
>      .          bcvalk(maxbl,maxseg,7,2),nbci0(maxbl),nbcidim(maxbl),
Index: source/cfl3d/dist/prntcp.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/dist/prntcp.F,v
retrieving revision 1.3
retrieving revision 1.2
diff -r1.3 -r1.2
6c6
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
73,74c73
<      .       abs(ibcinfo(nbl,ns,1,1)).eq.2004 .or.
<      .       abs(ibcinfo(nbl,ns,1,1)).eq.2014) then
---
>      .       abs(ibcinfo(nbl,ns,1,1)).eq.2004) then
140,141c139
<      .       abs(ibcinfo(nbl,ns,1,2)).eq.2004 .or.
<      .       abs(ibcinfo(nbl,ns,1,2)).eq.2014) then
---
>      .       abs(ibcinfo(nbl,ns,1,2)).eq.2004) then
207,208c205
<      .       abs(jbcinfo(nbl,ns,1,1)).eq.2004 .or.
<      .       abs(jbcinfo(nbl,ns,1,1)).eq.2014) then
---
>      .       abs(jbcinfo(nbl,ns,1,1)).eq.2004) then
274,275c271
<      .       abs(jbcinfo(nbl,ns,1,2)).eq.2004 .or.
<      .       abs(jbcinfo(nbl,ns,1,2)).eq.2014) then
---
>      .       abs(jbcinfo(nbl,ns,1,2)).eq.2004) then
341,342c337
<      .       abs(kbcinfo(nbl,ns,1,1)).eq.2004 .or.
<      .       abs(kbcinfo(nbl,ns,1,1)).eq.2014) then
---
>      .       abs(kbcinfo(nbl,ns,1,1)).eq.2004) then
408,409c403
<      .       abs(kbcinfo(nbl,ns,1,2)).eq.2004 .or.
<      .       abs(kbcinfo(nbl,ns,1,2)).eq.2014) then
---
>      .       abs(kbcinfo(nbl,ns,1,2)).eq.2004) then
Index: source/cfl3d/dist/rrest.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/dist/rrest.F,v
retrieving revision 1.9
retrieving revision 1.8
diff -r1.9 -r1.8
10c10
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
79c79,80
<       common /alphait/ ialphit,cltarg,rlxalph,dalim,dalpha,icycupdt
---
>       common /alphait/ cltarg,resupdt,cltol,dalim,dcldal,alphalast,
>      .                 ialphit,nttlast,icycupdt
Index: source/cfl3d/dist/setslave.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/dist/setslave.F,v
retrieving revision 1.4
retrieving revision 1.3
diff -r1.4 -r1.3
10c10
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
177d176
<      .                abs(ibctyp).ne.2014 .and.
204d202
<      .                abs(ibctyp).ne.2014 .and.
233d230
<      .                   abs(jbctyp).ne.2014 .and.
260d256
<      .                   abs(jbctyp).ne.2014 .and.
287d282
<      .                   abs(kbctyp).ne.2014 .and.
314d308
<      .                   abs(kbctyp).ne.2014 .and.
Index: source/cfl3d/dist/setup.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/dist/setup.F,v
retrieving revision 1.17
retrieving revision 1.13
diff -r1.17 -r1.13
31c31
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
73c73
<      .          lwdat(maxbl,maxseg,6),bcdat(12),intpts(4),lw2(43,maxbl)
---
>      .          lwdat(maxbl,maxseg,6),bcdat(7),intpts(4),lw2(43,maxbl)
89,90c89,90
<       dimension bcvali(maxbl,maxseg,12,2),bcvalj(maxbl,maxseg,12,2),
<      .          bcvalk(maxbl,maxseg,12,2),nbci0(maxbl),nbcidim(maxbl),
---
>       dimension bcvali(maxbl,maxseg,7,2),bcvalj(maxbl,maxseg,7,2),
>      .          bcvalk(maxbl,maxseg,7,2),nbci0(maxbl),nbcidim(maxbl),
169d168
<       common /gridtrans/ roll_angle
372,388d370
< c
<       if (myid.eq.myhost) then
<          if (igrid .eq. 1) then
<             write(11,*)
<             write(11,'(''input roll angle = '',f9.4,'' degrees'')') 
<      .            real(roll_angle)
<             roll_angle = roll_angle*atan(1.0)/45.0   ! radians
<          end if
<          if (real(ccabs(roll_angle)) .gt. 0.) then
<             nbl = nblg(igrid)
<             call grdmove(nbl,jdim,kdim,idim,w(lx),w(ly),w(lz),
<      .                   xcentrot,ycentrot,zcentrot,
<      .                   xcentrot,ycentrot,zcentrot,
<      .                   roll_angle,0.0,0.0)
<          end if
<       end if
< c
823c805
<          do 1425 l=1,12
---
>          do 1425 l=1,7
853c835
<          do 1435 l=1,12
---
>          do 1435 l=1,7
883c865
<          do 1445 l=1,12
---
>          do 1445 l=1,7
913c895
<          do 1455 l=1,12
---
>          do 1455 l=1,7
943c925
<          do 1465 l=1,12
---
>          do 1465 l=1,7
973c955
<          do 1475 l=1,12
---
>          do 1475 l=1,7
2361,2362c2343
<               if (abs(ibcinfo(nbl,iset,1,1)) .eq. 2004 .or.
<      .            abs(ibcinfo(nbl,iset,1,1)) .eq. 2014) goto 5860
---
>               if (abs(ibcinfo(nbl,iset,1,1)) .eq. 2004) goto 5860
2365,2366c2346
<               if (abs(ibcinfo(nbl,iset,1,2)) .eq. 2004 .or.
<      .            abs(ibcinfo(nbl,iset,1,2)) .eq. 2014) goto 5860
---
>               if (abs(ibcinfo(nbl,iset,1,2)) .eq. 2004) goto 5860
2369,2370c2349
<               if (abs(jbcinfo(nbl,iset,1,1)) .eq. 2004 .or.
<      .            abs(jbcinfo(nbl,iset,1,1)) .eq. 2014) goto 5860
---
>               if (abs(jbcinfo(nbl,iset,1,1)) .eq. 2004) goto 5860
2373,2374c2352
<               if (abs(jbcinfo(nbl,iset,1,2)) .eq. 2004 .or.
<      .            abs(jbcinfo(nbl,iset,1,2)) .eq. 2014) goto 5860
---
>               if (abs(jbcinfo(nbl,iset,1,2)) .eq. 2004) goto 5860
2377,2378c2355
<               if (abs(kbcinfo(nbl,iset,1,1)) .eq. 2004 .or.
<      .            abs(kbcinfo(nbl,iset,1,1)) .eq. 2014) goto 5860
---
>               if (abs(kbcinfo(nbl,iset,1,1)) .eq. 2004) goto 5860
2381,2382c2358
<               if (abs(kbcinfo(nbl,iset,1,2)) .eq. 2004 .or.
<      .            abs(kbcinfo(nbl,iset,1,2)) .eq. 2014) goto 5860
---
>               if (abs(kbcinfo(nbl,iset,1,2)) .eq. 2004) goto 5860
2398c2374
<                   call cntsurf(ns2004,maxbl,maxgr,maxseg,ngrid,nblg,
---
>                   call cntsurf(nsurf,maxbl,maxgr,maxseg,ngrid,nblg,
2401,2404d2376
<                   call cntsurf(ns2014,maxbl,maxgr,maxseg,ngrid,nblg,
<      .                         nbci0,nbcj0,nbck0,nbcidim,nbcjdim,
<      .                         nbckdim,ibcinfo,jbcinfo,kbcinfo,2014)
<                   nsurf=ns2004+ns2014
2443c2415
<                nworkxs  = 4*nsurf
---
>                nworkxs  = 3*nsurf
2555,2658d2526
<       end if
< c   make smin negative in regions where want laminar flow
< c   (field equation models only)
<       if (ivmx .ge. 4) then
<       do n=1,ngrid
<         do nbl=nblg(n),nblg(n)+ncgg(n)
<           if (mblk2nd(nbl).eq.myid) then
<             call lead(nbl,lw,lw2,maxbl)
< c     J-dir:
<             do nseg=1,nbcj0(nbl)
<               if(abs(jbcinfo(nbl,nseg,1,1)).eq.2014) then
<                 ibeg=jbcinfo(nbl,nseg,2,1)
<                 iend=jbcinfo(nbl,nseg,3,1)
<                 jbeg=1
<                 jend=1
<                 kbeg=jbcinfo(nbl,nseg,4,1)
<                 kend=jbcinfo(nbl,nseg,5,1)
<                 mdim=kend-kbeg
<                 ndim=iend-ibeg
<                 ldata=lwdat(nbl,nseg,3)
<                 call lamfix(jdim,kdim,idim,w(lsnk0),mdim,ndim,w(ldata),
<      .                 ibeg,iend,jbeg,jend,kbeg,kend,3)
<               end if
<             enddo
<             do nseg=1,nbcjdim(nbl)
<               if(abs(jbcinfo(nbl,nseg,1,2)).eq.2014) then
<                 ibeg=jbcinfo(nbl,nseg,2,2)
<                 iend=jbcinfo(nbl,nseg,3,2)
<                 jbeg=jdim
<                 jend=jdim
<                 kbeg=jbcinfo(nbl,nseg,4,2)
<                 kend=jbcinfo(nbl,nseg,5,2)
<                 mdim=kend-kbeg
<                 ndim=iend-ibeg
<                 ldata=lwdat(nbl,nseg,4)
<                 call lamfix(jdim,kdim,idim,w(lsnk0),mdim,ndim,w(ldata),
<      .                 ibeg,iend,jbeg,jend,kbeg,kend,4)
<               end if
<             enddo
< c     K-dir:
<             do nseg=1,nbck0(nbl)
<               if(abs(kbcinfo(nbl,nseg,1,1)).eq.2014) then
<                 ibeg=kbcinfo(nbl,nseg,2,1)
<                 iend=kbcinfo(nbl,nseg,3,1)
<                 jbeg=kbcinfo(nbl,nseg,4,1)
<                 jend=kbcinfo(nbl,nseg,5,1)
<                 kbeg=1
<                 kend=1
<                 mdim=jend-jbeg
<                 ndim=iend-ibeg
<                 ldata=lwdat(nbl,nseg,5)
<                 call lamfix(jdim,kdim,idim,w(lsnk0),mdim,ndim,w(ldata),
<      .                 ibeg,iend,jbeg,jend,kbeg,kend,5)
<               end if
<             enddo
<             do nseg=1,nbckdim(nbl)
<               if(abs(kbcinfo(nbl,nseg,1,2)).eq.2014) then
<                 ibeg=kbcinfo(nbl,nseg,2,2)
<                 iend=kbcinfo(nbl,nseg,3,2)
<                 jbeg=kbcinfo(nbl,nseg,4,2)
<                 jend=kbcinfo(nbl,nseg,5,2)
<                 kbeg=kdim
<                 kend=kdim
<                 mdim=jend-jbeg
<                 ndim=iend-ibeg
<                 ldata=lwdat(nbl,nseg,6)
<                 call lamfix(jdim,kdim,idim,w(lsnk0),mdim,ndim,w(ldata),
<      .                 ibeg,iend,jbeg,jend,kbeg,kend,6)
<               end if
<             enddo
< c     I-dir:
<             do nseg=1,nbci0(nbl)
<               if(abs(ibcinfo(nbl,nseg,1,1)).eq.2014) then
<                 ibeg=1
<                 iend=1
<                 jbeg=ibcinfo(nbl,nseg,2,1)
<                 jend=ibcinfo(nbl,nseg,3,1)
<                 kbeg=ibcinfo(nbl,nseg,4,1)
<                 kend=ibcinfo(nbl,nseg,5,1)
<                 mdim=jend-jbeg
<                 ndim=kend-kbeg
<                 ldata=lwdat(nbl,nseg,1)
<                 call lamfix(jdim,kdim,idim,w(lsnk0),mdim,ndim,w(ldata),
<      .                 ibeg,iend,jbeg,jend,kbeg,kend,1)
<               end if
<             enddo
<             do nseg=1,nbcidim(nbl)
<               if(abs(ibcinfo(nbl,nseg,1,2)).eq.2014) then
<                 ibeg=idim
<                 iend=idim
<                 jbeg=ibcinfo(nbl,nseg,2,2)
<                 jend=ibcinfo(nbl,nseg,3,2)
<                 kbeg=ibcinfo(nbl,nseg,4,2)
<                 kend=ibcinfo(nbl,nseg,5,2)
<                 mdim=jend-jbeg
<                 ndim=kend-kbeg
<                 ldata=lwdat(nbl,nseg,2)
<                 call lamfix(jdim,kdim,idim,w(lsnk0),mdim,ndim,w(ldata),
<      .                 ibeg,iend,jbeg,jend,kbeg,kend,2)
<               end if
<             enddo
<           endif
<         enddo
<       enddo
Index: source/cfl3d/dist/sizer.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/dist/sizer.F,v
retrieving revision 1.12
retrieving revision 1.9
diff -r1.12 -r1.9
12c12
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
292,297c292,297
<       allocate( bcvali(maxbl0,maxseg0,12,2), stat=stats )
<       call umalloc(maxbl0*maxseg0*12*2,0,'bcvali',memuse,stats)
<       allocate( bcvalj(maxbl0,maxseg0,12,2), stat=stats )
<       call umalloc(maxbl0*maxseg0*12*2,0,'bcvalj',memuse,stats)
<       allocate( bcvalk(maxbl0,maxseg0,12,2), stat=stats )
<       call umalloc(maxbl0*maxseg0*12*2,0,'bcvalk',memuse,stats)
---
>       allocate( bcvali(maxbl0,maxseg0,7,2), stat=stats )
>       call umalloc(maxbl0*maxseg0*7*2,0,'bcvali',memuse,stats)
>       allocate( bcvalj(maxbl0,maxseg0,7,2), stat=stats )
>       call umalloc(maxbl0*maxseg0*7*2,0,'bcvalj',memuse,stats)
>       allocate( bcvalk(maxbl0,maxseg0,7,2), stat=stats )
>       call umalloc(maxbl0*maxseg0*7*2,0,'bcvalk',memuse,stats)
1278c1278
<          call cntsurf(ns2004,maxbl0,maxgr0,maxseg0,ngrid,nblg,
---
>          call cntsurf(nsurf,maxbl0,maxgr0,maxseg0,ngrid,nblg,
1281,1284d1280
<          call cntsurf(ns2014,maxbl0,maxgr0,maxseg0,ngrid,nblg,
<      .                nbci0,nbcj0,nbck0,nbcidim,nbcjdim,
<      .                nbckdim,ibcinfo,jbcinfo,kbcinfo,2014)
<          nsurf=ns2004+ns2014
1327c1323
<          nworkxs  = 4*nsurf
---
>          nworkxs  = 3*nsurf
2262,2264d2257
<          call cntsurf(ns2014,maxbl0,maxgr0,maxseg0,ngrid,nblg,
<      .                nbci0,nbcj0,nbck0,nbcidim,nbcjdim,
<      .                nbckdim,ibcinfo,jbcinfo,kbcinfo,2014)
2271c2264
<          nsurf = ns2004 + ns2014 + ns1005 + ns1006
---
>          nsurf = ns2004 + ns1005 + ns1006
2374d2366
<      .                abs(ibctyp).ne.2014 .or.
2393d2384
<      .                abs(ibctyp).ne.2014 .or.
2413d2403
<      .                   abs(jbctyp).ne.2014 .or.
2432d2421
<      .                   abs(jbctyp).ne.2014 .or.
2451d2439
<      .                   abs(kbctyp).ne.2014 .or.
2470d2457
<      .                   abs(kbctyp).ne.2014 .or.
3084,3085c3071
<         if (abs(jbcinfo(nbl,mseg,1,1)) .eq. 2004 .or.
<      .      abs(jbcinfo(nbl,mseg,1,1)) .eq. 2014) ibcjmin=1 
---
>         if (abs(jbcinfo(nbl,mseg,1,1)) .eq. 2004) ibcjmin=1 
3088,3089c3074
<         if (abs(jbcinfo(nbl,mseg,1,2)) .eq. 2004 .or.
<      .      abs(jbcinfo(nbl,mseg,1,2)) .eq. 2014) ibcjmax=1 
---
>         if (abs(jbcinfo(nbl,mseg,1,2)) .eq. 2004) ibcjmax=1 
3095,3096c3080
<         if (abs(kbcinfo(nbl,mseg,1,1)) .eq. 2004 .or.
<      .      abs(kbcinfo(nbl,mseg,1,1)) .eq. 2014) ibckmin=1
---
>         if (abs(kbcinfo(nbl,mseg,1,1)) .eq. 2004) ibckmin=1
3099,3100c3083
<         if (abs(kbcinfo(nbl,mseg,1,2)) .eq. 2004 .or.
<      .      abs(kbcinfo(nbl,mseg,1,2)) .eq. 2014) ibckmax=1
---
>         if (abs(kbcinfo(nbl,mseg,1,2)) .eq. 2004) ibckmax=1
3106,3107c3089
<         if (abs(ibcinfo(nbl,mseg,1,1)) .eq. 2004 .or.
<      .      abs(ibcinfo(nbl,mseg,1,1)) .eq. 2014) ibcimin=1
---
>         if (abs(ibcinfo(nbl,mseg,1,1)) .eq. 2004) ibcimin=1
3110,3111c3092
<         if (abs(ibcinfo(nbl,mseg,1,2)) .eq. 2004 .or.
<      .      abs(ibcinfo(nbl,mseg,1,2)) .eq. 2014) ibcimax=1
---
>         if (abs(ibcinfo(nbl,mseg,1,2)) .eq. 2004) ibcimax=1
Index: source/cfl3d/dist/trnsfr_vals.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/dist/trnsfr_vals.F,v
retrieving revision 1.14
retrieving revision 1.11
diff -r1.14 -r1.11
29c29
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
118,119c118,119
<       dimension bcvali(maxbl,maxseg,12,2),
<      .          bcvalj(maxbl,maxseg,12,2),bcvalk(maxbl,maxseg,12,2),
---
>       dimension bcvali(maxbl,maxseg,7,2),
>      .          bcvalj(maxbl,maxseg,7,2),bcvalk(maxbl,maxseg,7,2),
136c136,137
<       common /alphait/ ialphit,cltarg,rlxalph,dalim,dalpha,icycupdt
---
>       common /alphait/ cltarg,resupdt,cltol,dalim,dcldal,alphalast,
>      .                 ialphit,nttlast,icycupdt
182d182
<       common /gridtrans/ roll_angle
336c336
<                do mm=1,12
---
>                do mm=1,7
340,341c340,341
<                      work(iii+maxbl*maxseg*24) = bcvalj(nbl,nseg,mm,ll)
<                      work(iii+maxbl*maxseg*48) = bcvalk(nbl,nseg,mm,ll)
---
>                      work(iii+maxbl*maxseg*14) = bcvalj(nbl,nseg,mm,ll)
>                      work(iii+maxbl*maxseg*28) = bcvalk(nbl,nseg,mm,ll)
346c346
<          nlast = nlast + maxbl*maxseg*72
---
>          nlast = nlast + maxbl*maxseg*42
366c366
<          work(nlast+17) = rlxalph
---
>          work(nlast+17) = resupdt
387,405c387,405
<          work(nlast+38) = xcentrot
<          work(nlast+39) = ycentrot
<          work(nlast+40) = zcentrot
<          work(nlast+41) = xrotrate
<          work(nlast+42) = yrotrate
<          work(nlast+43) = zrotrate
<          work(nlast+44) = noninflag
<          work(nlast+45) = xrotrate_img
<          work(nlast+46) = yrotrate_img
<          work(nlast+47) = zrotrate_img
<          work(nlast+48) = itime2read
<          work(nlast+49) = itaturb
<          work(nlast+50) = ides
<          work(nlast+51) = cdes
<          work(nlast+52) = iteravg
<          work(nlast+53) = tur10
<          work(nlast+54) = tur20
<          work(nlast+55) = tur1cut
<          work(nlast+56) = roll_angle
---
>          work(nlast+38) = dcldal
>          work(nlast+39) = xcentrot
>          work(nlast+40) = ycentrot
>          work(nlast+41) = zcentrot
>          work(nlast+42) = xrotrate
>          work(nlast+43) = yrotrate
>          work(nlast+44) = zrotrate
>          work(nlast+45) = noninflag
>          work(nlast+46) = xrotrate_img
>          work(nlast+47) = yrotrate_img
>          work(nlast+48) = zrotrate_img
>          work(nlast+49) = itime2read
>          work(nlast+50) = itaturb
>          work(nlast+51) = ides
>          work(nlast+52) = cdes
>          work(nlast+53) = iteravg
>          work(nlast+54) = tur10
>          work(nlast+55) = tur20
>          work(nlast+56) = tur1cut
409c409
<       nvals = 30*maxbl + 72*maxbl*maxseg   + 52   + 11*nmds*maxaes
---
>       nvals = 30*maxbl + 42*maxbl*maxseg   + 52   + 11*nmds*maxaes
569c569
<                do mm=1,12
---
>                do mm=1,7
573,574c573,574
<                      bcvalj(nbl,nseg,mm,ll) = work(iii+maxbl*maxseg*24)
<                      bcvalk(nbl,nseg,mm,ll) = work(iii+maxbl*maxseg*48)
---
>                      bcvalj(nbl,nseg,mm,ll) = work(iii+maxbl*maxseg*14)
>                      bcvalk(nbl,nseg,mm,ll) = work(iii+maxbl*maxseg*28)
579c579
<          nlast = nlast + maxbl*maxseg*72
---
>          nlast = nlast + maxbl*maxseg*42
599c599
<          rlxalph   = work(nlast+17)
---
>          resupdt   = work(nlast+17)
620,638c620,638
<          xcentrot  = work(nlast+38)
<          ycentrot  = work(nlast+39)
<          zcentrot  = work(nlast+40)
<          xrotrate  = work(nlast+41)
<          yrotrate  = work(nlast+42)
<          zrotrate  = work(nlast+43)
<          noninflag = int(work(nlast+44))
<          xrotrate_img = work(nlast+45)
<          yrotrate_img = work(nlast+46)
<          zrotrate_img = work(nlast+47)
<          itime2read=int(work(nlast+48))
<          itaturb   =int(work(nlast+49))
<          ides      = int(work(nlast+50))
<          cdes      = work(nlast+51)
<          iteravg   = int(work(nlast+52))
<          tur10     = work(nlast+53)
<          tur20     = work(nlast+54)
<          tur1cut   = work(nlast+55)
<          roll_angle= work(nlast+56)
---
>          dcldal    = work(nlast+38)
>          xcentrot  = work(nlast+39)
>          ycentrot  = work(nlast+40)
>          zcentrot  = work(nlast+41)
>          xrotrate  = work(nlast+42)
>          yrotrate  = work(nlast+43)
>          zrotrate  = work(nlast+44)
>          noninflag = int(work(nlast+45))
>          xrotrate_img = work(nlast+46)
>          yrotrate_img = work(nlast+47)
>          zrotrate_img = work(nlast+48)
>          itime2read=int(work(nlast+49))
>          itaturb   =int(work(nlast+50))
>          ides      = int(work(nlast+51))
>          cdes      = work(nlast+52)
>          iteravg   = int(work(nlast+53))
>          tur10     = work(nlast+54)
>          tur20     = work(nlast+55)
>          tur1cut   = work(nlast+56)
Index: source/cfl3d/dist/updatedg.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/dist/updatedg.F,v
retrieving revision 1.5
retrieving revision 1.4
diff -r1.5 -r1.4
16c16
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
459,460c459
<                nval    = 3*nsegdfrm(nbl)
<                call MPI_Irecv (wk(ist),nval,MY_MPI_REAL,
---
>                call MPI_Irecv (wk(ist),3,MY_MPI_REAL,
Index: source/cfl3d/dist/wrest.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/dist/wrest.F,v
retrieving revision 1.11
retrieving revision 1.10
diff -r1.11 -r1.10
11c11
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
584,590d583
<          do i=1,idim1
<          do j=1,jdim1
<          do k=1,kdim1
<            smin(j,k,i)=ccabs(smin(j,k,i))
<          enddo
<          enddo
<          enddo
Index: source/cfl3d/dist/yplusout.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/dist/yplusout.F,v
retrieving revision 1.9
retrieving revision 1.8
diff -r1.9 -r1.8
10c10
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
141,142c141
<             if(abs(ibcinfo(nbl,ns,1,1)) .eq. 2004 .or.
<      .         abs(ibcinfo(nbl,ns,1,1)) .eq. 2014) ivv2 = ivv2 + 1
---
>             if(abs(ibcinfo(nbl,ns,1,1)) .eq. 2004) ivv2 = ivv2 + 1
145,146c144
<             if(abs(ibcinfo(nbl,ns,1,2)) .eq. 2004 .or.
<      .         abs(ibcinfo(nbl,ns,1,2)) .eq. 2014) ivv2 = ivv2 + 1
---
>             if(abs(ibcinfo(nbl,ns,1,2)) .eq. 2004) ivv2 = ivv2 + 1
149,150c147
<             if(abs(jbcinfo(nbl,ns,1,1)) .eq. 2004 .or.
<      .         abs(jbcinfo(nbl,ns,1,1)) .eq. 2014) ivv2 = ivv2 + 1
---
>             if(abs(jbcinfo(nbl,ns,1,1)) .eq. 2004) ivv2 = ivv2 + 1
153,154c150
<             if(abs(jbcinfo(nbl,ns,1,2)) .eq. 2004 .or.
<      .         abs(jbcinfo(nbl,ns,1,2)) .eq. 2014) ivv2 = ivv2 + 1
---
>             if(abs(jbcinfo(nbl,ns,1,2)) .eq. 2004) ivv2 = ivv2 + 1
157,158c153
<             if(abs(kbcinfo(nbl,ns,1,1)) .eq. 2004 .or.
<      .         abs(kbcinfo(nbl,ns,1,1)) .eq. 2014) ivv2 = ivv2 + 1
---
>             if(abs(kbcinfo(nbl,ns,1,1)) .eq. 2004) ivv2 = ivv2 + 1
161,162c156
<             if(abs(kbcinfo(nbl,ns,1,2)) .eq. 2004 .or.
<      .         abs(kbcinfo(nbl,ns,1,2)) .eq. 2014) ivv2 = ivv2 + 1
---
>             if(abs(kbcinfo(nbl,ns,1,2)) .eq. 2004) ivv2 = ivv2 + 1
182,183c176
<                if (abs(kbcinfo(nbl,nseg,1,m)) .eq. 2004 .or.
<      .             abs(kbcinfo(nbl,nseg,1,m)) .eq. 2014) ktest = 1
---
>                if (abs(kbcinfo(nbl,nseg,1,m)) .eq. 2004) ktest = 1
203,204c196
<                if (abs(jbcinfo(nbl,nseg,1,m)) .eq. 2004 .or.
<      .             abs(jbcinfo(nbl,nseg,1,m)) .eq. 2014) jtest = 1
---
>                if (abs(jbcinfo(nbl,nseg,1,m)) .eq. 2004) jtest = 1
224,225c216
<                if (abs(ibcinfo(nbl,nseg,1,m)) .eq. 2004 .or.
<      .             abs(ibcinfo(nbl,nseg,1,m)) .eq. 2014) itest = 1
---
>                if (abs(ibcinfo(nbl,nseg,1,m)) .eq. 2004) itest = 1
281,282c272
<          if(abs(ibcinfo(nbl,ns,1,1)) .eq. 2004 .or.
<      .      abs(ibcinfo(nbl,ns,1,1)) .eq. 2014) ivv2 = ivv2 + 1
---
>          if(abs(ibcinfo(nbl,ns,1,1)) .eq. 2004) ivv2 = ivv2 + 1
285,286c275
<          if(abs(ibcinfo(nbl,ns,1,2)) .eq. 2004 .or.
<      .      abs(ibcinfo(nbl,ns,1,2)) .eq. 2014) ivv2 = ivv2 + 1
---
>          if(abs(ibcinfo(nbl,ns,1,2)) .eq. 2004) ivv2 = ivv2 + 1
289,290c278
<          if(abs(jbcinfo(nbl,ns,1,1)) .eq. 2004 .or.
<      .      abs(jbcinfo(nbl,ns,1,1)) .eq. 2014) ivv2 = ivv2 + 1
---
>          if(abs(jbcinfo(nbl,ns,1,1)) .eq. 2004) ivv2 = ivv2 + 1
293,294c281
<          if(abs(jbcinfo(nbl,ns,1,2)) .eq. 2004 .or.
<      .      abs(jbcinfo(nbl,ns,1,2)) .eq. 2014) ivv2 = ivv2 + 1
---
>          if(abs(jbcinfo(nbl,ns,1,2)) .eq. 2004) ivv2 = ivv2 + 1
297,298c284
<          if(abs(kbcinfo(nbl,ns,1,1)) .eq. 2004 .or.
<      .      abs(kbcinfo(nbl,ns,1,1)) .eq. 2014) ivv2 = ivv2 + 1
---
>          if(abs(kbcinfo(nbl,ns,1,1)) .eq. 2004) ivv2 = ivv2 + 1
301,302c287
<          if(abs(kbcinfo(nbl,ns,1,2)) .eq. 2004 .or.
<      .      abs(kbcinfo(nbl,ns,1,2)) .eq. 2014) ivv2 = ivv2 + 1
---
>          if(abs(kbcinfo(nbl,ns,1,2)) .eq. 2004) ivv2 = ivv2 + 1
Index: source/cfl3d/libs/aesurf.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/aesurf.F,v
retrieving revision 1.5
retrieving revision 1.4
diff -r1.5 -r1.4
6c6
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
28d27
<       dimension nsrfflg(kdim*idim*4+jdim*idim*4+jdim*kdim*4,4)
40,110d38
< 
<          is1 = 0
<          do is=1,nsegdfrm(nbl)
<          if(jcsi(nbl,is) .eq. jcsf(nbl,is)) then
<            kinc = kcsf(nbl,is)-kcsi(nbl,is)
<            do k = kcsi(nbl,is),kcsf(nbl,is),kinc
<              do i = icsi(nbl,is),icsf(nbl,is)
<                is1            = is1 + 1
<                nsrfflg(is1,1) = i
<                nsrfflg(is1,2) = jcsi(nbl,is)
<                nsrfflg(is1,3) = k
<                nsrfflg(is1,4) = 0
<              enddo
<            enddo
<            iinc = icsf(nbl,is)-icsi(nbl,is)
<            do i = icsi(nbl,is),icsf(nbl,is),iinc
<              do k = kcsi(nbl,is),kcsf(nbl,is)
<                is1            = is1 + 1
<                nsrfflg(is1,1) = i
<                nsrfflg(is1,2) = jcsi(nbl,is)
<                nsrfflg(is1,3) = k
<                nsrfflg(is1,4) = 0
<              enddo
<            enddo
<          else
<      .   if(icsi(nbl,is) .eq. icsf(nbl,is)) then
<            kinc = kcsf(nbl,is)-kcsi(nbl,is)
<            do k = kcsi(nbl,is),kcsf(nbl,is),kinc
<              do j = jcsi(nbl,is),jcsf(nbl,is)
<                is1            = is1 + 1
<                nsrfflg(is1,1) = icsi(nbl,is)
<                nsrfflg(is1,2) = j
<                nsrfflg(is1,3) = k
<                nsrfflg(is1,4) = 0
<              enddo
<            enddo
<            jinc = jcsf(nbl,is)-jcsi(nbl,is)
<            do j = jcsi(nbl,is),jcsf(nbl,is),jinc
<              do k = kcsi(nbl,is),kcsf(nbl,is)
<                is1            = is1 + 1
<                nsrfflg(is1,1) = icsi(nbl,is)
<                nsrfflg(is1,2) = j
<                nsrfflg(is1,3) = k
<                nsrfflg(is1,4) = 0
<              enddo
<            enddo
<          else
<      .   if(kcsi(nbl,is) .eq. kcsf(nbl,is)) then
<            iinc = icsf(nbl,is)-icsi(nbl,is)
<            do i = icsi(nbl,is),icsf(nbl,is),iinc
<              do j = jcsi(nbl,is),jcsf(nbl,is)
<                is1            = is1 + 1
<                nsrfflg(is1,1) = i
<                nsrfflg(is1,2) = j
<                nsrfflg(is1,3) = kcsi(nbl,is)
<                nsrfflg(is1,4) = 0
<              enddo
<            enddo
<            jinc = jcsf(nbl,is)-jcsi(nbl,is)
<            do j = jcsi(nbl,is),jcsf(nbl,is),jinc
<              do i = icsi(nbl,is),icsf(nbl,is)
<                is1            = is1 + 1
<                nsrfflg(is1,1) = i
<                nsrfflg(is1,2) = j
<                nsrfflg(is1,3) = kcsi(nbl,is)
<                nsrfflg(is1,4) = 0
<              enddo
<            enddo
<          end if
<          enddo
<          nbndry = is1
132,133c60,61
<                do 3020 i = ist,ifn
<                do 3020 k = kst,kfn
---
> c              Are multiple segments defined. If yes increment start/end
> c              indices to eliminate doubling of displacement
135,136c63,78
< c              Flag point to indicate it has already been displaced, 
< c              to eliminate doubling of displacement
---
>                if(is.gt.1) then
>                 do is1 = 1,is-1
>                  if(jcsi(nbl,is1).eq.jcsi(nbl,is).and.jcsf(nbl,is1).eq.
>      .              jcsi(nbl,is)) then
>                     if(kcsf(nbl,is1).eq.kst) then
>                       kst = kst+1
>                     else if(kcsi(nbl,is1).eq.kfn) then
>                       kfn = kfn-1
>                     else if(icsf(nbl,is1).eq.ist) then
>                       ist = ist+1
>                     else if(icsi(nbl,is1).eq.ifn) then
>                       ifn = ifn-1
>                     end if
>                  end if
>                 enddo
>                end if
138,146c80,81
<                do ii = 1,nbndry
<                    if(i.eq.nsrfflg(ii,1).and.j.eq.nsrfflg(ii,2).and.
<      .                k.eq.nsrfflg(ii,3)) then
<                       if(nsrfflg(ii,4).eq.1) goto 3015
<                       nsrfflg(ii,4) = 1
<                       goto 3009
<                    end if
<                enddo
< 3009           continue
---
>                do 3020 i = ist,ifn
>                do 3020 k = kst,kfn
168d102
< 3015           continue
190,191c124,125
<                do 3050 i = ist,ifn
<                do 3050 j = jst,jfn
---
> c              Are multiple segments defined. If yes increment start/end
> c              indices to eliminate doubling of displacement
193,194c127,142
< c              Flag point to indicate it has already been displaced, 
< c              to eliminate doubling of displacement
---
>                if(is.gt.1) then
>                 do is1 = 1,is-1
>                  if(kcsi(nbl,is1).eq.kcsi(nbl,is).and.kcsf(nbl,is1).eq.
>      .              kcsi(nbl,is)) then
>                     if(icsf(nbl,is1).eq.ist) then
>                       ist = ist+1
>                     else if(icsi(nbl,is1).eq.ifn) then
>                       ifn = ifn-1
>                     else if(jcsf(nbl,is1).eq.jst) then
>                       jst = jst+1
>                     else if(jcsi(nbl,is1).eq.jfn) then
>                       jfn = jfn-1
>                     end if
>                  end if
>                 enddo
>                end if
196,204c144,145
<                do ii = 1,nbndry
<                    if(i.eq.nsrfflg(ii,1).and.j.eq.nsrfflg(ii,2).and.
<      .                k.eq.nsrfflg(ii,3)) then
<                       if(nsrfflg(ii,4).eq.1) goto 3045
<                       nsrfflg(ii,4) = 1
<                       goto 3039
<                    end if
<                enddo
< 3039           continue
---
>                do 3050 i = ist,ifn
>                do 3050 j = jst,jfn
226d166
< 3045           continue
248,249c188,189
<                do 3080 k = kst,kfn
<                do 3080 j = jst,jfn
---
> c              Are multiple segments defined. If yes increment start/end
> c              indices to eliminate doubling of displacement
251,252c191,206
< c              Flag point to indicate it has already been displaced, 
< c              to eliminate doubling of displacement
---
>                if(is.gt.1) then
>                 do is1 = 1,is-1
>                  if(icsi(nbl,is1).eq.icsi(nbl,is).and.icsf(nbl,is1).eq.
>      .              icsi(nbl,is)) then
>                     if(kcsf(nbl,is1).eq.kst) then
>                       kst = kst+1
>                     else if(kcsi(nbl,is1).eq.kfn) then
>                       kfn = kfn-1
>                     else if(jcsf(nbl,is1).eq.jst) then
>                       jst = jst+1
>                     else if(jcsi(nbl,is1).eq.jfn) then
>                       jfn = jfn-1
>                     end if
>                  end if
>                 enddo
>                end if
254,262c208,209
<                do ii = 1,nbndry
<                    if(i.eq.nsrfflg(ii,1).and.j.eq.nsrfflg(ii,2).and.
<      .                k.eq.nsrfflg(ii,3)) then
<                       if(nsrfflg(ii,4).eq.1) goto 3075
<                       nsrfflg(ii,4) = 1
<                       goto 3069
<                    end if
<                enddo
< 3069           continue
---
>                do 3080 k = kst,kfn
>                do 3080 j = jst,jfn
284d230
< 3075           continue
Index: source/cfl3d/libs/barth3d.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/barth3d.F,v
retrieving revision 1.5
retrieving revision 1.4
diff -r1.5 -r1.4
8c8
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
198c198
<               ypls=ra*ccabs(smin(j,k,i))
---
>               ypls=ra*smin(j,k,i)
822,825c822,824
<               if ((i.ge.ilamlo .and. i.lt.ilamhi .and.
<      .             j.ge.jlamlo .and. j.lt.jlamhi .and.
<      .             k.ge.klamlo .and. k.lt.klamhi) .or.
<      .             real(smin(j,k,i)) .lt. 0.) then
---
>               if (i.ge.ilamlo .and. i.lt.ilamhi .and.
>      .            j.ge.jlamlo .and. j.lt.jlamhi .and.
>      .            k.ge.klamlo .and. k.lt.klamhi) then
Index: source/cfl3d/libs/bc.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/bc.F,v
retrieving revision 1.6
retrieving revision 1.5
diff -r1.6 -r1.5
8c8
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
111,112d110
< c      bc2014 - same as bc2004, except it indicates that the region should
< c               be forced to be LAMINAR
134,136d131
< c      bc2018 - specify T, rhou, rhov, and rhow; extrapolate p from interior.
< c      bc2028 - specify freq, rhoumax, rhovmax, and rhowmax; extrapolate rho 
< c               and p from interior.
485,486c480
<       if (abs(ibcinfo(nbl,nseg,1,1)).eq.2004 .or.
<      .    abs(ibcinfo(nbl,nseg,1,1)).eq.2014)
---
>       if (abs(ibcinfo(nbl,nseg,1,1)).eq.2004)
525,527c519
<       if (ibcinfo(nbl,nseg,1,1).eq.2008 .or.
<      .    ibcinfo(nbl,nseg,1,1).eq.2018 .or.
<      .    ibcinfo(nbl,nseg,1,1).eq.2028)
---
>       if (ibcinfo(nbl,nseg,1,1).eq.2008)
533c525
<      .  nou,bou,nbuf,ibufdim,myid,ibcinfo(nbl,nseg,1,1))
---
>      .  nou,bou,nbuf,ibufdim,myid)
679,680c671
<       if (abs(ibcinfo(nbl,nseg,1,2)).eq.2004 .or.
<      .    abs(ibcinfo(nbl,nseg,1,2)).eq.2014)
---
>       if (abs(ibcinfo(nbl,nseg,1,2)).eq.2004)
719,721c710
<       if (ibcinfo(nbl,nseg,1,2).eq.2008 .or.
<      .    ibcinfo(nbl,nseg,1,2).eq.2018 .or.
<      .    ibcinfo(nbl,nseg,1,2).eq.2028)
---
>       if (ibcinfo(nbl,nseg,1,2).eq.2008)
727c716
<      .  nou,bou,nbuf,ibufdim,myid,ibcinfo(nbl,nseg,1,2))
---
>      .  nou,bou,nbuf,ibufdim,myid)
873,874c862
<       if (abs(jbcinfo(nbl,nseg,1,1)).eq.2004 .or.
<      .    abs(jbcinfo(nbl,nseg,1,1)).eq.2014)
---
>       if (abs(jbcinfo(nbl,nseg,1,1)).eq.2004)
913,915c901
<       if (jbcinfo(nbl,nseg,1,1).eq.2008 .or.
<      .    jbcinfo(nbl,nseg,1,1).eq.2018 .or.
<      .    jbcinfo(nbl,nseg,1,1).eq.2028)
---
>       if (jbcinfo(nbl,nseg,1,1).eq.2008)
921c907
<      .  nou,bou,nbuf,ibufdim,myid,jbcinfo(nbl,nseg,1,1))
---
>      .  nou,bou,nbuf,ibufdim,myid)
1067,1068c1053
<       if (abs(jbcinfo(nbl,nseg,1,2)).eq.2004 .or.
<      .    abs(jbcinfo(nbl,nseg,1,2)).eq.2014)
---
>       if (abs(jbcinfo(nbl,nseg,1,2)).eq.2004)
1107,1109c1092
<       if (jbcinfo(nbl,nseg,1,2).eq.2008 .or.
<      .    jbcinfo(nbl,nseg,1,2).eq.2018 .or.
<      .    jbcinfo(nbl,nseg,1,2).eq.2028)
---
>       if (jbcinfo(nbl,nseg,1,2).eq.2008)
1115c1098
<      .  nou,bou,nbuf,ibufdim,myid,jbcinfo(nbl,nseg,1,2))
---
>      .  nou,bou,nbuf,ibufdim,myid)
1261,1262c1244
<       if (abs(kbcinfo(nbl,nseg,1,1)).eq.2004 .or.
<      .    abs(kbcinfo(nbl,nseg,1,1)).eq.2014)
---
>       if (abs(kbcinfo(nbl,nseg,1,1)).eq.2004)
1301,1303c1283
<       if (kbcinfo(nbl,nseg,1,1).eq.2008 .or.
<      .    kbcinfo(nbl,nseg,1,1).eq.2018 .or.
<      .    kbcinfo(nbl,nseg,1,1).eq.2028)
---
>       if (kbcinfo(nbl,nseg,1,1).eq.2008)
1309c1289
<      .  nou,bou,nbuf,ibufdim,myid,kbcinfo(nbl,nseg,1,1))
---
>      .  nou,bou,nbuf,ibufdim,myid)
1455,1456c1435
<       if (abs(kbcinfo(nbl,nseg,1,2)).eq.2004 .or.
<      .    abs(kbcinfo(nbl,nseg,1,2)).eq.2014)
---
>       if (abs(kbcinfo(nbl,nseg,1,2)).eq.2004)
1495,1497c1474
<       if (kbcinfo(nbl,nseg,1,2).eq.2008 .or.
<      .    kbcinfo(nbl,nseg,1,2).eq.2018 .or.
<      .    kbcinfo(nbl,nseg,1,2).eq.2028)
---
>       if (kbcinfo(nbl,nseg,1,2).eq.2008)
1503c1480
<      .  nou,bou,nbuf,ibufdim,myid,kbcinfo(nbl,nseg,1,2))
---
>      .  nou,bou,nbuf,ibufdim,myid)
Index: source/cfl3d/libs/bc1000.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/bc1000.F,v
retrieving revision 1.3
retrieving revision 1.2
diff -r1.3 -r1.2
7c7
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
55a56,59
>       if (isklton.eq.1) then
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),1001) ista,iend,ksta,kend
>       end if
88a93,96
>       if (isklton.eq.1) then
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),1002) ista,iend,ksta,kend
>       end if
121a130,133
>       if (isklton.eq.1) then
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),1003) ista,iend,jsta,jend
>       end if
154a167,170
>       if (isklton.eq.1) then
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),1004) ista,iend,jsta,jend
>       end if
187a204,207
>       if (isklton.eq.1) then
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),1005) jsta,jend,ksta,kend
>       end if
220a241,244
>       if (isklton.eq.1) then
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),1006) jsta,jend,ksta,kend
>       end if
247a272,284
> c
>  1001 format(' ','  j=   1  freestream                     type 1000',
>      .       '  i=',i3,',',i3,'  k=',i3,',',i3)
>  1002 format(' ','  j=jdim  freestream                     type 1000',
>      .       '  i=',i3,',',i3,'  k=',i3,',',i3)
>  1003 format(' ','  k=   1  freestream                     type 1000',
>      .       '  i=',i3,',',i3,'  j=',i3,',',i3)
>  1004 format(' ','  k=kdim  freestream                     type 1000',
>      .       '  i=',i3,',',i3,'  j=',i3,',',i3)
>  1005 format(' ','  i=   1  freestream                     type 1000',
>      .       '  j=',i3,',',i3,'  k=',i3,',',i3)
>  1006 format(' ','  i=idim  freestream                     type 1000',
>      .       '  j=',i3,',',i3,'  k=',i3,',',i3)
Index: source/cfl3d/libs/bc1001.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/bc1001.F,v
retrieving revision 1.3
retrieving revision 1.2
diff -r1.3 -r1.2
7c7
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
53a54,57
>       if (isklton.eq.1) then
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),1001)ista,iend,ksta,kend
>       end if
107a112,115
>       if (isklton.eq.1) then
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),1002)ista,iend,ksta,kend
>       end if
161a170,173
>       if (isklton.eq.1) then
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),1003)ista,iend,jsta,jend
>       end if
215a228,231
>       if (isklton.eq.1) then
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),1004)ista,iend,jsta,jend
>       end if
269a286,289
>       if (isklton.eq.1) then
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),1005)jsta,jend,ksta,kend
>       end if
325a346,349
>       if (isklton.eq.1) then
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),1006)jsta,jend,ksta,kend
>       end if
375a400,412
> c
>  1001 format(' ','  j=   1  symmetry plane                 type 1001',
>      .       '  i=',i3,',',i3,'  k=',i3,',',i3)
>  1002 format(' ','  j=jdim  symmetry plane                 type 1001',
>      .       '  i=',i3,',',i3,'  k=',i3,',',i3)
>  1003 format(' ','  k=   1  symmetry plane                 type 1001',
>      .       '  i=',i3,',',i3,'  j=',i3,',',i3)
>  1004 format(' ','  k=kdim  symmetry plane                 type 1001',
>      .       '  i=',i3,',',i3,'  j=',i3,',',i3)
>  1005 format(' ','  i=   1  symmetry plane                 type 1001',
>      .       '  j=',i3,',',i3,'  k=',i3,',',i3)
>  1006 format(' ','  i=idim  symmetry plane                 type 1001',
>      .       '  j=',i3,',',i3,'  k=',i3,',',i3)
Index: source/cfl3d/libs/bc1002.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/bc1002.F,v
retrieving revision 1.3
retrieving revision 1.2
diff -r1.3 -r1.2
7c7
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
53a54,57
>       if (isklton.eq.1) then
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),1001)ista,iend,ksta,kend
>       end if
86a91,94
>       if (isklton.eq.1) then
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),1002)ista,iend,ksta,kend
>       end if
119a128,131
>       if (isklton.eq.1) then
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),1003)ista,iend,jsta,jend
>       end if
152a165,168
>       if (isklton.eq.1) then
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),1004) ista,iend,jsta,jend
>       end if
185a202,205
>       if (isklton.eq.1) then
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),1005)jsta,jend,ksta,kend
>       end if
218a239,242
>       if (isklton.eq.1) then
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),1006)jsta,jend,ksta,kend
>       end if
246a271,282
>  1001 format(' ','  j=   1  1-pt extrapolation             type 1002',
>      .       '  i=',i3,',',i3,'  k=',i3,',',i3)
>  1002 format(' ','  j=jdim  1-pt extrapolation             type 1002',
>      .       '  i=',i3,',',i3,'  k=',i3,',',i3)
>  1003 format(' ','  k=   1  1-pt extrapolation             type 1002',
>      .       '  i=',i3,',',i3,'  j=',i3,',',i3)
>  1004 format(' ','  k=kdim  1-pt extrapolation             type 1002',
>      .       '  i=',i3,',',i3,'  j=',i3,',',i3)
>  1005 format(' ','  i=   1  1-pt extrapolation             type 1002',
>      .       '  j=',i3,',',i3,'  k=',i3,',',i3)
>  1006 format(' ','  i=idim  1-pt extrapolation             type 1002',
>      .       '  j=',i3,',',i3,'  k=',i3,',',i3)
Index: source/cfl3d/libs/bc1003.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/bc1003.F,v
retrieving revision 1.3
retrieving revision 1.2
diff -r1.3 -r1.2
6c6
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
58a59,66
>       if (isklton.eq.1) then
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),1001)ista,iend,ksta,kend
>          if (iipv .eq. 1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write (bou(nou(1),1),3001)
>          end if
>       end if
133a142,149
>       if (isklton.eq.1) then
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),1002)ista,iend,ksta,kend
>          if (iipv .eq. 1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write (bou(nou(1),1),3001)
>          end if
>       end if
210a227,234
>       if (isklton.eq.1) then
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),1003)ista,iend,jsta,jend
>          if (iipv .eq. 1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write (bou(nou(1),1),3001)
>          end if
>       end if
285a310,317
>       if (isklton.eq.1) then
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),1004)ista,iend,jsta,jend
>          if (iipv .eq. 1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write (bou(nou(1),1),3001)
>          end if
>       end if
362a395,404
>       if (isklton.eq.1) then
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),1005)jsta,jend,ksta,kend
>          if (iipv .eq. 1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),'('' i=1 bc1003 not appropriate for'',
>      +       '' i2d=-1 (farfield point vortex correction)'')')
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
>       end if
427a470,479
>       if (isklton.eq.1) then
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),1006)jsta,jend,ksta,kend
>          if (iipv .eq. 1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),'('' i=idim bc1003 not appropriate'',
>      +       '' for i2d=-1 (farfield point vortex correction)'')')
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
>       end if
486a539,552
>  1001 format(' ','  j=   1  characteristic inflow/outflow  type 1003',
>      .       '  i=',i3,',',i3,'  k=',i3,',',i3)
>  1002 format(' ','  j=jdim  characteristic inflow/outflow  type 1003',
>      .       '  i=',i3,',',i3,'  k=',i3,',',i3)
>  1003 format(' ','  k=   1  characteristic inflow/outflow  type 1003',
>      .       '  i=',i3,',',i3,'  j=',i3,',',i3)
>  1004 format(' ','  k=kdim  characteristic inflow/outflow  type 1003',
>      .       '  i=',i3,',',i3,'  j=',i3,',',i3)
>  1005 format(' ','  i=   1  characteristic inflow/outflow  type 1003',
>      .       '  j=',i3,',',i3,'  k=',i3,',',i3)
>  1006 format(' ','  i=idim  characteristic inflow/outflow  type 1003',
>      .       '  j=',i3,',',i3,'  k=',i3,',',i3)
> c
>  3001 format(' ',10x,'With farfield point vortex correction')
Index: source/cfl3d/libs/bc1005.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/bc1005.F,v
retrieving revision 1.3
retrieving revision 1.2
diff -r1.3 -r1.2
7c7
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
58a59,68
>       if (isklton.eq.1) then
>          if (inormmom .eq. 0) then
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),1001)ista,iend,ksta,kend
>          else
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),2001)ista,iend,ksta,kend
>          end if
>       end if
> c
187a198,207
>       if (isklton.eq.1) then
>          if (inormmom .eq. 0) then
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),1002)ista,iend,ksta,kend
>          else
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),2002)ista,iend,ksta,kend
>          end if
>       end if
> c
326a347,356
>       if (isklton.eq.1) then
>          if (inormmom .eq. 0) then
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),1003)ista,iend,jsta,jend
>          else
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),2003)ista,iend,jsta,jend
>          end if
>       end if
> c
455a486,495
>       if (isklton.eq.1) then
>          if (inormmom .eq. 0) then
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),1004)ista,iend,jsta,jend
>          else
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),2004)ista,iend,jsta,jend
>          end if
>       end if
> c
594a635,644
>       if (isklton.eq.1) then
>          if (inormmom .eq. 0) then
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),1005)jsta,jend,ksta,kend
>          else
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),2005)jsta,jend,ksta,kend
>          end if
>       end if
> c
722a773,782
>       if (isklton.eq.1) then
>          if (inormmom .eq. 0) then
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),1006)jsta,jend,ksta,kend
>          else
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),2006)jsta,jend,ksta,kend
>          end if
>       end if
> c
854a915,938
>  1001 format(' ','  j=   1  inviscid surface               type 1005',
>      .       '  i=',i3,',',i3,'  k=',i3,',',i3)
>  1002 format(' ','  j=jdim  inviscid surface               type 1005',
>      .       '  i=',i3,',',i3,'  k=',i3,',',i3)
>  1003 format(' ','  k=   1  inviscid surface               type 1005',
>      .       '  i=',i3,',',i3,'  j=',i3,',',i3)
>  1004 format(' ','  k=kdim  inviscid surface               type 1005',
>      .       '  i=',i3,',',i3,'  j=',i3,',',i3)
>  1005 format(' ','  i=   1  inviscid surface               type 1005',
>      .       '  j=',i3,',',i3,'  k=',i3,',',i3)
>  1006 format(' ','  i=idim  inviscid surface               type 1005',
>      .       '  j=',i3,',',i3,'  k=',i3,',',i3)
>  2001 format(' ','  j=   1  inviscid surface w norm mom eq type 1006',
>      .       '  i=',i3,',',i3,'  k=',i3,',',i3)
>  2002 format(' ','  j=jdim  inviscid surface w norm mom eq type 1006',
>      .       '  i=',i3,',',i3,'  k=',i3,',',i3)
>  2003 format(' ','  k=   1  inviscid surface w norm mom eq type 1006',
>      .       '  i=',i3,',',i3,'  j=',i3,',',i3)
>  2004 format(' ','  k=kdim  inviscid surface w norm mom eq type 1006',
>      .       '  i=',i3,',',i3,'  j=',i3,',',i3)
>  2005 format(' ','  i=   1  inviscid surface w norm mom eq type 1006',
>      .       '  j=',i3,',',i3,'  k=',i3,',',i3)
>  2006 format(' ','  i=idim  inviscid surface w norm mom eq type 1006',
>      .       '  j=',i3,',',i3,'  k=',i3,',',i3)
Index: source/cfl3d/libs/bc1008.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/bc1008.F,v
retrieving revision 1.3
retrieving revision 1.2
diff -r1.3 -r1.2
7c7
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
56a57,60
>       if (isklton.eq.1) then
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),1001)ista,iend,ksta,kend
>       end if
106a111,114
>       if (isklton.eq.1) then
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),1002)ista,iend,ksta,kend
>       end if
156a165,168
>       if (isklton.eq.1) then
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),1003)ista,iend,jsta,jend
>       end if
206a219,222
>       if (isklton.eq.1) then
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),1004)ista,iend,jsta,jend
>       end if
256a273,276
>       if (isklton.eq.1) then
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),1005)jsta,jend,ksta,kend
>       end if
306a327,330
>       if (isklton.eq.1) then
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),1006)jsta,jend,ksta,kend
>       end if
349a374,386
> c
>  1001 format(' ','  j=   1  tunnel inflow                  type 1008',
>      .       '  i=',i3,',',i3,'  k=',i3,',',i3)
>  1002 format(' ','  j=jdim  tunnel inflow                  type 1008',
>      .       '  i=',i3,',',i3,'  k=',i3,',',i3)
>  1003 format(' ','  k=   1  tunnel inflow                  type 1008',
>      .       '  i=',i3,',',i3,'  j=',i3,',',i3)
>  1004 format(' ','  k=kdim  tunnel inflow                  type 1008',
>      .       '  i=',i3,',',i3,'  j=',i3,',',i3)
>  1005 format(' ','  i=   1  tunnel inflow                  type 1008',
>      .       '  j=',i3,',',i3,'  k=',i3,',',i3)
>  1006 format(' ','  i=idim  tunnel inflow                  type 1008',
>      .       '  j=',i3,',',i3,'  k=',i3,',',i3)
Index: source/cfl3d/libs/bc1011.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/bc1011.F,v
retrieving revision 1.3
retrieving revision 1.2
diff -r1.3 -r1.2
7c7
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
56a57,60
>       if (isklton.eq.1) then
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),1001)ista,iend,ksta,kend
>       end if
166a171,174
>       if (isklton.eq.1) then
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),1002)ista,iend,ksta,kend
>       end if
290a299,302
>       if (isklton.eq.1) then
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),1003)ista,iend,jsta,jend
>       end if
400a413,416
>       if (isklton.eq.1) then
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),1004)ista,iend,jsta,jend
>       end if
526a543,546
>       if (isklton.eq.1) then
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),1005)jsta,jend,ksta,kend
>       end if
638a659,662
>       if (isklton.eq.1) then
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),1006)jsta,jend,ksta,kend
>       end if
759a784,796
> c
>  1001 format(' ','  j=   1  singular axis - half plane     type 1011',
>      .       '  i=',i3,',',i3,'  k=',i3,',',i3)
>  1002 format(' ','  j=jdim  singular axis - half plane     type 1011',
>      .       '  i=',i3,',',i3,'  k=',i3,',',i3)
>  1003 format(' ','  k=   1  singular axis - half plane     type 1011',
>      .       '  i=',i3,',',i3,'  j=',i3,',',i3)
>  1004 format(' ','  k=kdim  singular axis - half plane     type 1011',
>      .       '  i=',i3,',',i3,'  j=',i3,',',i3)
>  1005 format(' ','  i=   1  singular axis - half plane     type 1011',
>      .       '  j=',i3,',',i3,'  k=',i3,',',i3)
>  1006 format(' ','  i=idim  singular axis - half plane     type 1011',
>      .       '  j=',i3,',',i3,'  k=',i3,',',i3)
Index: source/cfl3d/libs/bc1012.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/bc1012.F,v
retrieving revision 1.3
retrieving revision 1.2
diff -r1.3 -r1.2
7c7
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
55a56,59
>       if (isklton.eq.1) then
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),1001)ista,iend,ksta,kend
>       end if
156a161,164
>       if (isklton.eq.1) then
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),1002)ista,iend,ksta,kend
>       end if
257a266,269
>       if (isklton.eq.1) then
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),1003)ista,iend,jsta,jend
>       end if
358a371,374
>       if (isklton.eq.1) then
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),1004)ista,iend,jsta,jend
>       end if
459a476,479
>       if (isklton.eq.1) then
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),1005)jsta,jend,ksta,kend
>       end if
560a581,584
>       if (isklton.eq.1) then
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),1006)jsta,jend,ksta,kend
>       end if
657a682,694
> c
>  1001 format(' ','  j=   1  singular axis - full plane     type 1012',
>      .       '  i=',i3,',',i3,'  k=',i3,',',i3)
>  1002 format(' ','  j=jdim  singular axis - full plane     type 1012',
>      .       '  i=',i3,',',i3,'  k=',i3,',',i3)
>  1003 format(' ','  k=   1  singular axis - full plane     type 1012',
>      .       '  i=',i3,',',i3,'  j=',i3,',',i3)
>  1004 format(' ','  k=kdim  singular axis - full plane     type 1012',
>      .       '  i=',i3,',',i3,'  j=',i3,',',i3)
>  1005 format(' ','  i=   1  singular axis - full plane     type 1012',
>      .       '  j=',i3,',',i3,'  k=',i3,',',i3)
>  1006 format(' ','  i=idim  singular axis - full plane     type 1012',
>      .       '  j=',i3,',',i3,'  k=',i3,',',i3)
Index: source/cfl3d/libs/bc1013.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/bc1013.F,v
retrieving revision 1.3
retrieving revision 1.2
diff -r1.3 -r1.2
7c7
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
53a54,57
>       if (isklton.eq.1) then
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),1001)ista,iend,ksta,kend
>       end if
86a91,94
>       if (isklton.eq.1) then
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),1002)ista,iend,ksta,kend
>       end if
119a128,131
>       if (isklton.eq.1) then
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),1003)ista,iend,jsta,jend
>       end if
152a165,168
>       if (isklton.eq.1) then
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),1004)ista,iend,jsta,jend
>       end if
185a202,205
>       if (isklton.eq.1) then
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),1005)jsta,jend,ksta,kend
>       end if
218a239,242
>       if (isklton.eq.1) then
>          nou(1) = min(nou(1)+1,ibufdim)
>          write(bou(nou(1),1),1006)jsta,jend,ksta,kend
>       end if
245a270,282
> c
>  1001 format(' ','  j=   1  singular axis - extrapolation  type 1013',
>      .       '  i=',i3,',',i3,'  k=',i3,',',i3)
>  1002 format(' ','  j=jdim  singular axis - extrapolation  type 1013',
>      .       '  i=',i3,',',i3,'  k=',i3,',',i3)
>  1003 format(' ','  k=   1  singular axis - extrapolation  type 1013',
>      .       '  i=',i3,',',i3,'  j=',i3,',',i3)
>  1004 format(' ','  k=kdim  singular axis - extrapolation  type 1013',
>      .       '  i=',i3,',',i3,'  j=',i3,',',i3)
>  1005 format(' ','  i=   1  singular axis - extrapolation  type 1013',
>      .       '  j=',i3,',',i3,'  k=',i3,',',i3)
>  1006 format(' ','  i=idim  singular axis - extrapolation  type 1013',
>      .       '  j=',i3,',',i3,'  k=',i3,',',i3)
Index: source/cfl3d/libs/bc2002.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/bc2002.F,v
retrieving revision 1.4
retrieving revision 1.2
diff -r1.4 -r1.2
7c7
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
29c29
<       dimension bcdata(mdim,ndim,2,12)
---
>       dimension bcdata(mdim,ndim,2,7)
62a63,98
>       if (isklton.eq.1) then
> c
> c        check that the required auxiliary data has been set
>          iflg = 0
>          do 1 ipp=1,2
>          do 1 i=ista,iend1
>          ii = i-ista+1
>          do 1 k=ksta,kend1
>          kk = k-ksta+1
>          if (real(bcdata(kk,ii,ipp,1)) .lt. -1.e10) iflg = 1
>    1     continue
>          if (iflg.eq.1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  Stopping in bc2002:'
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  pressure data incorrectly set '
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
> c
>          if (filname.eq.'null') then
>             pratio = bcdata(1,1,1,1)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1001)ista,iend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1007) real(pratio)
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1001)ista,iend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1008)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1009) filname
>          end if
> c
>       end if
> c
105a142,177
>       if (isklton.eq.1) then
> c
> c        check that the required auxiliary data has been set
>          iflg = 0
>          do 2 ipp=1,2
>          do 2 i=ista,iend1
>          ii = i-ista+1
>          do 2 k=ksta,kend1
>          kk = k-ksta+1
>          if (real(bcdata(kk,ii,ipp,1)) .lt. -1.e10) iflg = 1
>    2     continue
>          if (iflg.eq.1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  Stopping in bc2002:'
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  pressure data incorrectly set '
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
> c
>          if (filname.eq.'null') then
>             pratio = bcdata(1,1,1,1)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1002)ista,iend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1007) real(pratio)
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1002)ista,iend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1008)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1009) filname
>          end if
> c
>       end if
> c
148a221,256
>       if (isklton.eq.1) then
> c
> c        check that the required auxiliary data has been set
>          iflg = 0
>          do 3 ipp=1,2
>          do 3 i=ista,iend1
>          ii = i-ista+1
>          do 3 j=jsta,jend1
>          jj = j-jsta+1
>          if (real(bcdata(jj,ii,ipp,1)) .lt. -1.e10) iflg = 1
>    3     continue
>          if (iflg.eq.1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  Stopping in bc2002:'
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  pressure data incorrectly set '
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
> c
>          if (filname.eq.'null') then
>             pratio = bcdata(1,1,1,1)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1003)ista,iend,jsta,jend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1007) real(pratio)
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1003)ista,iend,jsta,jend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1008)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1009) filname
>          end if
> c
>       end if
> c
191a300,335
>       if (isklton.eq.1) then
> c
> c        check that the required auxiliary data has been set
>          iflg = 0
>          do 4 ipp=1,2
>          do 4 i=ista,iend1
>          ii = i-ista+1
>          do 4 j=jsta,jend1
>          jj = j-jsta+1
>          if (real(bcdata(jj,ii,ipp,1)) .lt. -1.e10) iflg = 1
>    4     continue
>          if (iflg.eq.1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  Stopping in bc2002:'
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  pressure data incorrectly set '
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
> c
>          if (filname.eq.'null') then
>             pratio = bcdata(1,1,1,1)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1004)ista,iend,jsta,jend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1007) real(pratio)
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1004)ista,iend,jsta,jend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1008)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1009) filname
>          end if
> c
>       end if
> c
234a379,414
>       if (isklton.eq.1) then
> c
> c        check that the required auxiliary data has been set
>          iflg = 0
>          do 5 ipp=1,2
>          do 5 k=ksta,kend1
>          kk = k-ksta+1
>          do 5 j=jsta,jend1
>          jj = j-jsta+1
>          if (real(bcdata(jj,kk,ipp,1)) .lt. -1.e10) iflg = 1
>    5     continue
>          if (iflg.eq.1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  Stopping in bc2002:'
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  pressure data incorrectly set '
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
> c
>          if (filname.eq.'null') then
>             pratio = bcdata(1,1,1,1)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1005)jsta,jend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1007) real(pratio)
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1005)jsta,jend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1008)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1009) filname
>          end if
> c
>       end if
> c
277a458,493
>       if (isklton.eq.1) then
> c
> c        check that the required auxiliary data has been set
>          iflg = 0
>          do 6 ipp=1,2
>          do 6 k=ksta,kend1
>          kk = k-ksta+1
>          do 6 j=jsta,jend1
>          jj = j-jsta+1
>          if (real(bcdata(jj,kk,ipp,1)) .lt. -1.e10) iflg = 1
>    6     continue
>          if (iflg.eq.1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  Stopping in bc2002:'
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  pressure data incorrectly set '
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
> c
>          if (filname.eq.'null') then
>             pratio = bcdata(1,1,1,1)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1006)jsta,jend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1007) real(pratio)
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1006)jsta,jend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1008)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1009) filname
>          end if
> c
>       end if
> c
313a530,545
> c
>  1001 format(' ','  j=   1  set p, extrapolate rho,u,v,w   type 2002',
>      .       '  i=',i3,',',i3,'  k=',i3,',',i3)
>  1002 format(' ','  j=jdim  set p, extrapolate rho,u,v,w   type 2002',
>      .       '  i=',i3,',',i3,'  k=',i3,',',i3)
>  1003 format(' ','  k=   1  set p, extrapolate rho,u,v,w   type 2002',
>      .       '  i=',i3,',',i3,'  j=',i3,',',i3)
>  1004 format(' ','  k=kdim  set p, extrapolate rho,u,v,w   type 2002',
>      .       '  i=',i3,',',i3,'  j=',i3,',',i3)
>  1005 format(' ','  i=   1  set p, extrapolate rho,u,v,w   type 2002',
>      .       '  j=',i3,',',i3,'  k=',i3,',',i3)
>  1006 format(' ','  i=idim  set p, extrapolate rho,u,v,w   type 2002',
>      .       '  j=',i3,',',i3,'  k=',i3,',',i3)
>  1007 format(11x,'P/Pinf     = ',f8.4)
>  1008 format(11x,'P/Pinf set from file:')
>  1009 format('           ',a60)
Index: source/cfl3d/libs/bc2003.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/bc2003.F,v
retrieving revision 1.4
retrieving revision 1.2
diff -r1.4 -r1.2
7c7
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
36c36
<       dimension t(jvdim,25),bcdata(mdim,ndim,2,12)
---
>       dimension t(jvdim,25),bcdata(mdim,ndim,2,7)
81a82,151
>       if (isklton.eq.1) then
> c
> c        check that the required auxiliary data has been set
>          iflg = 0
>          do 1 l=1,5
>          do 1 ipp=1,2
>          do 1 i=ista,iend1
>          ii = i-ista+1
>          do 1 k=ksta,kend1
>          kk = k-ksta+1
>          if (real(bcdata(kk,ii,ipp,l)) .lt. -1.e10) iflg = 1
>    1     continue
>          if (iflg.eq.1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  Stopping in bc2003:'
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  engine inflow data incorrectly',
>      .      ' set '
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
>          if (itrflg1.gt.0 .or. itrflg2.gt.0) then
>             if (ivmx.gt.5 .and. itrflg1*itrflg2.eq.0) then
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),*)'  stopping in bc2003...must',
>      .         ' set both turbulence'
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),*)'  quantities for 2-eq turb.',
>      .         ' models...only one is set'
>                call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>             end if
>          end if
> c
>          if (filname.eq.'null') then
>             xme   = bcdata(1,1,1,1)
>             pte   = bcdata(1,1,1,2)
>             tte   = bcdata(1,1,1,3)
>             alpe  = bcdata(1,1,1,4)
>             betae = bcdata(1,1,1,5)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1001)ista,iend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1007) real(xme)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1008) real(pte)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1009) real(tte)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1010) real(alpe)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1011) real(betae)
>             if (itrflg1.gt.0) then
>                t1 = bcdata(1,1,1,6)
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1014) real(t1)
>             end if
>             if (itrflg2.gt.0) then
>                t2 = bcdata(1,1,1,7)
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1015) real(t2 )
>             end if
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1001)ista,iend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1012)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1013) filname
>          end if
>       end if
> c
184a255,324
>       if (isklton.eq.1) then
> c
> c        check that the required auxiliary data has been set
>          iflg = 0
>          do 2 l=1,5
>          do 2 ipp=1,2
>          do 2 i=ista,iend1
>          ii = i-ista+1
>          do 2 k=ksta,kend1
>          kk = k-ksta+1
>          if (real(bcdata(kk,ii,ipp,l)) .lt. -1.e10) iflg = 1
>    2     continue
>          if (iflg.eq.1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  Stopping in bc2003:'
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  engine inflow data incorrectly',
>      .      ' set '
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
>          if (itrflg1.gt.0 .or. itrflg2.gt.0) then
>             if (ivmx.gt.5 .and. itrflg1*itrflg2.eq.0) then
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),*)'  stopping in bc2003...must',
>      .         ' set both turbulence'
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),*)'  quantities for 2-eq turb.',
>      .         ' models...only one is set'
>                call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>             end if
>          end if
> c
>          if (filname.eq.'null') then
>             xme   = bcdata(1,1,1,1)
>             pte   = bcdata(1,1,1,2)
>             tte   = bcdata(1,1,1,3)
>             alpe  = bcdata(1,1,1,4)
>             betae = bcdata(1,1,1,5)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1002)ista,iend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1007) real(xme)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1008) real(pte)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1009) real(tte)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1010) real(alpe)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1011) real(betae)
>             if (itrflg1.gt.0) then
>                t1 = bcdata(1,1,1,6)
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1014) real(t1)
>             end if
>             if (itrflg2.gt.0) then
>                t2 = bcdata(1,1,1,7)
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1015) real(t2)
>             end if
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1002)ista,iend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1012)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1013) filname
>          end if
>       end if
> c
287a428,497
>       if (isklton.eq.1) then
> c
> c        check that the required auxiliary data has been set
>          iflg = 0
>          do 3 l=1,5
>          do 3 ipp=1,2
>          do 3 i=ista,iend1
>          ii = i-ista+1
>          do 3 j=jsta,jend1
>          jj = j-jsta+1
>          if (real(bcdata(jj,ii,ipp,l)) .lt. -1.e10) iflg = 1
>    3     continue
>          if (iflg.eq.1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  Stopping in bc2003:'
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  engine inflow data incorrectly',
>      .      ' set '
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
>          if (itrflg1.gt.0 .or. itrflg2.gt.0) then
>             if (ivmx.gt.5 .and. itrflg1*itrflg2.eq.0) then
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),*)'  stopping in bc2003...must',
>      .         ' set both turbulence'
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),*)'  quantities for 2-eq turb.',
>      .         ' models...only one is set'
>                call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>             end if
>          end if
> c
>          if (filname.eq.'null') then
>             xme   = bcdata(1,1,1,1)
>             pte   = bcdata(1,1,1,2)
>             tte   = bcdata(1,1,1,3)
>             alpe  = bcdata(1,1,1,4)
>             betae = bcdata(1,1,1,5)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1003)ista,iend,jsta,jend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1007) real(xme)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1008) real(pte)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1009) real(tte)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1010) real(alpe)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1011) real(betae)
>             if (itrflg1.gt.0) then
>                t1 = bcdata(1,1,1,6)
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1014) real(t1)
>             end if
>             if (itrflg2.gt.0) then
>                t2 = bcdata(1,1,1,7)
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1015) real(t2)
>             end if
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1003)ista,iend,jsta,jend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1012)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1013) filname
>          end if
>       end if
> c
390a601,670
>       if (isklton.eq.1) then
> c
> c        check that the required auxiliary data has been set
>          iflg = 0
>          do 4 l=1,5
>          do 4 ipp=1,2
>          do 4 i=ista,iend1
>          ii = i-ista+1
>          do 4 j=jsta,jend1
>          jj = j-jsta+1
>          if (real(bcdata(jj,ii,ipp,l)) .lt. -1.e10) iflg = 1
>    4     continue
>          if (iflg.eq.1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  Stopping in bc2003:'
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  engine inflow data incorrectly',
>      .      ' set '
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
>          if (itrflg1.gt.0 .or. itrflg2.gt.0) then
>             if (ivmx.gt.5 .and. itrflg1*itrflg2.eq.0) then
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),*)'  stopping in bc2003...must',
>      .         ' set both turbulence'
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),*)'  quantities for 2-eq turb.',
>      .         ' models...only one is set'
>                call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>             end if
>          end if
> c
>          if (filname.eq.'null') then
>             xme   = bcdata(1,1,1,1)
>             pte   = bcdata(1,1,1,2)
>             tte   = bcdata(1,1,1,3)
>             alpe  = bcdata(1,1,1,4)
>             betae = bcdata(1,1,1,5)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1004)ista,iend,jsta,jend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1007) real(xme)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1008) real(pte)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1009) real(tte)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1010) real(alpe)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1011) real(betae)
>             if (itrflg1.gt.0) then
>                t1 = bcdata(1,1,1,6)
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1014) real(t1)
>             end if
>             if (itrflg2.gt.0) then
>                t2 = bcdata(1,1,1,7)
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1015) real(t2)
>             end if
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1004)ista,iend,jsta,jend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1012)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1013) filname
>          end if
>       end if
> c
493a774,843
>       if (isklton.eq.1) then
> c
> c        check that the required auxiliary data has been set
>          iflg = 0
>          do 5 l=1,5
>          do 5 ipp=1,2
>          do 5 j=jsta,jend1
>          jj = j-jsta+1
>          do 5 k=ksta,kend1
>          kk = k-ksta+1
>          if (real(bcdata(jj,kk,ipp,l)) .lt. -1.e10) iflg = 1
>    5     continue
>          if (iflg.eq.1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  Stopping in bc2003:'
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  engine inflow data incorrectly',
>      .      ' set '
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
>          if (itrflg1.gt.0 .or. itrflg2.gt.0) then
>             if (ivmx.gt.5 .and. itrflg1*itrflg2.eq.0) then
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),*)'  stopping in bc2003...must',
>      .         ' set both turbulence'
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),*)'  quantities for 2-eq turb.',
>      .         ' models...only one is set'
>                call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>             end if
>          end if
> c
>          if (filname.eq.'null') then
>             xme   = bcdata(1,1,1,1)
>             pte   = bcdata(1,1,1,2)
>             tte   = bcdata(1,1,1,3)
>             alpe  = bcdata(1,1,1,4)
>             betae = bcdata(1,1,1,5)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1005)jsta,jend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1007) real(xme)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1008) real(pte)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1009) real(tte)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1010) real(alpe)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1011) real(betae)
>             if (itrflg1.gt.0) then
>                t1 = bcdata(1,1,1,6)
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1014) real(t1)
>             end if
>             if (itrflg2.gt.0) then
>                t2 = bcdata(1,1,1,7)
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1015) real(t2)
>             end if
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1005)jsta,jend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1012)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1013) filname
>          end if
>       end if
> c
596a947,1016
>       if (isklton.eq.1) then
> c
> c        check that the required auxiliary data has been set
>          iflg = 0
>          do 6 l=1,5
>          do 6 ipp=1,2
>          do 6 j=jsta,jend1
>          jj = j-jsta+1
>          do 6 k=ksta,kend1
>          kk = k-ksta+1
>          if (real(bcdata(jj,kk,ipp,l)) .lt. -1.e10) iflg = 1
>    6     continue
>          if (iflg.eq.1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  Stopping in bc2003:'
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  engine inflow data incorrectly',
>      .      ' set '
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
>          if (itrflg1.gt.0 .or. itrflg2.gt.0) then
>             if (ivmx.gt.5 .and. itrflg1*itrflg2.eq.0) then
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),*)'  stopping in bc2003...must',
>      .         ' set both turbulence'
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),*)'  quantities for 2-eq turb.',
>      .         ' models...only one is set'
>                call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>             end if
>          end if
> c
>          if (filname.eq.'null') then
>             xme   = bcdata(1,1,1,1)
>             pte   = bcdata(1,1,1,2)
>             tte   = bcdata(1,1,1,3)
>             alpe  = bcdata(1,1,1,4)
>             betae = bcdata(1,1,1,5)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1006)jsta,jend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1007) real(xme)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1008) real(pte)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1009) real(tte)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1010) real(alpe)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1011) real(betae)
>             if (itrflg1.gt.0) then
>                t1 = bcdata(1,1,1,6)
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1014) real(t1)
>             end if
>             if (itrflg2.gt.0) then
>                t2 = bcdata(1,1,1,7)
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1015) real(t2)
>             end if
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1006)jsta,jend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1012)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1013) filname
>          end if
>       end if
> c
683a1104,1125
> c
>  1001 format(' ','  j=   1  engine inflow                  type 2003',
>      .       '  i=',i3,',',i3,'  k=',i3,',',i3)
>  1002 format(' ','  j=jdim  engine inflow                  type 2003',
>      .       '  i=',i3,',',i3,'  k=',i3,',',i3)
>  1003 format(' ','  k=   1  engine inflow                  type 2003',
>      .       '  i=',i3,',',i3,'  j=',i3,',',i3)
>  1004 format(' ','  k=kdim  engine inflow                  type 2003',
>      .       '  i=',i3,',',i3,'  j=',i3,',',i3)
>  1005 format(' ','  i=   1  engine inflow                  type 2003',
>      .       '  j=',i3,',',i3,'  k=',i3,',',i3)
>  1006 format(' ','  i=idim  engine inflow                  type 2003',
>      .       '  j=',i3,',',i3,'  k=',i3,',',i3)
>  1007 format(11x,'inlet mach     = ',f8.4)
>  1008 format(11x,'Pt/Pinf        = ',f8.4)
>  1009 format(11x,'Tt/Tinf        = ',f8.4)
>  1010 format(11x,'alphe          = ',f8.4)
>  1011 format(11x,'betae          = ',f8.4)
>  1012 format(11x,'inflow data set from file:')
>  1013 format('           ',a60)
>  1014 format(11x,'turb1 (nondim) = ',e12.4)
>  1015 format(11x,'turb2 (nondim) = ',e12.4)
Index: source/cfl3d/libs/bc2004.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/bc2004.F,v
retrieving revision 1.4
retrieving revision 1.2
diff -r1.4 -r1.2
8c8
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
54c54
<       dimension bcdata(mdim,ndim,2,12)
---
>       dimension bcdata(mdim,ndim,2,7)
105a106,164
>       if (isklton.eq.1) then
> c
> c        check that the required auxiliary data has been set
>          iflg = 0
>          do 1 l=1,2
>          do 1 ipp=1,2
>          do 1 i=ista,iend1
>          ii = i-ista+1
>          do 1 k=ksta,kend1
>          kk = k-ksta+1
>          if (real(bcdata(kk,ii,ipp,l)) .lt. -1.e10) iflg = 1
>    1     continue
>          if (iflg.eq.1) then 
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  Stopping in bc2004:'
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  viscous wall data incorrectly set '
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
> c
>          if (filname.eq.'null') then
>             ctemp = bcdata(1,1,1,1)
>             cq    = bcdata(1,1,1,2)
>             if (real(ctemp) .gt. 0.) then
>               nou(1) = min(nou(1)+1,ibufdim)
>               write(bou(nou(1),1),1001)ista,iend,ksta,kend
>               nou(1) = min(nou(1)+1,ibufdim)
>               write(bou(nou(1),1),1007) real(ctemp)
>               nou(1) = min(nou(1)+1,ibufdim)
>               write(bou(nou(1),1),1008) real(cq)
>             else if (real(ctemp) .eq. 0.) then
>               nou(1) = min(nou(1)+1,ibufdim)
>               write(bou(nou(1),1),1001)ista,iend,ksta,kend
>               nou(1) = min(nou(1)+1,ibufdim)
>               write(bou(nou(1),1),1009)
>               nou(1) = min(nou(1)+1,ibufdim)
>               write(bou(nou(1),1),1008) real(cq)
>             else
>               nou(1) = min(nou(1)+1,ibufdim)
>               write(bou(nou(1),1),1001)ista,iend,ksta,kend
>               nou(1) = min(nou(1)+1,ibufdim)
>               write(bou(nou(1),1),1010)
>               nou(1) = min(nou(1)+1,ibufdim)
>               write(bou(nou(1),1),1008) real(cq)
>             end if
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1001)ista,iend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1011)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1012) filname
>          end if
>          if (iwf(2) .eq. 1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),3001)
>          end if
>       end if
> c 
203c262
<             dist=ccabs(smin(j,k,i))
---
>             dist=smin(j,k,i)
277c336
<           dkdy=sqrt(tursav(j,k,i,2))/ccabs(smin(j,k,i))
---
>           dkdy=sqrt(tursav(j,k,i,2))/smin(j,k,i)
289c348
<           dist=ccabs(smin(j,k,i))
---
>           dist=smin(j,k,i)
306a366,424
>       if (isklton.eq.1) then
> c
> c        check that the required auxiliary data has been set
>          iflg = 0
>          do 2 l=1,2
>          do 2 ipp=1,2
>          do 2 i=ista,iend1
>          ii = i-ista+1
>          do 2 k=ksta,kend1
>          kk = k-ksta+1
>          if (real(bcdata(kk,ii,ipp,l)) .lt. -1.e10) iflg = 1
>    2     continue
>          if (iflg.eq.1) then 
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  Stopping in bc2004:'
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  viscous wall data incorrectly set '
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
> c
>          if (filname.eq.'null') then
>             ctemp = bcdata(1,1,1,1)
>             cq    = bcdata(1,1,1,2)
>             if (real(ctemp) .gt. 0.) then
>               nou(1) = min(nou(1)+1,ibufdim)
>               write(bou(nou(1),1),1002)ista,iend,ksta,kend
>               nou(1) = min(nou(1)+1,ibufdim)
>               write(bou(nou(1),1),1007) real(ctemp)
>               nou(1) = min(nou(1)+1,ibufdim)
>               write(bou(nou(1),1),1008) real(cq)
>             else if (real(ctemp) .eq. 0.) then
>               nou(1) = min(nou(1)+1,ibufdim)
>               write(bou(nou(1),1),1002)ista,iend,ksta,kend
>               nou(1) = min(nou(1)+1,ibufdim)
>               write(bou(nou(1),1),1009)
>               nou(1) = min(nou(1)+1,ibufdim)
>               write(bou(nou(1),1),1008) real(cq)
>             else
>               nou(1) = min(nou(1)+1,ibufdim)
>               write(bou(nou(1),1),1002)ista,iend,ksta,kend
>               nou(1) = min(nou(1)+1,ibufdim)
>               write(bou(nou(1),1),1010)
>               nou(1) = min(nou(1)+1,ibufdim)
>               write(bou(nou(1),1),1008) real(cq)
>             end if
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1002)ista,iend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1011)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1012) filname
>          end if
>          if (iwf(2) .eq. 1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),3001)
>          end if
>       end if
> c 
404c522
<             dist=ccabs(smin(j,k,i))
---
>             dist=smin(j,k,i)
478c596
<           dkdy=sqrt(tursav(j,k,i,2))/ccabs(smin(j,k,i))
---
>           dkdy=sqrt(tursav(j,k,i,2))/smin(j,k,i)
490c608
<           dist=ccabs(smin(j,k,i))
---
>           dist=smin(j,k,i)
507a626,684
>       if (isklton.eq.1) then
> c
> c        check that the required auxiliary data has been set
>          iflg = 0
>          do 3 l=1,2
>          do 3 ipp=1,2
>          do 3 i=ista,iend1
>          ii = i-ista+1
>          do 3 j=jsta,jend1
>          jj = j-jsta+1
>          if (real(bcdata(jj,ii,ipp,l)) .lt. -1.e10) iflg = 1
>    3     continue
>          if (iflg.eq.1) then 
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  Stopping in bc2004:'
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  viscous wall data incorrectly set '
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
> c
>          if (filname.eq.'null') then
>             ctemp = bcdata(1,1,1,1)
>             cq    = bcdata(1,1,1,2)
>             if (real(ctemp) .gt. 0.) then
>               nou(1) = min(nou(1)+1,ibufdim)
>               write(bou(nou(1),1),1003)ista,iend,jsta,jend
>               nou(1) = min(nou(1)+1,ibufdim)
>               write(bou(nou(1),1),1007) real(ctemp)
>               nou(1) = min(nou(1)+1,ibufdim)
>               write(bou(nou(1),1),1008) real(cq)
>             else if (real(ctemp) .eq. 0.) then
>               nou(1) = min(nou(1)+1,ibufdim)
>               write(bou(nou(1),1),1003)ista,iend,jsta,jend
>               nou(1) = min(nou(1)+1,ibufdim)
>               write(bou(nou(1),1),1009)
>               nou(1) = min(nou(1)+1,ibufdim)
>               write(bou(nou(1),1),1008) real(cq)
>             else
>               nou(1) = min(nou(1)+1,ibufdim)
>               write(bou(nou(1),1),1003)ista,iend,jsta,jend
>               nou(1) = min(nou(1)+1,ibufdim)
>               write(bou(nou(1),1),1010)
>               nou(1) = min(nou(1)+1,ibufdim)
>               write(bou(nou(1),1),1008) real(cq)
>             end if
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1003)ista,iend,jsta,jend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1011)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1012) filname
>          end if
>          if (iwf(3) .eq. 1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),3002)
>          end if
>       end if
> c
605c782
<             dist=ccabs(smin(j,k,i))
---
>             dist=smin(j,k,i)
679c856
<           dkdy=sqrt(tursav(j,k,i,2))/ccabs(smin(j,k,i))
---
>           dkdy=sqrt(tursav(j,k,i,2))/smin(j,k,i)
691c868
<           dist=ccabs(smin(j,k,i))
---
>           dist=smin(j,k,i)
708a886,944
>       if (isklton.eq.1) then
> c
> c        check that the required auxiliary data has been set
>          iflg = 0
>          do 4 l=1,2
>          do 4 ipp=1,2
>          do 4 i=ista,iend1
>          ii = i-ista+1
>          do 4 j=jsta,jend1
>          jj = j-jsta+1
>          if (real(bcdata(jj,ii,ipp,l)) .lt. -1.e10) iflg = 1
>    4     continue
>          if (iflg.eq.1) then 
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  Stopping in bc2004:'
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  viscous wall data incorrectly set '
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
> c
>          if (filname.eq.'null') then
>             ctemp = bcdata(1,1,1,1)
>             cq    = bcdata(1,1,1,2)
>             if (real(ctemp) .gt. 0.) then
>               nou(1) = min(nou(1)+1,ibufdim)
>               write(bou(nou(1),1),1004)ista,iend,jsta,jend
>               nou(1) = min(nou(1)+1,ibufdim)
>               write(bou(nou(1),1),1007) real(ctemp)
>               nou(1) = min(nou(1)+1,ibufdim)
>               write(bou(nou(1),1),1008) real(cq)
>             else if (real(ctemp) .eq. 0.) then
>               nou(1) = min(nou(1)+1,ibufdim)
>               write(bou(nou(1),1),1004)ista,iend,jsta,jend
>               nou(1) = min(nou(1)+1,ibufdim)
>               write(bou(nou(1),1),1009)
>               nou(1) = min(nou(1)+1,ibufdim)
>               write(bou(nou(1),1),1008) real(cq)
>             else
>               nou(1) = min(nou(1)+1,ibufdim)
>               write(bou(nou(1),1),1004)ista,iend,jsta,jend
>               nou(1) = min(nou(1)+1,ibufdim)
>               write(bou(nou(1),1),1010)
>               nou(1) = min(nou(1)+1,ibufdim)
>               write(bou(nou(1),1),1008) real(cq)
>             end if
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1004)ista,iend,jsta,jend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1011)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1012) filname
>          end if
>          if (iwf(3) .eq. 1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),3002)
>          end if
>       end if
> c 
806c1042
<             dist=ccabs(smin(j,k,i))
---
>             dist=smin(j,k,i)
880c1116
<           dkdy=sqrt(tursav(j,k,i,2))/ccabs(smin(j,k,i))
---
>           dkdy=sqrt(tursav(j,k,i,2))/smin(j,k,i)
892c1128
<           dist=ccabs(smin(j,k,i))
---
>           dist=smin(j,k,i)
909a1146,1204
>       if (isklton.eq.1) then
> c
> c        check that the required auxiliary data has been set
>          iflg = 0
>          do 5 l=1,2
>          do 5 ipp=1,2
>          do 5 k=ksta,kend1
>          kk = k-ksta+1
>          do 5 j=jsta,jend1
>          jj = j-jsta+1
>          if (real(bcdata(jj,kk,ipp,l)) .lt. -1.e10) iflg = 1
>    5     continue
>          if (iflg.eq.1) then 
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  Stopping in bc2004:'
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  viscous wall data incorrectly set '
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
> c
>          if (filname.eq.'null') then
>             ctemp = bcdata(1,1,1,1)
>             cq    = bcdata(1,1,1,2)
>             if (real(ctemp) .gt. 0.) then
>               nou(1) = min(nou(1)+1,ibufdim)
>               write(bou(nou(1),1),1005)jsta,jend,ksta,kend
>               nou(1) = min(nou(1)+1,ibufdim)
>               write(bou(nou(1),1),1007) real(ctemp)
>               nou(1) = min(nou(1)+1,ibufdim)
>               write(bou(nou(1),1),1008) real(cq)
>             else if (real(ctemp) .eq. 0.) then
>               nou(1) = min(nou(1)+1,ibufdim)
>               write(bou(nou(1),1),1005)jsta,jend,ksta,kend
>               nou(1) = min(nou(1)+1,ibufdim)
>               write(bou(nou(1),1),1009)
>               nou(1) = min(nou(1)+1,ibufdim)
>               write(bou(nou(1),1),1008) real(cq)
>             else
>               nou(1) = min(nou(1)+1,ibufdim)
>               write(bou(nou(1),1),1005)jsta,jend,ksta,kend
>               nou(1) = min(nou(1)+1,ibufdim)
>               write(bou(nou(1),1),1010)
>               nou(1) = min(nou(1)+1,ibufdim)
>               write(bou(nou(1),1),1008) real(cq)
>             end if
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1005)jsta,jend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1011)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1012) filname
>          end if
>          if (iwf(1) .eq. 1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),3003)
>          end if
>       end if
> c 
1007c1302
<             dist=ccabs(smin(j,k,i))
---
>             dist=smin(j,k,i)
1081c1376
<           dkdy=sqrt(tursav(j,k,i,2))/ccabs(smin(j,k,i))
---
>           dkdy=sqrt(tursav(j,k,i,2))/smin(j,k,i)
1093c1388
<           dist=ccabs(smin(j,k,i))
---
>           dist=smin(j,k,i)
1110a1406,1464
>       if (isklton.eq.1) then
> c
> c        check that the required auxiliary data has been set
>          iflg = 0
>          do 6 l=1,2
>          do 6 ipp=1,2
>          do 6 k=ksta,kend1
>          kk = k-ksta+1
>          do 6 j=jsta,jend1
>          jj = j-jsta+1
>          if (real(bcdata(jj,kk,ipp,l)) .lt. -1.e10) iflg = 1
>    6     continue
>          if (iflg.eq.1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  Stopping in bc2004:'
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  viscous wall data incorrectly set '
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
> c
>          if (filname.eq.'null') then
>             ctemp = bcdata(1,1,1,1)
>             cq    = bcdata(1,1,1,2)
>             if (real(ctemp) .gt. 0.) then
>               nou(1) = min(nou(1)+1,ibufdim)
>               write(bou(nou(1),1),1006)jsta,jend,ksta,kend
>               nou(1) = min(nou(1)+1,ibufdim)
>               write(bou(nou(1),1),1007) real(ctemp)
>               nou(1) = min(nou(1)+1,ibufdim)
>               write(bou(nou(1),1),1008) real(cq)
>             else if (real(ctemp) .eq. 0.) then
>               nou(1) = min(nou(1)+1,ibufdim)
>               write(bou(nou(1),1),1006)jsta,jend,ksta,kend
>               nou(1) = min(nou(1)+1,ibufdim)
>               write(bou(nou(1),1),1009)
>               nou(1) = min(nou(1)+1,ibufdim)
>               write(bou(nou(1),1),1008) real(cq)
>             else
>               nou(1) = min(nou(1)+1,ibufdim)
>               write(bou(nou(1),1),1006)jsta,jend,ksta,kend
>               nou(1) = min(nou(1)+1,ibufdim)
>               write(bou(nou(1),1),1010)
>               nou(1) = min(nou(1)+1,ibufdim)
>               write(bou(nou(1),1),1008) real(cq)
>             end if
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1006)jsta,jend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1011)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1012) filname
>          end if
>          if (iwf(1) .eq. 1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),3003)
>          end if
>       end if
> c 
1208c1562
<             dist=ccabs(smin(j,k,i))
---
>             dist=smin(j,k,i)
1282c1636
<           dkdy=sqrt(tursav(j,k,i,2))/ccabs(smin(j,k,i))
---
>           dkdy=sqrt(tursav(j,k,i,2))/smin(j,k,i)
1294c1648
<           dist=ccabs(smin(j,k,i))
---
>           dist=smin(j,k,i)
1304a1659,1681
> c
>  1001 format(' ','  j=   1  viscous wall                   type 2004',
>      .       '  i=',i3,',',i3,'  k=',i3,',',i3)
>  1002 format(' ','  j=jdim  viscous wall                   type 2004',
>      .       '  i=',i3,',',i3,'  k=',i3,',',i3)
>  1003 format(' ','  k=   1  viscous wall                   type 2004',
>      .       '  i=',i3,',',i3,'  j=',i3,',',i3)
>  1004 format(' ','  k=kdim  viscous wall                   type 2004',
>      .       '  i=',i3,',',i3,'  j=',i3,',',i3)
>  1005 format(' ','  i=   1  viscous wall                   type 2004',
>      .       '  j=',i3,',',i3,'  k=',i3,',',i3)
>  1006 format(' ','  i=idim  viscous wall                   type 2004',
>      .       '  j=',i3,',',i3,'  k=',i3,',',i3)
>  1007 format(11x,'Tw/Tinf    = ',f8.4)
>  1008 format(11x,'C_q        = ',f8.4)
>  1009 format(11x,'Tw/Tinf    = adiabatic wall')
>  1010 format(11x,'Tw/Tinf    = stagnation')
>  1011 format(11x,'Twtype, C_q set from file:')
>  1012 format('           ',a60)
> c
>  3001 format(' ',10x,'Wall function employed in j-direction')
>  3002 format(' ',10x,'Wall function employed in k-direction')
>  3003 format(' ',10x,'Wall function employed in i-direction')
Index: source/cfl3d/libs/bc2005.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/bc2005.F,v
retrieving revision 1.5
retrieving revision 1.3
diff -r1.5 -r1.3
8c8
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
84c84
<       dimension bcdata(mdim,ndim,2,12)
---
>       dimension bcdata(mdim,ndim,2,7)
118a119,221
>       if (isklton.eq.1) then
> c
> c        check that the required auxiliary data has been set
>          iflg = 0
>          do 1 l=1,4
>          do 1 ipp=1,2
>          do 1 i=ista,iend1
>          ii = i-ista+1
>          do 1 k=ksta,kend1
>          kk = k-ksta+1
>          if (real(bcdata(kk,ii,ipp,l)) .lt. -1.e10) iflg = 1
>    1     continue
>          if (iflg.eq.1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  Stopping in bc2005:'
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  periodic BC data incorrectly set '
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
> c
>          if (filname.eq.'null') then
>             blnb   = bcdata(1,1,1,1)
>             dthtx  = bcdata(1,1,1,2)
>             dthty  = bcdata(1,1,1,3)
>             dthtz  = bcdata(1,1,1,4)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1001)ista,iend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1007) nblp
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1008) real(dthtx)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1009) real(dthty)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1010) real(dthtz)
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2001)ista,iend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2007)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2008)filname
>          end if
> c
>          ip = 1
> c
> c   perform check on dthtx,y,z inputs:
>          do 2737 l=2,4
>          do 2737 i=ista,iend1
>            ii = i-ista+1
>            do 2737 k=ksta,kend1
>              kk = k-ksta+1
>              if (bcdata(kk,ii,ip,l) .ne. bcdata(1,1,ip,l)) then
>                 nou(1) = min(nou(1)+1,ibufdim)
>                 write(bou(nou(1),1),'('' dthtx,y,z currently must be'',
>      .          '' const over whole face'')')
>                 call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>              end if
>  2737    continue
>          if (bcdata(1,1,ip,2).ne.0. .and. (bcdata(1,1,ip,3).ne.0. .or.
>      .       bcdata(1,1,ip,4).ne.0.) ) then
>              nou(1) = min(nou(1)+1,ibufdim)
>              write(bou(nou(1),1),'('' 2 of the 3 dtht values'',
>      .       '' currently must = 0'')')
>              call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
>          if (bcdata(1,1,ip,3).ne.0. .and. (bcdata(1,1,ip,2).ne.0. .or.
>      .       bcdata(1,1,ip,4).ne.0.) ) then
>              nou(1) = min(nou(1)+1,ibufdim)
>              write(bou(nou(1),1),'('' 2 of the 3 dtht values'',
>      .       '' currently must = 0'')')
>              call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
>          if (bcdata(1,1,ip,4).ne.0. .and. (bcdata(1,1,ip,2).ne.0. .or.
>      .       bcdata(1,1,ip,3).ne.0.) ) then
>              nou(1) = min(nou(1)+1,ibufdim)
>              write(bou(nou(1),1),'('' 2 of the 3 dtht values'',
>      .       '' currently must = 0'')')
>              call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
> c   perform check on periodic block:
>          if (kdim .ne. kdimp .or. idim .ne. idimp) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),'('' idim,kdim,idimp,kdimp='',4i5)')
>      .      idim,kdim,idimp,kdimp
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),'('' Block you are periodic with'',
>      .      '' currently must be of same 2 dimensions'')')
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),'('' (and orientation) on the face as'',
>      .      '' the BC block'')')
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
>          if ((nbl .ne. nblp) .and. jdimp .eq. 2) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),'('' Periodic block cannot be'',
>      .      '' dimension 2 in j'')')
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),'(''  (on ANY multigrid level)'')')
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
>       end if
> c
198a302,404
>       if (isklton.eq.1) then
> c
> c        check that the required auxiliary data has been set
>          iflg = 0
>          do 2 l=1,4
>          do 2 ipp=1,2
>          do 2 i=ista,iend1
>          ii = i-ista+1
>          do 2 k=ksta,kend1
>          kk = k-ksta+1
>          if (real(bcdata(kk,ii,ipp,l)) .lt. -1.e10) iflg = 1
>    2     continue
>          if (iflg.eq.1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  Stopping in bc2005:'
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  periodic BC data incorrectly set '
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
> c
>          if (filname.eq.'null') then
>             blnb   = bcdata(1,1,1,1)
>             dthtx  = bcdata(1,1,1,2)
>             dthty  = bcdata(1,1,1,3)
>             dthtz  = bcdata(1,1,1,4)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1002)ista,iend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1007) nblp
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1008) real(dthtx)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1009) real(dthty)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1010) real(dthtz)
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2002)ista,iend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2007)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2008)filname
>          end if
> c
>          ip = 1
> c
> c   perform check on dthtx,y,z inputs:
>          do 3737 l=2,4
>          do 3737 i=ista,iend1
>            ii = i-ista+1
>            do 3737 k=ksta,kend1
>              kk = k-ksta+1
>              if (bcdata(kk,ii,ip,l) .ne. bcdata(1,1,ip,l)) then
>                 nou(1) = min(nou(1)+1,ibufdim)
>                 write(bou(nou(1),1),'('' dthtx,y,z currently must be'',
>      .          '' const over whole face'')')
>                 call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>              end if
>  3737    continue
>          if (bcdata(1,1,ip,2).ne.0. .and. (bcdata(1,1,ip,3).ne.0. .or.
>      .       bcdata(1,1,ip,4).ne.0.) ) then
>              nou(1) = min(nou(1)+1,ibufdim)
>              write(bou(nou(1),1),'('' 2 of the 3 dtht values'',
>      .       '' currently must = 0'')')
>              call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
>          if (bcdata(1,1,ip,3).ne.0. .and. (bcdata(1,1,ip,2).ne.0. .or.
>      .       bcdata(1,1,ip,4).ne.0.) ) then
>              nou(1) = min(nou(1)+1,ibufdim)
>              write(bou(nou(1),1),'('' 2 of the 3 dtht values'',
>      .       '' currently must = 0'')')
>              call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
>          if (bcdata(1,1,ip,4).ne.0. .and. (bcdata(1,1,ip,2).ne.0. .or.
>      .       bcdata(1,1,ip,3).ne.0.) ) then
>              nou(1) = min(nou(1)+1,ibufdim)
>              write(bou(nou(1),1),'('' 2 of the 3 dtht values'',
>      .       '' currently must = 0'')')
>              call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
> c   perform check on periodic block:
>          if (kdim .ne. kdimp .or. idim .ne. idimp) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),'('' idim,kdim,idimp,kdimp='',4i5)')
>      .      idim,kdim,idimp,kdimp
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),'('' Block you are periodic with'',
>      .      '' currently must be of same 2 dimensions'')')
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),'('' (and orientation) on the face as'',
>      .      '' the BC block'')')
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
>          if ((nbl .ne. nblp) .and. jdimp .eq. 2) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),'('' Periodic block cannot be'',
>      .      '' dimension 2 in j'')')
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),'(''  (on ANY multigrid level)'')')
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
>       end if
> c
278a485,587
>       if (isklton.eq.1) then
> c
> c        check that the required auxiliary data has been set
>          iflg = 0
>          do 3 l=1,4
>          do 3 ipp=1,2
>          do 3 i=ista,iend1
>          ii = i-ista+1
>          do 3 j=jsta,jend1
>          jj = j-jsta+1
>          if (real(bcdata(jj,ii,ipp,l)) .lt. -1.e10) iflg = 1
>    3     continue
>          if (iflg.eq.1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  Stopping in bc2005:'
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  periodic BC data incorrectly set '
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
> c
>          if (filname.eq.'null') then
>             blnb   = bcdata(1,1,1,1)
>             dthtx  = bcdata(1,1,1,2)
>             dthty  = bcdata(1,1,1,3)
>             dthtz  = bcdata(1,1,1,4)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1003)ista,iend,jsta,jend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1007) nblp
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1008) real(dthtx)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1009) real(dthty)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1010) real(dthtz)
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2003)ista,iend,jsta,jend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2007)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2008)filname
>          end if
> c
>          ip = 1
> c
> c   perform check on dthtx,y,z inputs:
>          do 4737 l=2,4
>          do 4737 i=ista,iend1
>            ii = i-ista+1
>            do 4737 j=jsta,jend1
>              jj = j-jsta+1
>              if (bcdata(jj,ii,ip,l) .ne. bcdata(1,1,ip,l)) then
>                 nou(1) = min(nou(1)+1,ibufdim)
>                 write(bou(nou(1),1),'('' dthtx,y,z currently must be'',
>      .          '' const over whole face'')')
>                 call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>              end if
>  4737    continue
>          if (bcdata(1,1,ip,2).ne.0. .and. (bcdata(1,1,ip,3).ne.0. .or.
>      .       bcdata(1,1,ip,4).ne.0.) ) then
>              nou(1) = min(nou(1)+1,ibufdim)
>              write(bou(nou(1),1),'('' 2 of the 3 dtht values'',
>      .       '' currently must = 0'')')
>              call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
>          if (bcdata(1,1,ip,3).ne.0. .and. (bcdata(1,1,ip,2).ne.0. .or.
>      .       bcdata(1,1,ip,4).ne.0.) ) then
>              nou(1) = min(nou(1)+1,ibufdim)
>              write(bou(nou(1),1),'('' 2 of the 3 dtht values'',
>      .       '' currently must = 0'')')
>              call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
>          if (bcdata(1,1,ip,4).ne.0. .and. (bcdata(1,1,ip,2).ne.0. .or.
>      .       bcdata(1,1,ip,3).ne.0.) ) then
>              nou(1) = min(nou(1)+1,ibufdim)
>              write(bou(nou(1),1),'('' 2 of the 3 dtht values'',
>      .       '' currently must = 0'')')
>              call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
> c   perform check on periodic block:
>          if (jdim .ne. jdimp .or. idim .ne. idimp) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),'('' idim,jdim,idimp,jdimp='',4i5)')
>      .      idim,jdim,idimp,jdimp
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),'('' Block you are periodic with'',
>      .      '' currently must be of same 2 dimensions'')')
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),'('' (and orientation) on the face as'',
>      .      '' the BC block'')')
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
>          if ((nbl .ne. nblp) .and. kdimp .eq. 2) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),'('' Periodic block cannot be'',
>      .      '' dimension 2 in k'')')
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),'(''  (on ANY multigrid level)'')')
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
>       end if
> c
358a668,770
>       if (isklton.eq.1) then
> c
> c        check that the required auxiliary data has been set
>          iflg = 0
>          do 4 l=1,4
>          do 4 ipp=1,2
>          do 4 i=ista,iend1
>          ii = i-ista+1
>          do 4 j=jsta,jend1
>          jj = j-jsta+1
>          if (real(bcdata(jj,ii,ipp,l)) .lt. -1.e10) iflg = 1
>    4     continue
>          if (iflg.eq.1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  Stopping in bc2005:'
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  periodic BC data incorrectly set '
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
> c
>          if (filname.eq.'null') then
>             blnb   = bcdata(1,1,1,1)
>             dthtx  = bcdata(1,1,1,2)
>             dthty  = bcdata(1,1,1,3)
>             dthtz  = bcdata(1,1,1,4)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1004)ista,iend,jsta,jend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1007) nblp
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1008) real(dthtx)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1009) real(dthty)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1010) real(dthtz)
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2004)ista,iend,jsta,jend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2007)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2008)filname
>          end if
> c
>          ip = 1
> c
> c   perform check on dthtx,y,z inputs:
>          do 5737 l=2,4
>          do 5737 i=ista,iend1
>            ii = i-ista+1
>            do 5737 j=jsta,jend1
>              jj = j-jsta+1
>              if (bcdata(jj,ii,ip,l) .ne. bcdata(1,1,ip,l)) then
>                 nou(1) = min(nou(1)+1,ibufdim)
>                 write(bou(nou(1),1),'('' dthtx,y,z currently must be'',
>      .          '' const over whole face'')')
>                 call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>              end if
>  5737    continue
>          if (bcdata(1,1,ip,2).ne.0. .and. (bcdata(1,1,ip,3).ne.0. .or.
>      .       bcdata(1,1,ip,4).ne.0.) ) then
>              nou(1) = min(nou(1)+1,ibufdim)
>              write(bou(nou(1),1),'('' 2 of the 3 dtht values'',
>      .       '' currently must = 0'')')
>              call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
>          if (bcdata(1,1,ip,3).ne.0. .and. (bcdata(1,1,ip,2).ne.0. .or.
>      .       bcdata(1,1,ip,4).ne.0.) ) then
>              nou(1) = min(nou(1)+1,ibufdim)
>              write(bou(nou(1),1),'('' 2 of the 3 dtht values'',
>      .       '' currently must = 0'')')
>              call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
>          if (bcdata(1,1,ip,4).ne.0. .and. (bcdata(1,1,ip,2).ne.0. .or.
>      .       bcdata(1,1,ip,3).ne.0.) ) then
>              nou(1) = min(nou(1)+1,ibufdim)
>              write(bou(nou(1),1),'('' 2 of the 3 dtht values'',
>      .       '' currently must = 0'')')
>              call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
> c   perform check on periodic block:
>          if (jdim .ne. jdimp .or. idim .ne. idimp) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),'('' idim,jdim,idimp,jdimp='',4i5)')
>      .      idim,jdim,idimp,jdimp
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),'('' Block you are periodic with'',
>      .      '' currently must be of same 2 dimensions'')')
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),'('' (and orientation) on the face as'',
>      .      '' the BC block'')')
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
>          if ((nbl .ne. nblp) .and. kdimp .eq. 2) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),'('' Periodic block cannot be'',
>      .      '' dimension 2 in k'')')
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),'(''  (on ANY multigrid level)'')')
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
>       end if
> c
438a851,953
>       if (isklton.eq.1) then
> c
> c        check that the required auxiliary data has been set
>          iflg = 0
>          do 5 l=1,4
>          do 5 ipp=1,2
>          do 5 j=jsta,jend1
>          jj = j-jsta+1
>          do 5 k=ksta,kend1
>          kk = k-ksta+1
>          if (real(bcdata(jj,kk,ipp,l)) .lt. -1.e10) iflg = 1
>    5     continue
>          if (iflg.eq.1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  Stopping in bc2005:'
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  periodic BC data incorrectly set '
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
> c
>          if (filname.eq.'null') then
>             blnb   = bcdata(1,1,1,1)
>             dthtx  = bcdata(1,1,1,2)
>             dthty  = bcdata(1,1,1,3)
>             dthtz  = bcdata(1,1,1,4)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1005)jsta,jend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1007) nblp
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1008) real(dthtx)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1009) real(dthty)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1010) real(dthtz)
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2005)jsta,jend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2007)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2008)filname
>          end if
> c
>          ip = 1
> c
> c   perform check on dthtx,y,z inputs:
>          do 6737 l=2,4
>          do 6737 k=ksta,kend1
>            kk = k-ksta+1
>            do 6737 j=jsta,jend1
>              jj = j-jsta+1
>              if (bcdata(jj,kk,ip,l) .ne. bcdata(1,1,ip,l)) then
>                 nou(1) = min(nou(1)+1,ibufdim)
>                 write(bou(nou(1),1),'('' dthtx,y,z currently must be'',
>      .          '' const over whole face'')')
>                 call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>              end if
>  6737    continue
>          if (bcdata(1,1,ip,2).ne.0. .and. (bcdata(1,1,ip,3).ne.0. .or.
>      .       bcdata(1,1,ip,4).ne.0.) ) then
>              nou(1) = min(nou(1)+1,ibufdim)
>              write(bou(nou(1),1),'('' 2 of the 3 dtht values'',
>      .       '' currently must = 0'')')
>              call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
>          if (bcdata(1,1,ip,3).ne.0. .and. (bcdata(1,1,ip,2).ne.0. .or.
>      .       bcdata(1,1,ip,4).ne.0.) ) then
>              nou(1) = min(nou(1)+1,ibufdim)
>              write(bou(nou(1),1),'('' 2 of the 3 dtht values'',
>      .       '' currently must = 0'')')
>              call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
>          if (bcdata(1,1,ip,4).ne.0. .and. (bcdata(1,1,ip,2).ne.0. .or.
>      .       bcdata(1,1,ip,3).ne.0.) ) then
>              nou(1) = min(nou(1)+1,ibufdim)
>              write(bou(nou(1),1),'('' 2 of the 3 dtht values'',
>      .       '' currently must = 0'')')
>              call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
> c   perform check on periodic block:
>          if (jdim .ne. jdimp .or. kdim .ne. kdimp) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),'('' jdim,kdim,jdimp,kdimp='',4i5)') 
>      .      jdim,kdim,jdimp,kdimp
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),'('' Block you are periodic with'',
>      .      '' currently must be of same 2 dimensions'')')
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),'('' (and orientation) on the face as'',
>      .      '' the BC block'')')
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
>          if ((nbl .ne. nblp) .and. idimp .eq. 2) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),'('' Periodic block cannot be'',
>      .      '' dimension 2 in i'')')
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),'(''  (on ANY multigrid level)'')')
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
>       end if
> c
518a1034,1136
>       if (isklton.eq.1) then
> c
> c        check that the required auxiliary data has been set
>          iflg = 0
>          do 6 l=1,4
>          do 6 ipp=1,2
>          do 6 j=jsta,jend1
>          jj = j-jsta+1
>          do 6 k=ksta,kend1
>          kk = k-ksta+1
>          if (real(bcdata(jj,kk,ipp,l)) .lt. -1.e10) iflg = 1
>    6     continue
>          if (iflg.eq.1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  Stopping in bc2005:'
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  periodic BC data incorrectly set '
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
> c
>          if (filname.eq.'null') then
>             blnb   = bcdata(1,1,1,1)
>             dthtx  = bcdata(1,1,1,2)
>             dthty  = bcdata(1,1,1,3)
>             dthtz  = bcdata(1,1,1,4)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1006)jsta,jend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1007) nblp
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1008) real(dthtx)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1009) real(dthty)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1010) real(dthtz)
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2006)jsta,jend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2007)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2008)filname
>          end if
> c
>          ip = 1
> c
> c   perform check on dthtx,y,z inputs:
>          do 7737 l=2,4
>          do 7737 k=ksta,kend1
>            kk = k-ksta+1
>            do 7737 j=jsta,jend1
>              jj = j-jsta+1
>              if (bcdata(jj,kk,ip,l) .ne. bcdata(1,1,ip,l)) then
>                 nou(1) = min(nou(1)+1,ibufdim)
>                 write(bou(nou(1),1),'('' dthtx,y,z currently must be'',
>      .          '' const over whole face'')')
>                 call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>              end if
>  7737    continue
>          if (bcdata(1,1,ip,2).ne.0. .and. (bcdata(1,1,ip,3).ne.0. .or.
>      .       bcdata(1,1,ip,4).ne.0.) ) then
>              nou(1) = min(nou(1)+1,ibufdim)
>              write(bou(nou(1),1),'('' 2 of the 3 dtht values'',
>      .       '' currently must = 0'')')
>              call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
>          if (bcdata(1,1,ip,3).ne.0. .and. (bcdata(1,1,ip,2).ne.0. .or.
>      .       bcdata(1,1,ip,4).ne.0.) ) then
>              nou(1) = min(nou(1)+1,ibufdim)
>              write(bou(nou(1),1),'('' 2 of the 3 dtht values'',
>      .       '' currently must = 0'')')
>              call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
>          if (bcdata(1,1,ip,4).ne.0. .and. (bcdata(1,1,ip,2).ne.0. .or.
>      .       bcdata(1,1,ip,3).ne.0.) ) then
>              nou(1) = min(nou(1)+1,ibufdim)
>              write(bou(nou(1),1),'('' 2 of the 3 dtht values'',
>      .       '' currently must = 0'')')
>              call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
> c   perform check on periodic block:
>          if (jdim .ne. jdimp .or. kdim .ne. kdimp) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),'('' jdim,kdim,jdimp,kdimp='',4i5)')
>      .      jdim,kdim,jdimp,kdimp
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),'('' Block you are periodic with'',
>      .      '' currently must be of same 2 dimensions'')')
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),'('' (and orientation) on the face as'',
>      .      '' the BC block'')')
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
>          if ((nbl .ne. nblp) .and. idimp .eq. 2) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),'('' Periodic block cannot be'',
>      .      '' dimension 2 in i'')')
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),'(''  (on ANY multigrid level)'')')
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
>       end if
> c
591a1210,1241
> c
>  1001 format(' ','  j=   1  periodic - angular rotation    type 2005',
>      .       '  i=',i3,',',i3,'  k=',i3,',',i3)
>  1002 format(' ','  j=jdim  periodic - angular rotation    type 2005',
>      .       '  i=',i3,',',i3,'  k=',i3,',',i3)
>  1003 format(' ','  k=   1  periodic - angular rotation    type 2005',
>      .       '  i=',i3,',',i3,'  j=',i3,',',i3)
>  1004 format(' ','  k=kdim  periodic - angular rotation    type 2005',
>      .       '  i=',i3,',',i3,'  j=',i3,',',i3)
>  1005 format(' ','  i=   1  periodic - angular rotation    type 2005',
>      .       '  j=',i3,',',i3,'  k=',i3,',',i3)
>  1006 format(' ','  i=idim  periodic - angular rotation    type 2005',
>      .       '  j=',i3,',',i3,'  k=',i3,',',i3)
>  1007 format(11x,'periodic with i=   1, block',i3)
>  1008 format(11x,'dthetax    = ',f8.4)
>  1009 format(11x,'dthetay    = ',f8.4)
>  1010 format(11x,'dthetaz    = ',f8.4)
> c
>  2001 format(' ','  j=   1  periodic - angular rotation    type 2005',
>      .       '  i=',i3,',',i3,'  k=',i3,',',i3)
>  2002 format(' ','  j=jdim  periodic - angular rotation    type 2005',
>      .       '  i=',i3,',',i3,'  k=',i3,',',i3)
>  2003 format(' ','  k=   1  periodic - angular rotation    type 2005',
>      .       '  i=',i3,',',i3,'  j=',i3,',',i3)
>  2004 format(' ','  k=kdim  periodic - angular rotation    type 2005',
>      .       '  i=',i3,',',i3,'  j=',i3,',',i3)
>  2005 format(' ','  i=   1  periodic - angular rotation    type 2005',
>      .       '  j=',i3,',',i3,'  k=',i3,',',i3)
>  2006 format(' ','  i=idim  periodic - angular rotation    type 2005',
>      .       '  j=',i3,',',i3,'  k=',i3,',',i3)
>  2007 format(11x,'periodicity set from file:')
>  2008 format('           ',a60)
Index: source/cfl3d/libs/bc2005i_d.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/bc2005i_d.F,v
retrieving revision 1.4
retrieving revision 1.3
diff -r1.4 -r1.3
6c6
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
75c75
<       dimension bcdata(mdim,ndim,2,12),mblk2nd(maxbl)
---
>       dimension bcdata(mdim,ndim,2,7),mblk2nd(maxbl)
Index: source/cfl3d/libs/bc2005j_d.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/bc2005j_d.F,v
retrieving revision 1.4
retrieving revision 1.3
diff -r1.4 -r1.3
6c6
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
75c75
<       dimension bcdata(mdim,ndim,2,12),mblk2nd(maxbl)
---
>       dimension bcdata(mdim,ndim,2,7),mblk2nd(maxbl)
Index: source/cfl3d/libs/bc2005k_d.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/bc2005k_d.F,v
retrieving revision 1.4
retrieving revision 1.3
diff -r1.4 -r1.3
6c6
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
75c75
<       dimension bcdata(mdim,ndim,2,12),mblk2nd(maxbl)
---
>       dimension bcdata(mdim,ndim,2,7),mblk2nd(maxbl)
Index: source/cfl3d/libs/bc2006.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/bc2006.F,v
retrieving revision 1.5
retrieving revision 1.3
diff -r1.5 -r1.3
8c8
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
105c105
<       dimension bcdata(mdim,ndim,2,12)
---
>       dimension bcdata(mdim,ndim,2,7)
159a160,230
>       if (isklton.eq.1) then
> c
> c        check that the required auxiliary data has been set
>          iflg = 0
>          do 1 l=1,4
>          do 1 ippp=1,2
>          do 1 i=ista,iend1
>          ii = i-ista+1
>          do 1 k=ksta,kend1
>          kk = k-ksta+1
>          if (real(bcdata(kk,ii,ippp,l)) .lt. -1.e10) iflg = 1
>          if (int(abs(real(bcdata(kk,ii,ipp,3)))) .gt. 3) iflg = 1
>    1     continue
>          if (iflg.eq.1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  Stopping in bc2006:'
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  radial equilib. press. data',
>      . ' incorrectly set '
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
> c 
>          if (lijk .eq. 1 .or. lijk .eq. 3) then
> c           lijk ok
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)' stopping...abs(bcdata(3)) must be',
>      .                 ' 1 or 3 on a j=constant face'
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
> c
>          if (filname.eq.'null') then
>             if (real(bcdata(1,1,1,1)) .le. 0) then
>                pratio = bcdata(1,1,1,2)
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1001)ista,iend,ksta,kend
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1007) real(pratio)
>             else
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),4001)ista,iend,ksta,kend
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),4007) nblc
>             end if
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2001)ista,iend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2007)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2008) filname
>          end if
>          if (lijk .eq. 1 .and. ldir .eq. +1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),3005)
>          end if
>          if (lijk .eq. 1 .and. ldir .eq. -1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),3006)
>          end if
>          if (lijk .eq. 3 .and. ldir .eq. +1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),3003)
>          end if
>          if (lijk .eq. 3 .and. ldir .eq. -1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),3004)
>          end if
> c
>       end if
> c
194a266,273
>             if (isklton.eq.1) then
>                if (ista.ne.1 .or. iend.ne.idim) then
>                   nou(1) = min(nou(1)+1,ibufdim)
>                   write(bou(nou(1),1),*)'  stopping...bc segment must',
>      .            ' span the entire block face in the radial direction'
>                   call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>                end if
>             end if
278a358,365
>             if (isklton.eq.1) then
>                if (ista.ne.1 .or. iend.ne.idim) then
>                   nou(1) = min(nou(1)+1,ibufdim)
>                   write(bou(nou(1),1),*)'  stopping...bc segment must',
>      .            ' span the entire block face in the radial direction'
>                   call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>                end if
>             end if
366a454,524
>       if (isklton.eq.1) then
> c
> c        check that the required auxiliary data has been set
>          iflg = 0
>          do 2 l=1,2
>          do 2 ippp=1,2
>          do 2 i=ista,iend1
>          ii = i-ista+1
>          do 2 k=ksta,kend1
>          kk = k-ksta+1
>          if (real(bcdata(kk,ii,ippp,l)) .lt. -1.e10) iflg = 1
>          if (int(abs(real(bcdata(kk,ii,ipp,3)))) .gt. 3) iflg = 1
>    2     continue
>          if (iflg.eq.1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  Stopping in bc2006:'
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  radial equilib. press. data',
>      . ' incorrectly set '
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
> c
>          if (lijk .eq. 1 .or. lijk .eq. 3) then
> c           lijk ok
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)' stopping...abs(bcdata(3)) must be',
>      .                 ' 1 or 3 on a j=constant face'
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
> c
>          if (filname.eq.'null') then
>             if (real(bcdata(1,1,1,1)) .le. 0) then
>                pratio = bcdata(1,1,1,2)
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1002)ista,iend,ksta,kend
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1007) real(pratio)
>             else
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),4002)ista,iend,ksta,kend
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),4007) nblc
>             end if
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2002)ista,iend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2007)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2008) filname
>          end if
>          if (lijk .eq. 1 .and. ldir .eq. +1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),3005)
>          end if
>          if (lijk .eq. 1 .and. ldir .eq. -1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),3006)
>          end if
>          if (lijk .eq. 3 .and. ldir .eq. +1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),3003)
>          end if
>          if (lijk .eq. 3 .and. ldir .eq. -1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),3004)
>          end if
> c
>       end if
> c
401a560,567
>             if (isklton.eq.1) then
>                if (ista.ne.1 .or. iend.ne.idim) then
>                   nou(1) = min(nou(1)+1,ibufdim)
>                   write(bou(nou(1),1),*)'  stopping...bc segment must',
>      .            ' span the entire block face in the radial direction'
>                   call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>                end if
>             end if
485a652,659
>             if (isklton.eq.1) then
>                if (ksta.ne.1 .or. kend.ne.kdim) then
>                   nou(1) = min(nou(1)+1,ibufdim)
>                   write(bou(nou(1),1),*)'  stopping...bc segment must',
>      .            ' span the entire block face in the radial direction'
>                   call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>                end if
>             end if
572a747,817
>       if (isklton.eq.1) then
> c
> c        check that the required auxiliary data has been set
>          iflg = 0
>          do 3 l=1,4
>          do 3 ippp=1,2
>          do 3 i=ista,iend1
>          ii = i-ista+1
>          do 3 j=jsta,jend1
>          jj = j-jsta+1
>          if (real(bcdata(jj,ii,ippp,l)) .lt. -1.e10) iflg = 1
>          if (int(abs(real(bcdata(jj,ii,ipp,3)))) .gt. 3) iflg = 1
>    3     continue
>          if (iflg.eq.1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  Stopping in bc2006:'
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  radial equilib. press. data',
>      . ' incorrectly set '
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
> c
>          if (lijk .eq. 1 .or. lijk .eq. 2) then
> c           lijk ok
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)' stopping...abs(bcdata(3)) must be',
>      .                 ' 1 or 2 on a k=constant face'
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
> c
>          if (filname.eq.'null') then
>             if (real(bcdata(1,1,1,1)) .le. 0) then
>                pratio = bcdata(1,1,1,2)
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1003)ista,iend,jsta,jend
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1007) real(pratio)
>             else
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),4003)ista,iend,jsta,jend
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),4007) nblc
>             end if
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2003)ista,iend,jsta,jend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2007)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2008) filname
>          end if
>          if (lijk .eq. 2 .and. ldir .eq. +1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),3001)
>          end if
>          if (lijk .eq. 2 .and. ldir .eq. -1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),3002)
>          end if
>          if (lijk .eq. 1 .and. ldir .eq. +1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),3005)
>          end if
>          if (lijk .eq. 1 .and. ldir .eq. -1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),3006)
>          end if
> c
>       end if
> c
607a853,860
>             if (isklton.eq.1) then
>                if (ista.ne.1 .or. iend.ne.idim) then
>                   nou(1) = min(nou(1)+1,ibufdim)
>                   write(bou(nou(1),1),*)'  stopping...bc segment must',
>      .            ' span the entire block face in the radial direction'
>                   call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>                end if
>             end if
691a945,952
>             if (isklton.eq.1) then
>                if (jsta.ne.1 .or. jend.ne.jdim) then
>                   nou(1) = min(nou(1)+1,ibufdim)
>                   write(bou(nou(1),1),*)'  stopping...bc segment must',
>      .            ' span the entire block face in the radial direction'
>                   call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>                end if
>             end if
779a1041,1111
>       if (isklton.eq.1) then
> c
> c        check that the required auxiliary data has been set
>          iflg = 0
>          do 4 l=1,4
>          do 4 ippp=1,2
>          do 4 i=ista,iend1
>          ii = i-ista+1
>          do 4 j=jsta,jend1
>          jj = j-jsta+1
>          if (real(bcdata(jj,ii,ippp,l)) .lt. -1.e10) iflg = 1
>          if (int(abs(real(bcdata(jj,ii,ipp,3)))) .gt. 3) iflg = 1
>    4     continue
>          if (iflg.eq.1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  Stopping in bc2006:'
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  radial equilib. press. data',
>      . ' incorrectly set '
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
> c
>          if (lijk .eq. 1 .or. lijk .eq. 2) then
> c           lijk ok
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)' stopping...abs(bcdata(3)) must be',
>      .                 ' 1 or 2 on a k=constant face'
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
> c
>          if (filname.eq.'null') then
>             if (real(bcdata(1,1,1,1)) .le. 0) then
>                pratio = bcdata(1,1,1,2)
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1004)ista,iend,jsta,jend
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1007) real(pratio)
>             else
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),4004)ista,iend,jsta,jend
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),4007) nblc
>             end if
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2004)ista,iend,jsta,jend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2007)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2008) filname
>          end if
>          if (lijk .eq. 2 .and. ldir .eq. +1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),3001)
>          end if
>          if (lijk .eq. 2 .and. ldir .eq. -1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),3002)
>          end if
>          if (lijk .eq. 1 .and. ldir .eq. +1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),3005)
>          end if
>          if (lijk .eq. 1 .and. ldir .eq. -1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),3006)
>          end if
> c
>       end if
> c
814a1147,1154
>             if (isklton.eq.1) then
>                if (ista.ne.1 .or. iend.ne.idim) then
>                   nou(1) = min(nou(1)+1,ibufdim)
>                   write(bou(nou(1),1),*)'  stopping...bc segment must',
>      .            ' span the entire block face in the radial direction'
>                   call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>                end if
>             end if
898a1239,1246
>             if (isklton.eq.1) then
>                if (jsta.ne.1 .or. jend.ne.jdim) then
>                   nou(1) = min(nou(1)+1,ibufdim)
>                   write(bou(nou(1),1),*)'  stopping...bc segment must',
>      .            ' span the entire block face in the radial direction'
>                   call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>                end if
>             end if
987a1336,1406
>       if (isklton.eq.1) then
> c
> c        check that the required auxiliary data has been set
>          iflg = 0
>          do 5 l=1,4
>          do 5 ippp=1,2
>          do 5 k=ksta,kend1
>          kk = k-ksta+1
>          do 5 j=jsta,jend1
>          jj = j-jsta+1
>          if (real(bcdata(jj,kk,ippp,l)) .lt. -1.e10) iflg = 1
>          if (int(abs(real(bcdata(jj,kk,ipp,3)))) .gt. 3) iflg = 1
>    5     continue
>          if (iflg.eq.1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  Stopping in bc2006:'
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  radial equilib. press. data',
>      . ' incorrectly set '
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
> c
>          if (lijk .eq. 2 .or. lijk .eq. 3) then
> c           lijk ok
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)' stopping...abs(bcdata(3)) must be',
>      .                 ' 2 or 3 on an i=constant face'
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
> c
>          if (filname.eq.'null') then
>             if (real(bcdata(1,1,1,1)) .le. 0) then
>                pratio = bcdata(1,1,1,2)
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1005)jsta,jend,ksta,kend
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1007) real(pratio)
>             else
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),4005)jsta,jend,ksta,kend
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),4007) nblc
>             end if
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2005)jsta,jend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2007)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2008) filname
>          end if
>          if (lijk .eq. 2 .and. ldir .eq. +1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),3001)
>          end if
>          if (lijk .eq. 2 .and. ldir .eq. -1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),3002)
>          end if
>          if (lijk .eq. 3 .and. ldir .eq. +1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),3003)
>          end if
>          if (lijk .eq. 3 .and. ldir .eq. -1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),3004)
>          end if
> c
>       end if
> c
1022a1442,1449
>             if (isklton.eq.1) then
>                if (jsta.ne.1 .or. jend.ne.jdim) then
>                   nou(1) = min(nou(1)+1,ibufdim)
>                   write(bou(nou(1),1),*)'  stopping...bc segment must',
>      .            ' span the entire block face in the radial direction'
>                   call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>                end if
>             end if
1106a1534,1541
>             if (isklton.eq.1) then
>                if (ksta.ne.1 .or. kend.ne.kdim) then
>                   nou(1) = min(nou(1)+1,ibufdim)
>                   write(bou(nou(1),1),*)'  stopping...bc segment must',
>      .            ' span the entire block face in the radial direction'
>                   call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>                end if
>             end if
1194a1630,1700
>       if (isklton.eq.1) then
> c
> c        check that the required auxiliary data has been set
>          iflg = 0
>          do 6 l=1,4
>          do 6 ippp=1,2
>          do 6 k=ksta,kend1
>          kk = k-ksta+1
>          do 6 j=jsta,jend1
>          jj = j-jsta+1
>          if (real(bcdata(jj,kk,ippp,l)) .lt. -1.e10) iflg = 1
>          if (int(abs(real(bcdata(jj,kk,ipp,3)))) .gt. 3) iflg = 1
>    6     continue
>          if (iflg.eq.1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  Stopping in bc2006:'
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  radial equilib. press. data',
>      . ' incorrectly set '
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
> c
>          if (lijk .eq. 2 .or. lijk .eq. 3) then
> c           lijk ok
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)' stopping...abs(bcdata(3)) must be',
>      .                 ' 2 or 3 on an i=constant face'
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
> c
>          if (filname.eq.'null') then
>             if (real(bcdata(1,1,1,1)) .le. 0) then 
>                pratio = bcdata(1,1,1,2)
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1006)jsta,jend,ksta,kend
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1007) real(pratio)
>             else
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),4006)jsta,jend,ksta,kend
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),4007) nblc
>             end if
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2006)jsta,jend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2007)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2008) filname
>          end if
>          if (lijk .eq. 2 .and. ldir .eq. +1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),3001)
>          end if
>          if (lijk .eq. 2 .and. ldir .eq. -1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),3002)
>          end if
>          if (lijk .eq. 3 .and. ldir .eq. +1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),3003)
>          end if
>          if (lijk .eq. 3 .and. ldir .eq. -1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),3004)
>          end if
> c
>       end if
> c 
1229a1736,1743
>             if (isklton.eq.1) then
>                if (jsta.ne.1 .or. jend.ne.jdim) then
>                   nou(1) = min(nou(1)+1,ibufdim)
>                   write(bou(nou(1),1),*)'  stopping...bc segment must',
>      .            ' span the entire block face in the radial direction'
>                   call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>                end if
>             end if
1313a1828,1835
>             if (isklton.eq.1) then
>                if (ksta.ne.1 .or. kend.ne.kdim) then
>                   nou(1) = min(nou(1)+1,ibufdim)
>                   write(bou(nou(1),1),*)'  stopping...bc segment must',
>      .            ' span the entire block face in the radial direction'
>                   call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>                end if
>             end if
1392a1915,1964
> c
>  1001 format(' ','  j=   1  set p via radial equilibrium   type 2006',
>      .       '  i=',i3,',',i3,'  k=',i3,',',i3)
>  1002 format(' ','  j=jdim  set p via radial equilibrium   type 2006',
>      .       '  i=',i3,',',i3,'  k=',i3,',',i3)
>  1003 format(' ','  k=   1  set p via radial equilibrium   type 2006',
>      .       '  i=',i3,',',i3,'  j=',i3,',',i3)
>  1004 format(' ','  k=kdim  set p via radial equilibrium   type 2006',
>      .       '  i=',i3,',',i3,'  j=',i3,',',i3)
>  1005 format(' ','  i=   1  set p via radial equilibrium   type 2006',
>      .       '  j=',i3,',',i3,'  k=',i3,',',i3)
>  1006 format(' ','  i=idim  set p via radial equilibrium   type 2006',
>      .       '  j=',i3,',',i3,'  k=',i3,',',i3)
>  1007 format(11x,'P/Pinf     = ',f8.4)
> c
>  2001 format(' ','  j=   1  set p via radial equilibrium   type 2006',
>      .       '  i=',i3,',',i3,'  k=',i3,',',i3)
>  2002 format(' ','  j=jdim  set p via radial equilibrium   type 2006',
>      .       '  i=',i3,',',i3,'  k=',i3,',',i3)
>  2003 format(' ','  k=   1  set p via radial equilibrium   type 2006',
>      .       '  i=',i3,',',i3,'  j=',i3,',',i3)
>  2004 format(' ','  k=kdim  set p via radial equilibrium   type 2006',
>      .       '  i=',i3,',',i3,'  j=',i3,',',i3)
>  2005 format(' ','  i=   1  set p via radial equilibrium   type 2006',
>      .       '  j=',i3,',',i3,'  k=',i3,',',i3)
>  2006 format(' ','  i=idim  set p via radial equilibrium   type 2006',
>      .       '  j=',i3,',',i3,'  k=',i3,',',i3)
>  2007 format(11x,'P/Pinf set from file:')
>  2008 format('           ',a60)
> c
>  3001 format(11x,'integrated in +j direction')
>  3002 format(11x,'integrated in -j direction')
>  3003 format(11x,'integrated in +k direction')
>  3004 format(11x,'integrated in -k direction')
>  3005 format(11x,'integrated in +i direction')
>  3006 format(11x,'integrated in -i direction')
> c
>  4001 format(' ','  j=   1  set p via radial equilibrium   type 2006',
>      .       '  i=',i3,',',i3,'  k=',i3,',',i3)
>  4002 format(' ','  j=jdim  set p via radial equilibrium   type 2006',
>      .       '  i=',i3,',',i3,'  k=',i3,',',i3)
>  4003 format(' ','  k=   1  set p via radial equilibrium   type 2006',
>      .       '  i=',i3,',',i3,'  j=',i3,',',i3)
>  4004 format(' ','  k=kdim  set p via radial equilibrium   type 2006',
>      .       '  i=',i3,',',i3,'  j=',i3,',',i3)
>  4005 format(' ','  i=   1  set p via radial equilibrium   type 2006',
>      .       '  j=',i3,',',i3,'  k=',i3,',',i3)
>  4006 format(' ','  i=idim  set p via radial equilibrium   type 2006',
>      .       '  j=',i3,',',i3,'  k=',i3,',',i3)
>  4007 format(11x,'continued from block',i3)
Index: source/cfl3d/libs/bc2007.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/bc2007.F,v
retrieving revision 1.7
retrieving revision 1.5
diff -r1.7 -r1.5
7c7
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
32c32
<       dimension bcdata(mdim,ndim,2,12)
---
>       dimension bcdata(mdim,ndim,2,7)
76a77,147
>       if (isklton.eq.1) then
> c
> c        check that the required auxiliary data has been set
>          iflg = 0
>          do 1 l=1,5
>          do 1 ipp=1,2
>          do 1 i=ista,iend1
>          ii = i-ista+1
>          do 1 k=ksta,kend1
>          kk = k-ksta+1
>          if (real(bcdata(kk,ii,ipp,l)) .lt. -1.e10) iflg = 1
>    1     continue
>          if (iflg.eq.1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  Stopping in bc2007:'
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  primative variable data ',
>      .                         'incorrectly set'
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
>          if (itrflg1.gt.0 .or. itrflg2.gt.0) then
>             if (ivmx.gt.5 .and. itrflg1*itrflg2.eq.0) then
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),*)'  stopping in bc2007...must',
>      .         ' set both turbulence'
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),*)'  quantities for 2-eq turb.',
>      .         ' models...only one is set'
>                call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>             end if
>          end if
> c 
>          if (filname.eq.'null') then
>             rho1 = bcdata(1,1,1,1)
>             u1   = bcdata(1,1,1,2)
>             v1   = bcdata(1,1,1,3)
>             w1   = bcdata(1,1,1,4)
>             p1   = bcdata(1,1,1,5)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1001)ista,iend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1007) real(rho1)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1008) real(u1)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1009) real(v1)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1010) real(w1)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1011) real(p1)
>             if (itrflg1.gt.0) then
>                t1 = bcdata(1,1,1,6)
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1014) real(t1)
>             end if
>             if (itrflg2.gt.0) then
>                t2 = bcdata(1,1,1,7)
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1015) real(t2)
>             end if
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2001)ista,iend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2007)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2008)filname
>          end if
> c
>       end if
> c
157a229,299
>       if (isklton.eq.1) then
> c
> c        check that the required auxiliary data has been set
>          iflg = 0
>          do 2 l=1,5
>          do 2 ipp=1,2
>          do 2 i=ista,iend1
>          ii = i-ista+1
>          do 2 k=ksta,kend1
>          kk = k-ksta+1
>          if (real(bcdata(kk,ii,ipp,l)) .lt. -1.e10) iflg = 1
>    2     continue
>          if (iflg.eq.1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  Stopping in bc2007:'
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  primative variable data ',
>      .                         'incorrectly set'
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
>          if (itrflg1.gt.0 .or. itrflg2.gt.0) then
>             if (ivmx.gt.5 .and. itrflg1*itrflg2.eq.0) then
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),*)'  stopping in bc2007...must',
>      .         ' set both turbulence'
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),*)'  quantities for 2-eq turb.',
>      .         ' models...only one is set'
>                call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>             end if
>          end if
> c
>          if (filname.eq.'null') then
>             rho1 = bcdata(1,1,1,1)
>             u1   = bcdata(1,1,1,2)
>             v1   = bcdata(1,1,1,3)
>             w1   = bcdata(1,1,1,4)
>             p1   = bcdata(1,1,1,5)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1002)ista,iend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1007) real(rho1)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1008) real(u1)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1009) real(v1)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1010) real(w1)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1011) real(p1)
>             if (itrflg1.gt.0) then
>                t1 = bcdata(1,1,1,6)
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1014) real(t1)
>             end if
>             if (itrflg2.gt.0) then
>                t2 = bcdata(1,1,1,7)
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1015) real(t2)
>             end if
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2002)ista,iend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2007)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2008)filname
>          end if
> c
>       end if
> c
233a376,446
>       if (isklton.eq.1) then
> c
> c        check that the required auxiliary data has been set
>          iflg = 0
>          do 3 l=1,5
>          do 3 ipp=1,2
>          do 3 i=ista,iend1
>          ii = i-ista+1
>          do 3 j=jsta,jend1
>          jj = j-jsta+1
>          if (real(bcdata(jj,ii,ipp,l)) .lt. -1.e10) iflg = 1
>    3     continue
>          if (iflg.eq.1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  Stopping in bc2007:'
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  primative variable data ',
>      .                         'incorrectly set'
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
>          if (itrflg1.gt.0 .or. itrflg2.gt.0) then
>             if (ivmx.gt.5 .and. itrflg1*itrflg2.eq.0) then
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),*)'  stopping in bc2007...must',
>      .         ' set both turbulence'
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),*)'  quantities for 2-eq turb.',
>      .         ' models...only one is set'
>                call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>             end if
>          end if
> c
>          if (filname.eq.'null') then
>             rho1 = bcdata(1,1,1,1)
>             u1   = bcdata(1,1,1,2)
>             v1   = bcdata(1,1,1,3)
>             w1   = bcdata(1,1,1,4)
>             p1   = bcdata(1,1,1,5)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1003)ista,iend,jsta,jend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1007) real(rho1)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1008) real(u1)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1009) real(v1)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1010) real(w1)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1011) real(p1)
>             if (itrflg1.gt.0) then
>                t1 = bcdata(1,1,1,6)
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1014) real(t1)
>             end if
>             if (itrflg2.gt.0) then
>                t2 = bcdata(1,1,1,7)
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1015) real(t2)
>             end if
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2003)ista,iend,jsta,jend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2007)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2008)filname
>          end if
> c
>       end if
> c
309a523,593
>       if (isklton.eq.1) then
> c
> c        check that the required auxiliary data has been set
>          iflg = 0
>          do 4 l=1,5
>          do 4 ipp=1,2
>          do 4 i=ista,iend1
>          ii = i-ista+1
>          do 4 j=jsta,jend1
>          jj = j-jsta+1
>          if (real(bcdata(jj,ii,ipp,l)) .lt. -1.e10) iflg = 1
>    4     continue
>          if (iflg.eq.1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  Stopping in bc2007:'
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  primative variable data ',
>      .                         'incorrectly set'
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
>          if (itrflg1.gt.0 .or. itrflg2.gt.0) then
>             if (ivmx.gt.5 .and. itrflg1*itrflg2.eq.0) then
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),*)'  stopping in bc2007...must',
>      .         ' set both turbulence'
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),*)'  quantities for 2-eq turb.',
>      .         ' models...only one is set'
>                call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>             end if
>          end if
> c
>          if (filname.eq.'null') then
>             rho1 = bcdata(1,1,1,1)
>             u1   = bcdata(1,1,1,2)
>             v1   = bcdata(1,1,1,3)
>             w1   = bcdata(1,1,1,4)
>             p1   = bcdata(1,1,1,5)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1004)ista,iend,jsta,jend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1007) real(rho1)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1008) real(u1)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1009) real(v1)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1010) real(w1)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1011) real(p1)
>             if (itrflg1.gt.0) then
>                t1 = bcdata(1,1,1,6)
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1014) real(t1)
>             end if
>             if (itrflg2.gt.0) then
>                t2 = bcdata(1,1,1,7)
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1015) real(t2)
>             end if
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2004)ista,iend,jsta,jend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2007)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2008)filname
>          end if
> c
>       end if
> c
385a670,740
>       if (isklton.eq.1) then
> c
> c        check that the required auxiliary data has been set
>          iflg = 0
>          do 5 l=1,5
>          do 5 ipp=1,2
>          do 5 k=ksta,kend1
>          kk = k-ksta+1
>          do 5 j=jsta,jend1
>          jj = j-jsta+1
>          if (real(bcdata(jj,kk,ipp,l)) .lt. -1.e10) iflg = 1
>    5     continue
>          if (iflg.eq.1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  Stopping in bc2007:'
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  primative variable data ',
>      .                         'incorrectly set'
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
>          if (itrflg1.gt.0 .or. itrflg2.gt.0) then
>             if (ivmx.gt.5 .and. itrflg1*itrflg2.eq.0) then
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),*)'  stopping in bc2007...must',
>      .         ' set both turbulence'
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),*)'  quantities for 2-eq turb.',
>      .         ' models...only one is set'
>                call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>             end if
>          end if
> c
>          if (filname.eq.'null') then
>             rho1 = bcdata(1,1,1,1)
>             u1   = bcdata(1,1,1,2)
>             v1   = bcdata(1,1,1,3)
>             w1   = bcdata(1,1,1,4)
>             p1   = bcdata(1,1,1,5)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1005)jsta,jend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1007) real(rho1)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1008) real(u1)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1009) real(v1)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1010) real(w1)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1011) real(p1)
>             if (itrflg1.gt.0) then
>                t1 = bcdata(1,1,1,6)
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1014) real(t1)
>             end if
>             if (itrflg2.gt.0) then
>                t2 = bcdata(1,1,1,7)
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1015) real(t2)
>             end if
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2005)jsta,jend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2007)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2008)filname
>          end if
> c
>       end if
> c
461a817,887
>       if (isklton.eq.1) then
> c
> c        check that the required auxiliary data has been set
>          iflg = 0
>          do 6 l=1,5
>          do 6 ipp=1,2
>          do 6 k=ksta,kend1
>          kk = k-ksta+1
>          do 6 j=jsta,jend1
>          jj = j-jsta+1
>          if (real(bcdata(jj,kk,ipp,l)) .lt. -1.e10) iflg = 1
>    6     continue
>          if (iflg.eq.1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  Stopping in bc2007:'
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  primative variable data ',
>      .                         'incorrectly set'
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
>          if (itrflg1.gt.0 .or. itrflg2.gt.0) then
>             if (ivmx.gt.5 .and. itrflg1*itrflg2.eq.0) then
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),*)'  stopping in bc2007...must',
>      .         ' set both turbulence'
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),*)'  quantities for 2-eq turb.',
>      .         ' models...only one is set'
>                call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>             end if
>          end if
> c
>          if (filname.eq.'null') then
>             rho1 = bcdata(1,1,1,1)
>             u1   = bcdata(1,1,1,2)
>             v1   = bcdata(1,1,1,3)
>             w1   = bcdata(1,1,1,4)
>             p1   = bcdata(1,1,1,5)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1006)jsta,jend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1007) real(rho1)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1008) real(u1)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1009) real(v1)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1010) real(w1)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1011) real(p1)
>             if (itrflg1.gt.0) then
>                t1 = bcdata(1,1,1,6)
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1014) real(t1)
>             end if
>             if (itrflg2.gt.0) then
>                t2 = bcdata(1,1,1,7)
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1015) real(t2)
>             end if
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2006)jsta,jend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2007)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2008)filname
>          end if
> c
>       end if
> c
520a947,981
> c
>  1001 format(' ','  j=   1  set all primative variables    type 2007',
>      .       '  i=',i3,',',i3,'  k=',i3,',',i3)
>  1002 format(' ','  j=jdim  set all primative variables    type 2007',
>      .       '  i=',i3,',',i3,'  k=',i3,',',i3)
>  1003 format(' ','  k=   1  set all primative variables    type 2007',
>      .       '  i=',i3,',',i3,'  j=',i3,',',i3)
>  1004 format(' ','  k=kdim  set all primative variables    type 2007',
>      .       '  i=',i3,',',i3,'  j=',i3,',',i3)
>  1005 format(' ','  i=   1  set all primative variables    type 2007',
>      .       '  j=',i3,',',i3,'  k=',i3,',',i3)
>  1006 format(' ','  i=idim  set all primative variables    type 2007',
>      .       '  j=',i3,',',i3,'  k=',i3,',',i3)
>  1007 format(11x,'rho/rhoinf       = ',f8.4)
>  1008 format(11x,'u/ainf           = ',f8.4)
>  1009 format(11x,'v/ainf           = ',f8.4)
>  1010 format(11x,'w/ainf           = ',f8.4)
>  1011 format(11x,'p/rhoinf/ainf**2 = ',f8.4)
>  1014 format(11x,'turb1 (nondim)   = ',e12.4)
>  1015 format(11x,'turb2 (nondim)   = ',e12.4)
> c
>  2001 format(' ','  j=   1  set all primative variables    type 2007',
>      .       '  i=',i3,',',i3,'  k=',i3,',',i3)
>  2002 format(' ','  j=jdim  set all primative variables    type 2007',
>      .       '  i=',i3,',',i3,'  k=',i3,',',i3)
>  2003 format(' ','  k=   1  set all primative variables    type 2007',
>      .       '  i=',i3,',',i3,'  j=',i3,',',i3)
>  2004 format(' ','  k=kdim  set all primative variables    type 2007',
>      .       '  i=',i3,',',i3,'  j=',i3,',',i3)
>  2005 format(' ','  i=   1  set all primative variables    type 2007',
>      .       '  j=',i3,',',i3,'  k=',i3,',',i3)
>  2006 format(' ','  i=idim  set all primative variables    type 2007',
>      .       '  j=',i3,',',i3,'  k=',i3,',',i3)
>  2007 format(11x,'primative variables set from file:')
>  2008 format('           ',a60)
Index: source/cfl3d/libs/bc2008.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/bc2008.F,v
retrieving revision 1.7
retrieving revision 1.5
diff -r1.7 -r1.5
5c5
<      .                  filname,iuns,nou,bou,nbuf,ibufdim,myid,iflag)
---
>      .                  filname,iuns,nou,bou,nbuf,ibufdim,myid)
7c7
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
31c31
<       dimension bcdata(mdim,ndim,2,12)
---
>       dimension bcdata(mdim,ndim,2,7)
44,47d43
<       common /fluid/ gamma,gm1,gp1,gm1g,gp1g,ggm1
<       common /unst/ time,cfltau,ntstep,ita,iunst
< c
<       twopi = 8.0*atan(1.0)
81a78,145
>       if (isklton.eq.1) then
> c
> c        check that the required auxiliary data has been set
>          iflg = 0
>          do 1 l=1,4
>          do 1 ipp=1,2
>          do 1 i=ista,iend1
>          ii = i-ista+1
>          do 1 k=ksta,kend1
>          kk = k-ksta+1
>          if (real(bcdata(kk,ii,ipp,l)) .lt. -1.e10) iflg = 1
>    1     continue
>          if (iflg.eq.1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  Stopping in bc2008:'
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  variable data incorrectly set '
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
>          if (itrflg1.gt.0 .or. itrflg2.gt.0) then
>             if (ivmx.gt.5 .and. itrflg1*itrflg2.eq.0) then
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),*)'  stopping in bc2008...must',
>      .         ' set both turbulence'
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),*)'  quantities for 2-eq turb.',
>      .         ' models...only one is set'
>                call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>             end if
>          end if
> c 
>          if (filname.eq.'null') then
>             rho1 = bcdata(1,1,1,1)
>             u1   = bcdata(1,1,1,2)
>             v1   = bcdata(1,1,1,3)
>             w1   = bcdata(1,1,1,4)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1001)ista,iend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1007) real(rho1)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1008) real(u1)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1009) real(v1)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1010) real(w1)
>             nou(1) = min(nou(1)+1,ibufdim)
>             if (itrflg1.gt.0) then
>                t1 = bcdata(1,1,1,5)
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1011) real(t1)
>             end if
>             if (itrflg2.gt.0) then
>                t2 = bcdata(1,1,1,6)
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1012) real(t2)
>             end if
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2001)ista,iend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2007)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2008)filname
>          end if
> c
>       end if
> c
88d151
<          if (iflag .eq. 2008) then
94,109d156
<          else if (iflag .eq. 2018) then
<          qj0(k,i,5,ip) = q(1,k,i,5)
<          qj0(k,i,1,ip) = gamma*qj0(k,i,5,ip)/bcdata(kk,ii,ip,1)
<          qj0(k,i,2,ip) = bcdata(kk,ii,ip,2)/qj0(k,i,1,ip)
<          qj0(k,i,3,ip) = bcdata(kk,ii,ip,3)/qj0(k,i,1,ip)
<          qj0(k,i,4,ip) = bcdata(kk,ii,ip,4)/qj0(k,i,1,ip)
<          else if (iflag .eq. 2028) then
<          qj0(k,i,1,ip) = q(1,k,i,1)
<          qj0(k,i,2,ip) = bcdata(kk,ii,ip,2)/qj0(k,i,1,ip)*
<      +     cos(twopi*bcdata(kk,ii,ip,1)*time)
<          qj0(k,i,3,ip) = bcdata(kk,ii,ip,3)/qj0(k,i,1,ip)*
<      +     cos(twopi*bcdata(kk,ii,ip,1)*time)
<          qj0(k,i,4,ip) = bcdata(kk,ii,ip,4)/qj0(k,i,1,ip)*
<      +     cos(twopi*bcdata(kk,ii,ip,1)*time)
<          qj0(k,i,5,ip) = q(1,k,i,5)
<          end if
118d164
<          if (iflag .eq. 2008) then
124,139d169
<          else if (iflag .eq. 2018) then
<          qj0(k,i,5,ip) =  q(1,k,i,5)
<          qj0(k,i,1,ip) =  gamma*qj0(k,i,5,ip)/bcdata(kk,ii,ip,1)
<          qj0(k,i,2,ip) =  bcdata(kk,ii,ip,2)/qj0(k,i,1,ip)
<          qj0(k,i,3,ip) = -bcdata(kk,ii,ip,4)/qj0(k,i,1,ip)
<          qj0(k,i,4,ip) =  bcdata(kk,ii,ip,3)/qj0(k,i,1,ip)
<          else if (iflag .eq. 2028) then
<          qj0(k,i,1,ip) =  q(1,k,i,1)
<          qj0(k,i,2,ip) =  bcdata(kk,ii,ip,2)/qj0(k,i,1,ip)*
<      +     cos(twopi*bcdata(kk,ii,ip,1)*time)
<          qj0(k,i,3,ip) = -bcdata(kk,ii,ip,4)/qj0(k,i,1,ip)*
<      +     cos(twopi*bcdata(kk,ii,ip,1)*time)
<          qj0(k,i,4,ip) =  bcdata(kk,ii,ip,3)/qj0(k,i,1,ip)*
<      +     cos(twopi*bcdata(kk,ii,ip,1)*time)
<          qj0(k,i,5,ip) =  q(1,k,i,5)
<          end if
187a218,285
>       if (isklton.eq.1) then
> c
> c        check that the required auxiliary data has been set
>          iflg = 0
>          do 2 l=1,4
>          do 2 ipp=1,2
>          do 2 i=ista,iend1
>          ii = i-ista+1
>          do 2 k=ksta,kend1
>          kk = k-ksta+1
>          if (real(bcdata(kk,ii,ipp,l)) .lt. -1.e10) iflg = 1
>    2     continue
>          if (iflg.eq.1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  Stopping in bc2008:'
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  variable data incorrectly set '
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
>          if (itrflg1.gt.0 .or. itrflg2.gt.0) then
>             if (ivmx.gt.5 .and. itrflg1*itrflg2.eq.0) then
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),*)'  stopping in bc2008...must',
>      .         ' set both turbulence'
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),*)'  quantities for 2-eq turb.',
>      .         ' models...only one is set'
>                call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>             end if
>          end if
> c
>          if (filname.eq.'null') then
>             rho1 = bcdata(1,1,1,1)
>             u1   = bcdata(1,1,1,2)
>             v1   = bcdata(1,1,1,3)
>             w1   = bcdata(1,1,1,4)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1002)ista,iend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1007) real(rho1)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1008) real(u1)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1009) real(v1)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1010) real(w1)
>             nou(1) = min(nou(1)+1,ibufdim)
>             if (itrflg1.gt.0) then
>                t1 = bcdata(1,1,1,5)
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1011) real(t1)
>             end if
>             if (itrflg2.gt.0) then
>                t2 = bcdata(1,1,1,6)
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1012) real(t2)
>             end if
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2002)ista,iend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2007)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2008)filname
>          end if
> c
>       end if
> c
194d291
<          if (iflag .eq. 2008) then
200,215d296
<          else if (iflag .eq. 2018) then
<          qj0(k,i,5,ip+2) = q(jdim1,k,i,5)
<          qj0(k,i,1,ip+2) = gamma*qj0(k,i,5,ip+2)/bcdata(kk,ii,ip,1)
<          qj0(k,i,2,ip+2) = bcdata(kk,ii,ip,2)/qj0(k,i,1,ip+2)
<          qj0(k,i,3,ip+2) = bcdata(kk,ii,ip,3)/qj0(k,i,1,ip+2)
<          qj0(k,i,4,ip+2) = bcdata(kk,ii,ip,4)/qj0(k,i,1,ip+2)
<          else if (iflag .eq. 2028) then
<          qj0(k,i,1,ip+2) = q(jdim1,k,i,1)
<          qj0(k,i,2,ip+2) = bcdata(kk,ii,ip,2)/qj0(k,i,1,ip+2)*
<      +     cos(twopi*bcdata(kk,ii,ip,1)*time)
<          qj0(k,i,3,ip+2) = bcdata(kk,ii,ip,3)/qj0(k,i,1,ip+2)*
<      +     cos(twopi*bcdata(kk,ii,ip,1)*time)
<          qj0(k,i,4,ip+2) = bcdata(kk,ii,ip,4)/qj0(k,i,1,ip+2)*
<      +     cos(twopi*bcdata(kk,ii,ip,1)*time)
<          qj0(k,i,5,ip+2) = q(jdim1,k,i,5)
<          end if
224d304
<          if (iflag .eq. 2008) then
230,245d309
<          else if (iflag .eq. 2018) then
<          qj0(k,i,5,ip+2) =  q(jdim1,k,i,5)
<          qj0(k,i,1,ip+2) =  gamma*qj0(k,i,5,ip+2)/bcdata(kk,ii,ip,1)
<          qj0(k,i,2,ip+2) =  bcdata(kk,ii,ip,2)/qj0(k,i,1,ip+2)
<          qj0(k,i,3,ip+2) = -bcdata(kk,ii,ip,4)/qj0(k,i,1,ip+2)
<          qj0(k,i,4,ip+2) =  bcdata(kk,ii,ip,3)/qj0(k,i,1,ip+2)
<          else if (iflag .eq. 2028) then
<          qj0(k,i,1,ip+2) =  q(jdim1,k,i,1)
<          qj0(k,i,2,ip+2) =  bcdata(kk,ii,ip,2)/qj0(k,i,1,ip+2)*
<      +     cos(twopi*bcdata(kk,ii,ip,1)*time)
<          qj0(k,i,3,ip+2) = -bcdata(kk,ii,ip,4)/qj0(k,i,1,ip+2)*
<      +     cos(twopi*bcdata(kk,ii,ip,1)*time)
<          qj0(k,i,4,ip+2) =  bcdata(kk,ii,ip,3)/qj0(k,i,1,ip+2)*
<      +     cos(twopi*bcdata(kk,ii,ip,1)*time)
<          qj0(k,i,5,ip+2) =  q(jdim1,k,i,5)
<          end if
293a358,425
>       if (isklton.eq.1) then
> c
> c        check that the required auxiliary data has been set
>          iflg = 0
>          do 3 l=1,4
>          do 3 ipp=1,2
>          do 3 i=ista,iend1
>          ii = i-ista+1
>          do 3 j=jsta,jend1
>          jj = j-jsta+1
>          if (real(bcdata(jj,ii,ipp,l)) .lt. -1.e10) iflg = 1
>    3     continue
>          if (iflg.eq.1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  Stopping in bc2008:'
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  variable data incorrectly set '
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
>          if (itrflg1.gt.0 .or. itrflg2.gt.0) then
>             if (ivmx.gt.5 .and. itrflg1*itrflg2.eq.0) then
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),*)'  stopping in bc2008...must',
>      .         ' set both turbulence'
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),*)'  quantities for 2-eq turb.',
>      .         ' models...only one is set'
>                call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>             end if
>          end if
> c
>          if (filname.eq.'null') then
>             rho1 = bcdata(1,1,1,1)
>             u1   = bcdata(1,1,1,2)
>             v1   = bcdata(1,1,1,3)
>             w1   = bcdata(1,1,1,4)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1003)ista,iend,jsta,jend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1007) real(rho1)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1008) real(u1)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1009) real(v1)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1010) real(w1)
>             nou(1) = min(nou(1)+1,ibufdim)
>             if (itrflg1.gt.0) then
>                t1 = bcdata(1,1,1,5)
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1011) real(t1)
>             end if
>             if (itrflg2.gt.0) then
>                t2 = bcdata(1,1,1,6)
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1012) real(t2)
>             end if
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2003)ista,iend,jsta,jend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2007)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2008)filname
>          end if
> c
>       end if
> c
300d431
<          if (iflag .eq. 2008) then
306,321d436
<          else if (iflag .eq. 2018) then
<          qk0(j,i,5,ip) = q(j,1,i,5)
<          qk0(j,i,1,ip) = gamma*qk0(j,i,5,ip)/bcdata(jj,ii,ip,1)
<          qk0(j,i,2,ip) = bcdata(jj,ii,ip,2)/qk0(j,i,1,ip)
<          qk0(j,i,3,ip) = bcdata(jj,ii,ip,3)/qk0(j,i,1,ip)
<          qk0(j,i,4,ip) = bcdata(jj,ii,ip,4)/qk0(j,i,1,ip)
<          else if (iflag .eq. 2028) then
<          qk0(j,i,1,ip) = q(j,1,i,1)
<          qk0(j,i,2,ip) = bcdata(jj,ii,ip,2)/qk0(j,i,1,ip)*
<      +     cos(twopi*bcdata(jj,ii,ip,1)*time)
<          qk0(j,i,3,ip) = bcdata(jj,ii,ip,3)/qk0(j,i,1,ip)*
<      +     cos(twopi*bcdata(jj,ii,ip,1)*time)
<          qk0(j,i,4,ip) = bcdata(jj,ii,ip,4)/qk0(j,i,1,ip)*
<      +     cos(twopi*bcdata(jj,ii,ip,1)*time)
<          qk0(j,i,5,ip) = q(j,1,i,5)
<          end if
330d444
<          if (iflag .eq. 2008) then
336,351d449
<          else if (iflag .eq. 2018) then
<          qk0(j,i,5,ip) =  q(j,1,i,5)
<          qk0(j,i,1,ip) =  gamma*qk0(j,i,5,ip)/bcdata(jj,ii,ip,1)
<          qk0(j,i,2,ip) =  bcdata(jj,ii,ip,2)/qk0(j,i,1,ip)
<          qk0(j,i,3,ip) = -bcdata(jj,ii,ip,4)/qk0(j,i,1,ip)
<          qk0(j,i,4,ip) =  bcdata(jj,ii,ip,3)/qk0(j,i,1,ip)
<          else if (iflag .eq. 2028) then
<          qk0(j,i,1,ip) =  q(j,1,i,1)
<          qk0(j,i,2,ip) =  bcdata(jj,ii,ip,2)/qk0(j,i,1,ip)*
<      +     cos(twopi*bcdata(jj,ii,ip,1)*time)
<          qk0(j,i,3,ip) = -bcdata(jj,ii,ip,4)/qk0(j,i,1,ip)*
<      +     cos(twopi*bcdata(jj,ii,ip,1)*time)
<          qk0(j,i,4,ip) =  bcdata(jj,ii,ip,3)/qk0(j,i,1,ip)*
<      +     cos(twopi*bcdata(jj,ii,ip,1)*time)
<          qk0(j,i,5,ip) =  q(j,1,i,5)
<          end if
399a498,565
>       if (isklton.eq.1) then
> c
> c        check that the required auxiliary data has been set
>          iflg = 0
>          do 4 l=1,4
>          do 4 ipp=1,2
>          do 4 i=ista,iend1
>          ii = i-ista+1
>          do 4 j=jsta,jend1
>          jj = j-jsta+1
>          if (real(bcdata(jj,ii,ipp,l)) .lt. -1.e10) iflg = 1
>    4     continue
>          if (iflg.eq.1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  Stopping in bc2008:'
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  variable data incorrectly set '
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
>          if (itrflg1.gt.0 .or. itrflg2.gt.0) then
>             if (ivmx.gt.5 .and. itrflg1*itrflg2.eq.0) then
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),*)'  stopping in bc2008...must',
>      .         ' set both turbulence'
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),*)'  quantities for 2-eq turb.',
>      .         ' models...only one is set'
>                call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>             end if
>          end if
> c
>          if (filname.eq.'null') then
>             rho1 = bcdata(1,1,1,1)
>             u1   = bcdata(1,1,1,2)
>             v1   = bcdata(1,1,1,3)
>             w1   = bcdata(1,1,1,4)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1004)ista,iend,jsta,jend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1007) real(rho1)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1008) real(u1)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1009) real(v1)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1010) real(w1)
>             nou(1) = min(nou(1)+1,ibufdim)
>             if (itrflg1.gt.0) then
>                t1 = bcdata(1,1,1,5)
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1011) real(t1)
>             end if
>             if (itrflg2.gt.0) then
>                t2 = bcdata(1,1,1,6)
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1012) real(t2)
>             end if
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2004)ista,iend,jsta,jend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2007)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2008)filname
>          end if
> c
>       end if
> c
406d571
<          if (iflag .eq. 2008) then
412,427d576
<          else if (iflag .eq. 2018) then
<          qk0(j,i,5,ip+2) = q(j,kdim1,i,5)
<          qk0(j,i,1,ip+2) = gamma*qk0(j,i,5,ip+2)/bcdata(jj,ii,ip,1)
<          qk0(j,i,2,ip+2) = bcdata(jj,ii,ip,2)/qk0(j,i,1,ip+2)
<          qk0(j,i,3,ip+2) = bcdata(jj,ii,ip,3)/qk0(j,i,1,ip+2)
<          qk0(j,i,4,ip+2) = bcdata(jj,ii,ip,4)/qk0(j,i,1,ip+2)
<          else if (iflag .eq. 2028) then
<          qk0(j,i,1,ip+2) = q(j,kdim1,i,1)
<          qk0(j,i,2,ip+2) = bcdata(jj,ii,ip,2)/qk0(j,i,1,ip+2)*
<      +     cos(twopi*bcdata(jj,ii,ip,1)*time)
<          qk0(j,i,3,ip+2) = bcdata(jj,ii,ip,3)/qk0(j,i,1,ip+2)*
<      +     cos(twopi*bcdata(jj,ii,ip,1)*time)
<          qk0(j,i,4,ip+2) = bcdata(jj,ii,ip,4)/qk0(j,i,1,ip+2)*
<      +     cos(twopi*bcdata(jj,ii,ip,1)*time)
<          qk0(j,i,5,ip+2) = q(j,kdim1,i,5)
<          end if
436d584
<          if (iflag .eq. 2008) then
442,457d589
<          else if (iflag .eq. 2018) then
<          qk0(j,i,5,ip+2) =  q(j,kdim1,i,5)
<          qk0(j,i,1,ip+2) =  gamma*qk0(j,i,5,ip+2)/bcdata(jj,ii,ip,1)
<          qk0(j,i,2,ip+2) =  bcdata(jj,ii,ip,2)/qk0(j,i,1,ip+2)
<          qk0(j,i,3,ip+2) = -bcdata(jj,ii,ip,4)/qk0(j,i,1,ip+2)
<          qk0(j,i,4,ip+2) =  bcdata(jj,ii,ip,3)/qk0(j,i,1,ip+2)
<          else if (iflag .eq. 2028) then
<          qk0(j,i,1,ip+2) =  q(j,kdim1,i,1)
<          qk0(j,i,2,ip+2) =  bcdata(jj,ii,ip,2)/qk0(j,i,1,ip+2)*
<      +     cos(twopi*bcdata(jj,ii,ip,1)*time)
<          qk0(j,i,3,ip+2) = -bcdata(jj,ii,ip,4)/qk0(j,i,1,ip+2)*
<      +     cos(twopi*bcdata(jj,ii,ip,1)*time)
<          qk0(j,i,4,ip+2) =  bcdata(jj,ii,ip,3)/qk0(j,i,1,ip+2)*
<      +     cos(twopi*bcdata(jj,ii,ip,1)*time)
<          qk0(j,i,5,ip+2) =  q(j,kdim1,i,5)
<          end if
505a638,705
>       if (isklton.eq.1) then
> c
> c        check that the required auxiliary data has been set
>          iflg = 0
>          do 5 l=1,4
>          do 5 ipp=1,2
>          do 5 k=ksta,kend1
>          kk = k-ksta+1
>          do 5 j=jsta,jend1
>          jj = j-jsta+1
>          if (real(bcdata(jj,kk,ipp,l)) .lt. -1.e10) iflg = 1
>    5     continue
>          if (iflg.eq.1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  Stopping in bc2008:'
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  variable data incorrectly set '
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
>          if (itrflg1.gt.0 .or. itrflg2.gt.0) then
>             if (ivmx.gt.5 .and. itrflg1*itrflg2.eq.0) then
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),*)'  stopping in bc2008...must',
>      .         ' set both turbulence'
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),*)'  quantities for 2-eq turb.',
>      .         ' models...only one is set'
>                call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>             end if
>          end if
> c
>          if (filname.eq.'null') then
>             rho1 = bcdata(1,1,1,1)
>             u1   = bcdata(1,1,1,2)
>             v1   = bcdata(1,1,1,3)
>             w1   = bcdata(1,1,1,4)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1005)jsta,jend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1007) real(rho1)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1008) real(u1)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1009) real(v1)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1010) real(w1)
>             nou(1) = min(nou(1)+1,ibufdim)
>             if (itrflg1.gt.0) then
>                t1 = bcdata(1,1,1,5)
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1011) real(t1)
>             end if
>             if (itrflg2.gt.0) then
>                t2 = bcdata(1,1,1,6)
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1012) real(t2)
>             end if
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2005)jsta,jend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2007)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2008)filname
>          end if
> c
>       end if
> c
512d711
<          if (iflag .eq. 2008) then
518,533d716
<          else if (iflag .eq. 2018) then
<          qi0(j,k,5,ip) = q(j,k,1,5)
<          qi0(j,k,1,ip) = gamma*qi0(j,k,5,ip)/bcdata(jj,kk,ip,1)
<          qi0(j,k,2,ip) = bcdata(jj,kk,ip,2)/qi0(j,k,1,ip)
<          qi0(j,k,3,ip) = bcdata(jj,kk,ip,3)/qi0(j,k,1,ip)
<          qi0(j,k,4,ip) = bcdata(jj,kk,ip,4)/qi0(j,k,1,ip)
<          else if (iflag .eq. 2028) then
<          qi0(j,k,1,ip) = q(j,k,1,1)
<          qi0(j,k,2,ip) = bcdata(jj,kk,ip,2)/qi0(j,k,1,ip)*
<      +     cos(twopi*bcdata(jj,kk,ip,1)*time)
<          qi0(j,k,3,ip) = bcdata(jj,kk,ip,3)/qi0(j,k,1,ip)*
<      +     cos(twopi*bcdata(jj,kk,ip,1)*time)
<          qi0(j,k,4,ip) = bcdata(jj,kk,ip,4)/qi0(j,k,1,ip)*
<      +     cos(twopi*bcdata(jj,kk,ip,1)*time)
<          qi0(j,k,5,ip) = q(j,k,1,5)
<          end if
542d724
<          if (iflag .eq. 2008) then
548,563d729
<          else if (iflag .eq. 2018) then
<          qi0(j,k,5,ip) =  q(j,k,1,5)
<          qi0(j,k,1,ip) =  gamma*qi0(j,k,5,ip)/bcdata(jj,kk,ip,1)
<          qi0(j,k,2,ip) =  bcdata(jj,kk,ip,2)/qi0(j,k,1,ip)
<          qi0(j,k,3,ip) = -bcdata(jj,kk,ip,4)/qi0(j,k,1,ip)
<          qi0(j,k,4,ip) =  bcdata(jj,kk,ip,3)/qi0(j,k,1,ip)
<          else if (iflag .eq. 2028) then
<          qi0(j,k,1,ip) =  q(j,k,1,1)
<          qi0(j,k,2,ip) =  bcdata(jj,kk,ip,2)/qi0(j,k,1,ip)*
<      +     cos(twopi*bcdata(jj,kk,ip,1)*time)
<          qi0(j,k,3,ip) = -bcdata(jj,kk,ip,4)/qi0(j,k,1,ip)*
<      +     cos(twopi*bcdata(jj,kk,ip,1)*time)
<          qi0(j,k,4,ip) =  bcdata(jj,kk,ip,3)/qi0(j,k,1,ip)*
<      +     cos(twopi*bcdata(jj,kk,ip,1)*time)
<          qi0(j,k,5,ip) =  q(j,k,1,5)
<          end if
611a778,845
>       if (isklton.eq.1) then
> c
> c        check that the required auxiliary data has been set
>          iflg = 0
>          do 6 l=1,4
>          do 6 ipp=1,2
>          do 6 k=ksta,kend1
>          kk = k-ksta+1
>          do 6 j=jsta,jend1
>          jj = j-jsta+1
>          if (real(bcdata(jj,kk,ipp,l)) .lt. -1.e10) iflg = 1
>    6     continue
>          if (iflg.eq.1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  Stopping in bc2008:'
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  variable data incorrectly set '
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
>          if (itrflg1.gt.0 .or. itrflg2.gt.0) then
>             if (ivmx.gt.5 .and. itrflg1*itrflg2.eq.0) then
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),*)'  stopping in bc2008...must',
>      .         ' set both turbulence'
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),*)'  quantities for 2-eq turb.',
>      .         ' models...only one is set'
>                call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>             end if
>          end if
> c
>          if (filname.eq.'null') then
>             rho1 = bcdata(1,1,1,1)
>             u1   = bcdata(1,1,1,2)
>             v1   = bcdata(1,1,1,3)
>             w1   = bcdata(1,1,1,4)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1006)jsta,jend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1007) real(rho1)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1008) real(u1)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1009) real(v1)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1010) real(w1)
>             nou(1) = min(nou(1)+1,ibufdim)
>             if (itrflg1.gt.0) then
>                t1 = bcdata(1,1,1,5)
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1011) real(t1)
>             end if
>             if (itrflg2.gt.0) then
>                t2 = bcdata(1,1,1,6)
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1012) real(t2)
>             end if
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2006)jsta,jend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2007)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2008)filname
>          end if
> c
>       end if
> c
618d851
<          if (iflag .eq. 2008) then
624,639d856
<          else if (iflag .eq. 2018) then
<          qi0(j,k,5,ip+2) = q(j,k,idim1,5)
<          qi0(j,k,1,ip+2) = gamma*qi0(j,k,5,ip+2)/bcdata(jj,kk,ip,1)
<          qi0(j,k,2,ip+2) = bcdata(jj,kk,ip,2)/qi0(j,k,1,ip+2)
<          qi0(j,k,3,ip+2) = bcdata(jj,kk,ip,3)/qi0(j,k,1,ip+2)
<          qi0(j,k,4,ip+2) = bcdata(jj,kk,ip,4)/qi0(j,k,1,ip+2)
<          else if (iflag .eq. 2028) then
<          qi0(j,k,1,ip+2) = q(j,k,idim1,1)
<          qi0(j,k,2,ip+2) = bcdata(jj,kk,ip,2)/qi0(j,k,1,ip+2)*
<      +     cos(twopi*bcdata(jj,kk,ip,1)*time)
<          qi0(j,k,3,ip+2) = bcdata(jj,kk,ip,3)/qi0(j,k,1,ip+2)*
<      +     cos(twopi*bcdata(jj,kk,ip,1)*time)
<          qi0(j,k,4,ip+2) = bcdata(jj,kk,ip,4)/qi0(j,k,1,ip+2)*
<      +     cos(twopi*bcdata(jj,kk,ip,1)*time)
<          qi0(j,k,5,ip+2) = q(j,k,idim1,5)
<          end if
648d864
<          if (iflag .eq. 2008) then
654,669d869
<          else if (iflag .eq. 2018) then
<          qi0(j,k,5,ip+2) =  q(j,k,idim1,5)
<          qi0(j,k,1,ip+2) =  gamma*qi0(j,k,5,ip+2)/bcdata(jj,kk,ip,1)
<          qi0(j,k,2,ip+2) =  bcdata(jj,kk,ip,2)/qi0(j,k,1,ip+2)
<          qi0(j,k,3,ip+2) = -bcdata(jj,kk,ip,4)/qi0(j,k,1,ip+2)
<          qi0(j,k,4,ip+2) =  bcdata(jj,kk,ip,3)/qi0(j,k,1,ip+2)
<          else if (iflag .eq. 2028) then
<          qi0(j,k,1,ip+2) =  q(j,k,idim1,1)
<          qi0(j,k,2,ip+2) =  bcdata(jj,kk,ip,2)/qi0(j,k,1,ip+2)*
<      +     cos(twopi*bcdata(jj,kk,ip,1)*time)
<          qi0(j,k,3,ip+2) = -bcdata(jj,kk,ip,4)/qi0(j,k,1,ip+2)*
<      +     cos(twopi*bcdata(jj,kk,ip,1)*time)
<          qi0(j,k,4,ip+2) =  bcdata(jj,kk,ip,3)/qi0(j,k,1,ip+2)*
<      +     cos(twopi*bcdata(jj,kk,ip,1)*time)
<          qi0(j,k,5,ip+2) =  q(j,k,idim1,5)
<          end if
701a902,934
>  1001 format(' ','  j=   1  set rho,u,v,w; extrap. press.  type 2008',
>      .       '  i=',i3,',',i3,'  k=',i3,',',i3)
>  1002 format(' ','  j=jdim  set rho,u,v,w; extrap. press.  type 2008',
>      .       '  i=',i3,',',i3,'  k=',i3,',',i3)
>  1003 format(' ','  k=   1  set rho,u,v,w; extrap. press.  type 2008',
>      .       '  i=',i3,',',i3,'  j=',i3,',',i3)
>  1004 format(' ','  k=kdim  set rho,u,v,w; extrap. press.  type 2008',
>      .       '  i=',i3,',',i3,'  j=',i3,',',i3)
>  1005 format(' ','  i=   1  set rho,u,v,w; extrap. press.  type 2008',
>      .       '  j=',i3,',',i3,'  k=',i3,',',i3)
>  1006 format(' ','  i=idim  set rho,u,v,w; extrap. press.  type 2008',
>      .       '  j=',i3,',',i3,'  k=',i3,',',i3)
>  1007 format(11x,'rho/rhoinf       = ',f8.4)
>  1008 format(11x,'u/ainf           = ',f8.4)
>  1009 format(11x,'v/ainf           = ',f8.4)
>  1010 format(11x,'w/ainf           = ',f8.4)
>  1011 format(11x,'turb1 (nondim)   = ',e12.4)
>  1012 format(11x,'turb2 (nondim)   = ',e12.4)
> c
>  2001 format(' ','  j=   1  set rho,u,v,w, extrapolate p   type 2008',
>      .       '  i=',i3,',',i3,'  k=',i3,',',i3)
>  2002 format(' ','  j=jdim  set rho,u,v,w, extrapolate p   type 2008',
>      .       '  i=',i3,',',i3,'  k=',i3,',',i3)
>  2003 format(' ','  k=   1  set rho,u,v,w, extrapolate p   type 2008',
>      .       '  i=',i3,',',i3,'  j=',i3,',',i3)
>  2004 format(' ','  k=kdim  set rho,u,v,w, extrapolate p   type 2008',
>      .       '  i=',i3,',',i3,'  j=',i3,',',i3)
>  2005 format(' ','  i=   1  set rho,u,v,w, extrapolate p   type 2008',
>      .       '  j=',i3,',',i3,'  k=',i3,',',i3)
>  2006 format(' ','  i=idim  set rho,u,v,w, extrapolate p   type 2008',
>      .       '  j=',i3,',',i3,'  k=',i3,',',i3)
>  2007 format(11x,'variables set from file:')
>  2008 format('           ',a60)
Index: source/cfl3d/libs/bc2009.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/bc2009.F,v
retrieving revision 1.4
retrieving revision 1.2
diff -r1.4 -r1.2
7c7
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
39c39
<       dimension bcdata(mdim,ndim,2,12)
---
>       dimension bcdata(mdim,ndim,2,7)
84a85,151
>       if (isklton.eq.1) then
> c
> c        check that the required auxiliary data has been set
>          iflg = 0
>          do 1 l=1,4
>          do 1 ipp=1,2
>          do 1 i=ista,iend1
>          ii = i-ista+1
>          do 1 k=ksta,kend1
>          kk = k-ksta+1
>          if (real(bcdata(kk,ii,ipp,l)) .lt. -1.e10) iflg = 1
>    1     continue
>          if (iflg.eq.1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  Stopping in bc2009:'
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  nozzle total BC data incorrectly',
>      .      ' set '
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
>          if (itrflg1.gt.0 .or. itrflg2.gt.0) then
>             if (ivmx.gt.5 .and. itrflg1*itrflg2.eq.0) then
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),*)'  stopping in bc2009...must',
>      .         ' set both turbulence'
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),*)'  quantities for 2-eq turb.',
>      .         ' models...only one is set'
>                call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>             end if
>          end if
> c
>          if (filname.eq.'null') then
>             pte   = bcdata(1,1,1,1)
>             tte   = bcdata(1,1,1,2)
>             alpe  = bcdata(1,1,1,3)
>             betae = bcdata(1,1,1,4)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1001)ista,iend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1008) real(pte)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1009) real(tte)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1010) real(alpe)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1011) real(betae)
>             if (itrflg1.gt.0) then
>                t1 = bcdata(1,1,1,5)
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1014) real(t1)
>             end if
>             if (itrflg2.gt.0) then
>                t2 = bcdata(1,1,1,6)
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1015) real(t2 )
>             end if
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1001)ista,iend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1012)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1013) filname
>          end if
>       end if
> c
178a246,312
>       if (isklton.eq.1) then
> c
> c        check that the required auxiliary data has been set
>          iflg = 0
>          do 2 l=1,4
>          do 2 ipp=1,2
>          do 2 i=ista,iend1
>          ii = i-ista+1
>          do 2 k=ksta,kend1
>          kk = k-ksta+1
>          if (real(bcdata(kk,ii,ipp,l)) .lt. -1.e10) iflg = 1
>    2     continue
>          if (iflg.eq.1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  Stopping in bc2009:'
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  nozzle total BC data incorrectly',
>      .      ' set '
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
>          if (itrflg1.gt.0 .or. itrflg2.gt.0) then
>             if (ivmx.gt.5 .and. itrflg1*itrflg2.eq.0) then
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),*)'  stopping in bc2009...must',
>      .         ' set both turbulence'
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),*)'  quantities for 2-eq turb.',
>      .         ' models...only one is set'
>                call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>             end if
>          end if
> c
>          if (filname.eq.'null') then
>             pte   = bcdata(1,1,1,1)
>             tte   = bcdata(1,1,1,2)
>             alpe  = bcdata(1,1,1,3)
>             betae = bcdata(1,1,1,4)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1002)ista,iend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1008) real(pte)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1009) real(tte)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1010) real(alpe)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1011) real(betae)
>             if (itrflg1.gt.0) then
>                t1 = bcdata(1,1,1,5)
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1014) real(t1)
>             end if
>             if (itrflg2.gt.0) then
>                t2 = bcdata(1,1,1,6)
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1015) real(t2)
>             end if
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1002)ista,iend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1012)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1013) filname
>          end if
>       end if
> c
272a407,473
>       if (isklton.eq.1) then
> c
> c        check that the required auxiliary data has been set
>          iflg = 0
>          do 3 l=1,4
>          do 3 ipp=1,2
>          do 3 i=ista,iend1
>          ii = i-ista+1
>          do 3 j=jsta,jend1
>          jj = j-jsta+1
>          if (real(bcdata(jj,ii,ipp,l)) .lt. -1.e10) iflg = 1
>    3     continue
>          if (iflg.eq.1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  Stopping in bc2009:'
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  nozzle total BC data incorrectly',
>      .      ' set '
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
>          if (itrflg1.gt.0 .or. itrflg2.gt.0) then
>             if (ivmx.gt.5 .and. itrflg1*itrflg2.eq.0) then
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),*)'  stopping in bc2009...must',
>      .         ' set both turbulence'
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),*)'  quantities for 2-eq turb.',
>      .         ' models...only one is set'
>                call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>             end if
>          end if
> c
>          if (filname.eq.'null') then
>             pte   = bcdata(1,1,1,1)
>             tte   = bcdata(1,1,1,2)
>             alpe  = bcdata(1,1,1,3)
>             betae = bcdata(1,1,1,4)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1003)ista,iend,jsta,jend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1008) real(pte)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1009) real(tte)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1010) real(alpe)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1011) real(betae)
>             if (itrflg1.gt.0) then
>                t1 = bcdata(1,1,1,5)
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1014) real(t1)
>             end if
>             if (itrflg2.gt.0) then
>                t2 = bcdata(1,1,1,6)
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1015) real(t2)
>             end if
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1003)ista,iend,jsta,jend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1012)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1013) filname
>          end if
>       end if
> c
365a567,633
>       if (isklton.eq.1) then
> c
> c        check that the required auxiliary data has been set
>          iflg = 0
>          do 4 l=1,4
>          do 4 ipp=1,2
>          do 4 i=ista,iend1
>          ii = i-ista+1
>          do 4 j=jsta,jend1
>          jj = j-jsta+1
>          if (real(bcdata(jj,ii,ipp,l)) .lt. -1.e10) iflg = 1
>    4     continue
>          if (iflg.eq.1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  Stopping in bc2009:'
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  nozzle total BC data incorrectly',
>      .      ' set '
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
>          if (itrflg1.gt.0 .or. itrflg2.gt.0) then
>             if (ivmx.gt.5 .and. itrflg1*itrflg2.eq.0) then
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),*)'  stopping in bc2009...must',
>      .         ' set both turbulence'
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),*)'  quantities for 2-eq turb.',
>      .         ' models...only one is set'
>                call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>             end if
>          end if
> c
>          if (filname.eq.'null') then
>             pte   = bcdata(1,1,1,1)
>             tte   = bcdata(1,1,1,2)
>             alpe  = bcdata(1,1,1,3)
>             betae = bcdata(1,1,1,4)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1004)ista,iend,jsta,jend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1008) real(pte)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1009) real(tte)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1010) real(alpe)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1011) real(betae)
>             if (itrflg1.gt.0) then
>                t1 = bcdata(1,1,1,5)
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1014) real(t1)
>             end if
>             if (itrflg2.gt.0) then
>                t2 = bcdata(1,1,1,6)
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1015) real(t2)
>             end if
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1004)ista,iend,jsta,jend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1012)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1013) filname
>          end if
>       end if
> c
459a728,794
>       if (isklton.eq.1) then
> c
> c        check that the required auxiliary data has been set
>          iflg = 0
>          do 5 l=1,4
>          do 5 ipp=1,2
>          do 5 j=jsta,jend1
>          jj = j-jsta+1
>          do 5 k=ksta,kend1
>          kk = k-ksta+1
>          if (real(bcdata(jj,kk,ipp,l)) .lt. -1.e10) iflg = 1
>    5     continue
>          if (iflg.eq.1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  Stopping in bc2009:'
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  nozzle total BC data incorrectly',
>      .      ' set '
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
>          if (itrflg1.gt.0 .or. itrflg2.gt.0) then
>             if (ivmx.gt.5 .and. itrflg1*itrflg2.eq.0) then
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),*)'  stopping in bc2009...must',
>      .         ' set both turbulence'
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),*)'  quantities for 2-eq turb.',
>      .         ' models...only one is set'
>                call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>             end if
>          end if
> c
>          if (filname.eq.'null') then
>             pte   = bcdata(1,1,1,1)
>             tte   = bcdata(1,1,1,2)
>             alpe  = bcdata(1,1,1,3)
>             betae = bcdata(1,1,1,4)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1005)jsta,jend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1008) real(pte)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1009) real(tte)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1010) real(alpe)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1011) real(betae)
>             if (itrflg1.gt.0) then
>                t1 = bcdata(1,1,1,5)
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1014) real(t1)
>             end if
>             if (itrflg2.gt.0) then
>                t2 = bcdata(1,1,1,6)
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1015) real(t2)
>             end if
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1005)jsta,jend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1012)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1013) filname
>          end if
>       end if
> c
553a889,955
>       if (isklton.eq.1) then
> c
> c        check that the required auxiliary data has been set
>          iflg = 0
>          do 6 l=1,4
>          do 6 ipp=1,2
>          do 6 j=jsta,jend1
>          jj = j-jsta+1
>          do 6 k=ksta,kend1
>          kk = k-ksta+1
>          if (real(bcdata(jj,kk,ipp,l)) .lt. -1.e10) iflg = 1
>    6     continue
>          if (iflg.eq.1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  Stopping in bc2009:'
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  nozzle total BC data incorrectly',
>      .      ' set '
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
>          if (itrflg1.gt.0 .or. itrflg2.gt.0) then
>             if (ivmx.gt.5 .and. itrflg1*itrflg2.eq.0) then
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),*)'  stopping in bc2009...must',
>      .         ' set both turbulence'
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),*)'  quantities for 2-eq turb.',
>      .         ' models...only one is set'
>                call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>             end if
>          end if
> c
>          if (filname.eq.'null') then
>             pte   = bcdata(1,1,1,1)
>             tte   = bcdata(1,1,1,2)
>             alpe  = bcdata(1,1,1,3)
>             betae = bcdata(1,1,1,4)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1006)jsta,jend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1008) real(pte)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1009) real(tte)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1010) real(alpe)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1011) real(betae)
>             if (itrflg1.gt.0) then
>                t1 = bcdata(1,1,1,5)
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1014) real(t1)
>             end if
>             if (itrflg2.gt.0) then
>                t2 = bcdata(1,1,1,6)
>                nou(1) = min(nou(1)+1,ibufdim)
>                write(bou(nou(1),1),1015) real(t2)
>             end if
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1006)jsta,jend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1012)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1013) filname
>          end if
>       end if
> c
630a1033,1053
> c
>  1001 format(' ','  j=   1  nozzle total BC                type 2009',
>      .       '  i=',i3,',',i3,'  k=',i3,',',i3)
>  1002 format(' ','  j=jdim  nozzle total BC                type 2009',
>      .       '  i=',i3,',',i3,'  k=',i3,',',i3)
>  1003 format(' ','  k=   1  nozzle total BC                type 2009',
>      .       '  i=',i3,',',i3,'  j=',i3,',',i3)
>  1004 format(' ','  k=kdim  nozzle total BC                type 2009',
>      .       '  i=',i3,',',i3,'  j=',i3,',',i3)
>  1005 format(' ','  i=   1  nozzle total BC                type 2009',
>      .       '  j=',i3,',',i3,'  k=',i3,',',i3)
>  1006 format(' ','  i=idim  nozzle total BC                type 2009',
>      .       '  j=',i3,',',i3,'  k=',i3,',',i3)
>  1008 format(11x,'Pt/Pinf        = ',f8.4)
>  1009 format(11x,'Tt/Tinf        = ',f8.4)
>  1010 format(11x,'alphe          = ',f8.4)
>  1011 format(11x,'betae          = ',f8.4)
>  1012 format(11x,'inflow data set from file:')
>  1013 format('           ',a60)
>  1014 format(11x,'turb1 (nondim) = ',e12.4)
>  1015 format(11x,'turb2 (nondim) = ',e12.4)
Index: source/cfl3d/libs/bc2102.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/bc2102.F,v
retrieving revision 1.4
retrieving revision 1.2
diff -r1.4 -r1.2
7c7
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
36c36
<       dimension bcdata(mdim,ndim,2,12)
---
>       dimension bcdata(mdim,ndim,2,7)
72a73,119
>       if (isklton.eq.1) then
> c
> c        check that the required auxiliary data has been set
>          iflg = 0
>          do 1 l=1,4
>          do 1 ipp=1,2
>          do 1 i=ista,iend1
>          ii = i-ista+1
>          do 1 k=ksta,kend1
>          kk = k-ksta+1
>          if (real(bcdata(kk,ii,ipp,l)) .lt. -1.e10) iflg = 1
>    1     continue
>          if (iflg.eq.1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  Stopping in bc2102:'
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  pressure data incorrectly set '
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
> c 
>          if (filname.eq.'null') then
>             pratio = bcdata(1,1,1,1)
>             deltap = bcdata(1,1,1,2)
>             rfreqp = bcdata(1,1,1,3)
>             lref   = bcdata(1,1,1,4)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1001)ista,iend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1007)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1008) real(pratio)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1009) real(deltap)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1010) 
>      .            real(twopi)*real(rfreqp)/real(lref)
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2001)ista,iend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2007)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2008)filname
>          end if
> c
>       end if
> c
118a166,212
>       if (isklton.eq.1) then
> c
> c        check that the required auxiliary data has been set
>          iflg = 0
>          do 2 l=1,4
>          do 2 ipp=1,2
>          do 2 i=ista,iend1
>          ii = i-ista+1
>          do 2 k=ksta,kend1
>          kk = k-ksta+1
>          if (real(bcdata(kk,ii,ipp,l)) .lt. -1.e10) iflg = 1
>    2     continue
>          if (iflg.eq.1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  Stopping in bc2102:'
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  pressure data incorrectly set '
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
> c
>          if (filname.eq.'null') then
>             pratio = bcdata(1,1,1,1)
>             deltap = bcdata(1,1,1,2)
>             rfreqp = bcdata(1,1,1,3)
>             lref   = bcdata(1,1,1,4)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1002)ista,iend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1007)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1008) real(pratio)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1009) real(deltap)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1010) 
>      .            real(twopi)*real(rfreqp)/real(lref)
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2002)ista,iend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2007)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2008)filname
>          end if
> c
>       end if
> c
164a259,305
>       if (isklton.eq.1) then
> c
> c        check that the required auxiliary data has been set
>          iflg = 0
>          do 3 l=1,4
>          do 3 ipp=1,2
>          do 3 i=ista,iend1
>          ii = i-ista+1
>          do 3 j=jsta,jend1
>          jj = j-jsta+1
>          if (real(bcdata(jj,ii,ipp,l)) .lt. -1.e10) iflg = 1
>    3     continue
>          if (iflg.eq.1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  Stopping in bc2102:'
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  pressure data incorrectly set '
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
> c
>          if (filname.eq.'null') then
>             pratio = bcdata(1,1,1,1)
>             deltap = bcdata(1,1,1,2)
>             rfreqp = bcdata(1,1,1,3)
>             lref   = bcdata(1,1,1,4)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1003)ista,iend,jsta,jend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1007)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1008) real(pratio)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1009) real(deltap)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1010)
>      .            real(twopi)*real(rfreqp)/real(lref)
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2003)ista,iend,jsta,jend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2007)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2008)filname
>          end if
> c
>       end if
> c
210a352,398
>       if (isklton.eq.1) then
> c
> c        check that the required auxiliary data has been set
>          iflg = 0
>          do 4 l=1,4
>          do 4 ipp=1,2
>          do 4 i=ista,iend1
>          ii = i-ista+1
>          do 4 j=jsta,jend1
>          jj = j-jsta+1
>          if (real(bcdata(jj,ii,ipp,l)) .lt. -1.e10) iflg = 1
>    4     continue
>          if (iflg.eq.1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  Stopping in bc2102:'
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  pressure data incorrectly set '
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
> c
>          if (filname.eq.'null') then
>             pratio = bcdata(1,1,1,1)
>             deltap = bcdata(1,1,1,2)
>             rfreqp = bcdata(1,1,1,3)
>             lref   = bcdata(1,1,1,4)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1004)ista,iend,jsta,jend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1007)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1008) real(pratio)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1009) real(deltap)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1010)
>      .            real(twopi)*real(rfreqp)/real(lref)
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2004)ista,iend,jsta,jend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2007)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2008)filname
>          end if
> c
>       end if
> c
256a445,491
>       if (isklton.eq.1) then
> c
> c        check that the required auxiliary data has been set
>          iflg = 0
>          do 5 l=1,4
>          do 5 ipp=1,2
>          do 5 k=ksta,kend1
>          kk = k-ksta+1
>          do 5 j=jsta,jend1
>          jj = j-jsta+1
>          if (real(bcdata(jj,kk,ipp,l)) .lt. -1.e10) iflg = 1
>    5     continue
>          if (iflg.eq.1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  Stopping in bc2102:'
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  pressure data incorrectly set '
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
> c
>          if (filname.eq.'null') then
>             pratio = bcdata(1,1,1,1)
>             deltap = bcdata(1,1,1,2)
>             rfreqp = bcdata(1,1,1,3)
>             lref   = bcdata(1,1,1,4)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1005)jsta,jend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1007)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1008) real(pratio)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1009) real(deltap)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1010)
>      .            real(twopi)*real(rfreqp)/real(lref)
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2005)jsta,jend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2007)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2008)filname
>          end if
> c
>       end if
> c
302a538,584
>       if (isklton.eq.1) then
> c
> c        check that the required auxiliary data has been set
>          iflg = 0
>          do 6 l=1,4
>          do 6 ipp=1,2
>          do 6 k=ksta,kend1
>          kk = k-ksta+1
>          do 6 j=jsta,jend1
>          jj = j-jsta+1
>          if (real(bcdata(jj,kk,ipp,l)) .lt. -1.e10) iflg = 1
>    6     continue
>          if (iflg.eq.1) then
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  Stopping in bc2102:'
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),*)'  pressure data incorrectly set '
>             call termn8(myid,-1,ibufdim,nbuf,bou,nou)
>          end if
> c
>          if (filname.eq.'null') then
>             pratio = bcdata(1,1,1,1)
>             deltap = bcdata(1,1,1,2)
>             rfreqp = bcdata(1,1,1,3)
>             lref   = bcdata(1,1,1,4)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1006)jsta,jend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1007)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1008) real(pratio)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1009) real(deltap)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),1010)
>      .            real(twopi)*real(rfreqp)/real(lref)
>          else
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2006)jsta,jend,ksta,kend
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2007)
>             nou(1) = min(nou(1)+1,ibufdim)
>             write(bou(nou(1),1),2008)filname
>          end if
> c
>       end if
> c
341a624,649
> c
>  1001 format(' ','  j=   1  time-varying pressure          type 2102',
>      .       '  i=',i3,',',i3,'  k=',i3,',',i3)
>  1002 format(' ','  j=jdim  time-varying pressure          type 2102',
>      .       '  i=',i3,',',i3,'  k=',i3,',',i3)
>  1003 format(' ','  k=   1  time-varying pressure          type 2102',
>      .       '  i=',i3,',',i3,'  j=',i3,',',i3)
>  1004 format(' ','  k=kdim  time-varying pressure          type 2102',
>      .       '  i=',i3,',',i3,'  j=',i3,',',i3)
>  1005 format(' ','  i=   1  time-varying pressure          type 2102',
>      .       '  j=',i3,',',i3,'  k=',i3,',',i3)
>  1006 format(' ','  i=idim  time-varying pressure          type 2102',
>      .       '  j=',i3,',',i3,'  k=',i3,',',i3)
>  1007 format(11x,'P(t)/Pinf  = P1 + eps*sin(k*t)')
>  1008 format(11x,'P1         = ',f8.4)
>  1009 format(11x,'eps        = ',f8.4)
>  1010 format(11x,'k          = ',f8.4)
> c
>  2001 format(' ','  j=   1  time-varying pressure          type 2102')
>  2002 format(' ','  j=jdim  time-varying pressure          type 2102')
>  2003 format(' ','  k=   1  time-varying pressure          type 2102')
>  2004 format(' ','  k=kdim  time-varying pressure          type 2102')
>  2005 format(' ','  i=   1  time-varying pressure          type 2102')
>  2006 format(' ','  i=idim  time-varying pressure          type 2102')
>  2007 format(11x,'P(t)/Pinf set from file:')
>  2008 format('           ',a60)
Index: source/cfl3d/libs/bc_info.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/bc_info.F,v
retrieving revision 1.9
retrieving revision 1.7
diff -r1.9 -r1.7
12c12
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
157,162c157
<      .  maxbl,0)
< c
<       if (abs(ibcinfo(nbl,nseg,1,1)).eq.2014)
<      .  call out2004(jdim,kdim,idim,ista,iend,jsta,jend,ksta,kend,1,
<      .  nou,bou,nbuf,ibufdim,mdim,ndim,w(ldata),filname,myid,mblk2nd,
<      .  maxbl,1)
---
>      .  maxbl)
215,225c210
<      .  maxbl,0)
< c
<       if (ibcinfo(nbl,nseg,1,1).eq.2018)
<      .  call out2008(jdim,kdim,idim,ista,iend,jsta,jend,ksta,kend,1,
<      .  nou,bou,nbuf,ibufdim,mdim,ndim,w(ldata),filname,myid,mblk2nd,
<      .  maxbl,1)
< c
<       if (ibcinfo(nbl,nseg,1,1).eq.2028)
<      .  call out2008(jdim,kdim,idim,ista,iend,jsta,jend,ksta,kend,1,
<      .  nou,bou,nbuf,ibufdim,mdim,ndim,w(ldata),filname,myid,mblk2nd,
<      .  maxbl,2)
---
>      .  maxbl)
308,313c293
<      .  maxbl,0)
< c
<       if (abs(ibcinfo(nbl,nseg,1,2)).eq.2014)
<      .  call out2004(jdim,kdim,idim,ista,iend,jsta,jend,ksta,kend,2,
<      .  nou,bou,nbuf,ibufdim,mdim,ndim,w(ldata),filname,myid,mblk2nd,
<      .  maxbl,1)
---
>      .  maxbl)
365,375c345
<      .  maxbl,0)
< c
<       if (ibcinfo(nbl,nseg,1,2).eq.2018)
<      .  call out2008(jdim,kdim,idim,ista,iend,jsta,jend,ksta,kend,2,
<      .  nou,bou,nbuf,ibufdim,mdim,ndim,w(ldata),filname,myid,mblk2nd,
<      .  maxbl,1)
< c
<       if (ibcinfo(nbl,nseg,1,2).eq.2028)
<      .  call out2008(jdim,kdim,idim,ista,iend,jsta,jend,ksta,kend,2,
<      .  nou,bou,nbuf,ibufdim,mdim,ndim,w(ldata),filname,myid,mblk2nd,
<      .  maxbl,2)
---
>      .  maxbl)
458,463c428
<      .  maxbl,0)
< c
<       if (abs(jbcinfo(nbl,nseg,1,1)).eq.2014)
<      .  call out2004(jdim,kdim,idim,ista,iend,jsta,jend,ksta,kend,3,
<      .  nou,bou,nbuf,ibufdim,mdim,ndim,w(ldata),filname,myid,mblk2nd,
<      .  maxbl,1)
---
>      .  maxbl)
515,525c480
<      .  maxbl,0)
< c
<       if (jbcinfo(nbl,nseg,1,1).eq.2018)
<      .  call out2008(jdim,kdim,idim,ista,iend,jsta,jend,ksta,kend,3,
<      .  nou,bou,nbuf,ibufdim,mdim,ndim,w(ldata),filname,myid,mblk2nd,
<      .  maxbl,1)
< c
<       if (jbcinfo(nbl,nseg,1,1).eq.2028)
<      .  call out2008(jdim,kdim,idim,ista,iend,jsta,jend,ksta,kend,3,
<      .  nou,bou,nbuf,ibufdim,mdim,ndim,w(ldata),filname,myid,mblk2nd,
<      .  maxbl,2)
---
>      .  maxbl)
608,613c563
<      .  maxbl,0)
< c
<       if (abs(jbcinfo(nbl,nseg,1,2)).eq.2014)
<      .  call out2004(jdim,kdim,idim,ista,iend,jsta,jend,ksta,kend,4,
<      .  nou,bou,nbuf,ibufdim,mdim,ndim,w(ldata),filname,myid,mblk2nd,
<      .  maxbl,1)
---
>      .  maxbl)
665,675c615
<      .  maxbl,0)
< c
<       if (jbcinfo(nbl,nseg,1,2).eq.2018)
<      .  call out2008(jdim,kdim,idim,ista,iend,jsta,jend,ksta,kend,4,
<      .  nou,bou,nbuf,ibufdim,mdim,ndim,w(ldata),filname,myid,mblk2nd,
<      .  maxbl,1)
< c
<       if (jbcinfo(nbl,nseg,1,2).eq.2028)
<      .  call out2008(jdim,kdim,idim,ista,iend,jsta,jend,ksta,kend,4,
<      .  nou,bou,nbuf,ibufdim,mdim,ndim,w(ldata),filname,myid,mblk2nd,
<      .  maxbl,2)
---
>      .  maxbl)
758,763c698
<      .  maxbl,0)
< c
<       if (abs(kbcinfo(nbl,nseg,1,1)).eq.2014)
<      .  call out2004(jdim,kdim,idim,ista,iend,jsta,jend,ksta,kend,5,
<      .  nou,bou,nbuf,ibufdim,mdim,ndim,w(ldata),filname,myid,mblk2nd,
<      .  maxbl,1)
---
>      .  maxbl)
815,825c750
<      .  maxbl,0)
< c
<       if (kbcinfo(nbl,nseg,1,1).eq.2018)
<      .  call out2008(jdim,kdim,idim,ista,iend,jsta,jend,ksta,kend,5,
<      .  nou,bou,nbuf,ibufdim,mdim,ndim,w(ldata),filname,myid,mblk2nd,
<      .  maxbl,1)
< c
<       if (kbcinfo(nbl,nseg,1,1).eq.2028)
<      .  call out2008(jdim,kdim,idim,ista,iend,jsta,jend,ksta,kend,5,
<      .  nou,bou,nbuf,ibufdim,mdim,ndim,w(ldata),filname,myid,mblk2nd,
<      .  maxbl,2)
---
>      .  maxbl)
908,913c833
<      .  maxbl,0)
< c
<       if (abs(kbcinfo(nbl,nseg,1,2)).eq.2014)
<      .  call out2004(jdim,kdim,idim,ista,iend,jsta,jend,ksta,kend,6,
<      .  nou,bou,nbuf,ibufdim,mdim,ndim,w(ldata),filname,myid,mblk2nd,
<      .  maxbl,1)
---
>      .  maxbl)
965,975c885
<      .  maxbl,0)
< c
<       if (kbcinfo(nbl,nseg,1,2).eq.2018)
<      .  call out2008(jdim,kdim,idim,ista,iend,jsta,jend,ksta,kend,6,
<      .  nou,bou,nbuf,ibufdim,mdim,ndim,w(ldata),filname,myid,mblk2nd,
<      .  maxbl,1)
< c
<       if (kbcinfo(nbl,nseg,1,2).eq.2028)
<      .  call out2008(jdim,kdim,idim,ista,iend,jsta,jend,ksta,kend,6,
<      .  nou,bou,nbuf,ibufdim,mdim,ndim,w(ldata),filname,myid,mblk2nd,
<      .  maxbl,2)
---
>      .  maxbl)
2200c2110
<       dimension bcdata(mdim,ndim,2,12),mblk2nd(maxbl)
---
>       dimension bcdata(mdim,ndim,2,7),mblk2nd(maxbl)
2435c2345
<       dimension bcdata(mdim,ndim,2,12),mblk2nd(maxbl)
---
>       dimension bcdata(mdim,ndim,2,7),mblk2nd(maxbl)
2943c2853
<      .                  filname,myid,mblk2nd,maxbl,iout)
---
>      .                  filname,myid,mblk2nd,maxbl)
2953c2863
<       dimension bcdata(mdim,ndim,2,12),mblk2nd(maxbl)
---
>       dimension bcdata(mdim,ndim,2,7),mblk2nd(maxbl)
2964c2874
<          do 1 l=1,2+iout
---
>          do 1 l=1,2
2974,2978c2884
<             if (iout .eq. 0) then
<               write(bou(nou(1),1),*)'  Stopping in bc2004:'
<             else
<               write(bou(nou(1),1),*)'  Stopping in bc2014:'
<             end if
---
>             write(bou(nou(1),1),*)'  Stopping in bc2004:'
2986,2988d2891
<             if (iout .eq. 1) then
<               stopindex = bcdata(1,1,1,3)
<             end if
2991,2995c2894
<               if (iout .eq. 0) then
<                 write(bou(nou(1),1),1001)ista,iend,ksta,kend
<               else
<                 write(bou(nou(1),1),1101)ista,iend,ksta,kend
<               end if
---
>               write(bou(nou(1),1),1001)ista,iend,ksta,kend
3002,3006c2901
<               if (iout .eq. 0) then
<                 write(bou(nou(1),1),1001)ista,iend,ksta,kend
<               else
<                 write(bou(nou(1),1),1101)ista,iend,ksta,kend
<               end if
---
>               write(bou(nou(1),1),1001)ista,iend,ksta,kend
3013,3017c2908
<               if (iout .eq. 0) then
<                 write(bou(nou(1),1),1001)ista,iend,ksta,kend
<               else
<                 write(bou(nou(1),1),1101)ista,iend,ksta,kend
<               end if
---
>               write(bou(nou(1),1),1001)ista,iend,ksta,kend
3023,3026d2913
<             if (iout .eq. 1) then
<               nou(1) = min(nou(1)+1,ibufdim)
<               write(bou(nou(1),1),1013) int(stopindex)
<             end if
3029,3033c2916
<             if (iout .eq. 0) then
<               write(bou(nou(1),1),1001)ista,iend,ksta,kend
<             else
<               write(bou(nou(1),1),1101)ista,iend,ksta,kend
<             end if
---
>             write(bou(nou(1),1),1001)ista,iend,ksta,kend
3049c2932
<          do 2 l=1,2+iout
---
>          do 2 l=1,2
3059,3063c2942
<             if (iout .eq. 0) then
<               write(bou(nou(1),1),*)'  Stopping in bc2004:'
<             else
<               write(bou(nou(1),1),*)'  Stopping in bc2014:'
<             end if
---
>             write(bou(nou(1),1),*)'  Stopping in bc2004:'
3071,3073d2949
<             if (iout .eq. 1) then
<               stopindex = bcdata(1,1,1,3)
<             end if
3076,3080c2952
<               if (iout .eq. 0) then
<                 write(bou(nou(1),1),1002)ista,iend,ksta,kend
<               else
<                 write(bou(nou(1),1),1102)ista,iend,ksta,kend
<               end if
---
>               write(bou(nou(1),1),1002)ista,iend,ksta,kend
3087,3091c2959
<               if (iout .eq. 0) then
<                 write(bou(nou(1),1),1002)ista,iend,ksta,kend
<               else
<                 write(bou(nou(1),1),1102)ista,iend,ksta,kend
<               end if
---
>               write(bou(nou(1),1),1002)ista,iend,ksta,kend
3098,3102c2966
<               if (iout .eq. 0) then
<                 write(bou(nou(1),1),1002)ista,iend,ksta,kend
<               else
<                 write(bou(nou(1),1),1102)ista,iend,ksta,kend
<               end if
---
>               write(bou(nou(1),1),1002)ista,iend,ksta,kend
3108,3111d2971
<             if (iout .eq. 1) then
<               nou(1) = min(nou(1)+1,ibufdim)
<               write(bou(nou(1),1),1013) int(stopindex)
<             end if
3114,3118c2974
<             if (iout .eq. 0) then
<               write(bou(nou(1),1),1002)ista,iend,ksta,kend
<             else
<               write(bou(nou(1),1),1102)ista,iend,ksta,kend
<             end if
---
>             write(bou(nou(1),1),1002)ista,iend,ksta,kend
3134c2990
<          do 3 l=1,2+iout
---
>          do 3 l=1,2
3144,3148c3000
<             if (iout .eq. 0) then
<               write(bou(nou(1),1),*)'  Stopping in bc2004:'
<             else
<               write(bou(nou(1),1),*)'  Stopping in bc2014:'
<             end if
---
>             write(bou(nou(1),1),*)'  Stopping in bc2004:'
3156,3158d3007
<             if (iout .eq. 1) then
<               stopindex = bcdata(1,1,1,3)
<             end if
3161,3165c3010
<               if (iout .eq. 0) then
<                 write(bou(nou(1),1),1003)ista,iend,jsta,jend
<               else
<                 write(bou(nou(1),1),1103)ista,iend,jsta,jend
<               end if
---
>               write(bou(nou(1),1),1003)ista,iend,jsta,jend
3172,3176c3017
<               if (iout .eq. 0) then
<                 write(bou(nou(1),1),1003)ista,iend,jsta,jend
<               else
<                 write(bou(nou(1),1),1103)ista,iend,jsta,jend
<               end if
---
>               write(bou(nou(1),1),1003)ista,iend,jsta,jend
3183,3187c3024
<               if (iout .eq. 0) then
<                 write(bou(nou(1),1),1003)ista,iend,jsta,jend
<               else
<                 write(bou(nou(1),1),1103)ista,iend,jsta,jend
<               end if
---
>               write(bou(nou(1),1),1003)ista,iend,jsta,jend
3193,3196d3029
<             if (iout .eq. 1) then
<               nou(1) = min(nou(1)+1,ibufdim)
<               write(bou(nou(1),1),1013) int(stopindex)
<             end if
3199,3203c3032
<             if (iout .eq. 0) then
<               write(bou(nou(1),1),1003)ista,iend,jsta,jend
<             else
<               write(bou(nou(1),1),1103)ista,iend,jsta,jend
<             end if
---
>             write(bou(nou(1),1),1003)ista,iend,jsta,jend
3219c3048
<          do 4 l=1,2+iout
---
>          do 4 l=1,2
3229,3233c3058
<             if (iout .eq. 0) then
<               write(bou(nou(1),1),*)'  Stopping in bc2004:'
<             else
<               write(bou(nou(1),1),*)'  Stopping in bc2014:'
<             end if
---
>             write(bou(nou(1),1),*)'  Stopping in bc2004:'
3241,3243d3065
<             if (iout .eq. 1) then
<               stopindex = bcdata(1,1,1,3)
<             end if
3246,3250c3068
<               if (iout .eq. 0) then
<                 write(bou(nou(1),1),1004)ista,iend,jsta,jend
<               else
<                 write(bou(nou(1),1),1104)ista,iend,jsta,jend
<               end if
---
>               write(bou(nou(1),1),1004)ista,iend,jsta,jend
3257,3261c3075
<               if (iout .eq. 0) then
<                 write(bou(nou(1),1),1004)ista,iend,jsta,jend
<               else
<                 write(bou(nou(1),1),1104)ista,iend,jsta,jend
<               end if
---
>               write(bou(nou(1),1),1004)ista,iend,jsta,jend
3268,3272c3082
<               if (iout .eq. 0) then
<                 write(bou(nou(1),1),1004)ista,iend,jsta,jend
<               else
<                 write(bou(nou(1),1),1104)ista,iend,jsta,jend
<               end if
---
>               write(bou(nou(1),1),1004)ista,iend,jsta,jend
3278,3281d3087
<             if (iout .eq. 1) then
<               nou(1) = min(nou(1)+1,ibufdim)
<               write(bou(nou(1),1),1013) int(stopindex)
<             end if
3284,3288c3090
<             if (iout .eq. 0) then
<               write(bou(nou(1),1),1004)ista,iend,jsta,jend
<             else
<               write(bou(nou(1),1),1104)ista,iend,jsta,jend
<             end if
---
>             write(bou(nou(1),1),1004)ista,iend,jsta,jend
3304c3106
<          do 5 l=1,2+iout
---
>          do 5 l=1,2
3314,3318c3116
<             if (iout .eq. 0) then
<               write(bou(nou(1),1),*)'  Stopping in bc2004:'
<             else
<               write(bou(nou(1),1),*)'  Stopping in bc2014:'
<             end if
---
>             write(bou(nou(1),1),*)'  Stopping in bc2004:'
3326,3328d3123
<             if (iout .eq. 1) then
<               stopindex = bcdata(1,1,1,3)
<             end if
3331,3335c3126
<               if (iout .eq. 0) then
<                 write(bou(nou(1),1),1005)jsta,jend,ksta,kend
<               else
<                 write(bou(nou(1),1),1105)jsta,jend,ksta,kend
<               end if
---
>               write(bou(nou(1),1),1005)jsta,jend,ksta,kend
3342,3346c3133
<               if (iout .eq. 0) then
<                 write(bou(nou(1),1),1005)jsta,jend,ksta,kend
<               else
<                 write(bou(nou(1),1),1105)jsta,jend,ksta,kend
<               end if
---
>               write(bou(nou(1),1),1005)jsta,jend,ksta,kend
3353,3357c3140
<               if (iout .eq. 0) then
<                 write(bou(nou(1),1),1005)jsta,jend,ksta,kend
<               else
<                 write(bou(nou(1),1),1105)jsta,jend,ksta,kend
<               end if
---
>               write(bou(nou(1),1),1005)jsta,jend,ksta,kend
3363,3366d3145
<             if (iout .eq. 1) then
<               nou(1) = min(nou(1)+1,ibufdim)
<               write(bou(nou(1),1),1013) int(stopindex)
<             end if
3369,3373c3148
<             if (iout .eq. 0) then
<               write(bou(nou(1),1),1005)jsta,jend,ksta,kend
<             else
<               write(bou(nou(1),1),1105)jsta,jend,ksta,kend
<             end if
---
>             write(bou(nou(1),1),1005)jsta,jend,ksta,kend
3389c3164
<          do 6 l=1,2+iout
---
>          do 6 l=1,2
3399,3403c3174
<             if (iout .eq. 0) then
<               write(bou(nou(1),1),*)'  Stopping in bc2004:'
<             else
<               write(bou(nou(1),1),*)'  Stopping in bc2014:'
<             end if
---
>             write(bou(nou(1),1),*)'  Stopping in bc2004:'
3411,3413d3181
<             if (iout .eq. 1) then
<               stopindex = bcdata(1,1,1,3)
<             end if
3416,3420c3184
<               if (iout .eq. 0) then
<                 write(bou(nou(1),1),1006)jsta,jend,ksta,kend
<               else
<                 write(bou(nou(1),1),1106)jsta,jend,ksta,kend
<               end if
---
>               write(bou(nou(1),1),1006)jsta,jend,ksta,kend
3427,3431c3191
<               if (iout .eq. 0) then
<                 write(bou(nou(1),1),1006)jsta,jend,ksta,kend
<               else
<                 write(bou(nou(1),1),1106)jsta,jend,ksta,kend
<               end if
---
>               write(bou(nou(1),1),1006)jsta,jend,ksta,kend
3438,3442c3198
<               if (iout .eq. 0) then
<                 write(bou(nou(1),1),1006)jsta,jend,ksta,kend
<               else
<                 write(bou(nou(1),1),1106)jsta,jend,ksta,kend
<               end if
---
>               write(bou(nou(1),1),1006)jsta,jend,ksta,kend
3448,3451d3203
<             if (iout .eq. 1) then
<               nou(1) = min(nou(1)+1,ibufdim)
<               write(bou(nou(1),1),1013) int(stopindex)
<             end if
3454,3458c3206
<             if (iout .eq. 0) then
<               write(bou(nou(1),1),1006)jsta,jend,ksta,kend
<             else
<               write(bou(nou(1),1),1106)jsta,jend,ksta,kend
<             end if
---
>             write(bou(nou(1),1),1006)jsta,jend,ksta,kend
3482,3493d3229
<  1101 format(' ','  j=   1  viscous laminar wall           type 2014',
<      .       '  i=',i3,',',i3,'  k=',i3,',',i3)
<  1102 format(' ','  j=jdim  viscous laminar wall           type 2014',
<      .       '  i=',i3,',',i3,'  k=',i3,',',i3)
<  1103 format(' ','  k=   1  viscous laminar wall           type 2014',
<      .       '  i=',i3,',',i3,'  j=',i3,',',i3)
<  1104 format(' ','  k=kdim  viscous laminar wall           type 2014',
<      .       '  i=',i3,',',i3,'  j=',i3,',',i3)
<  1105 format(' ','  i=   1  viscous laminar wall           type 2014',
<      .       '  j=',i3,',',i3,'  k=',i3,',',i3)
<  1106 format(' ','  i=idim  viscous laminar wall           type 2014',
<      .       '  j=',i3,',',i3,'  k=',i3,',',i3)
3496d3231
<  1013 format(11x,'stopindex  = ',i8)
3521c3256
<       dimension bcdata(mdim,ndim,2,12),mblk2nd(maxbl)
---
>       dimension bcdata(mdim,ndim,2,7),mblk2nd(maxbl)
4206c3941
<       dimension bcdata(mdim,ndim,2,12),mblk2nd(maxbl)
---
>       dimension bcdata(mdim,ndim,2,7),mblk2nd(maxbl)
4808c4543
<       dimension bcdata(mdim,ndim,2,12),mblk2nd(maxbl)
---
>       dimension bcdata(mdim,ndim,2,7),mblk2nd(maxbl)
5345c5080
<      .                  filname,myid,mblk2nd,maxbl,iout)
---
>      .                  filname,myid,mblk2nd,maxbl)
5355c5090
<       dimension bcdata(mdim,ndim,2,12),mblk2nd(maxbl)
---
>       dimension bcdata(mdim,ndim,2,7),mblk2nd(maxbl)
5389d5123
<             if (iout .eq. 0) then
5391,5395d5124
<             else if (iout .eq. 1) then
<             write(bou(nou(1),1),*)'  Stopping in bc2018:'
<             else if (iout .eq. 2) then
<             write(bou(nou(1),1),*)'  Stopping in bc2028:'
<             end if
5402c5131
<             val1  = bcdata(1,1,1,1)
---
>             rho1  = bcdata(1,1,1,1)
5406d5134
<             if (iout .eq. 0) then
5410c5138
<             write(bou(nou(1),1),1008) real(val1)
---
>             write(bou(nou(1),1),1008) real(rho1)
5417,5439d5144
<             else if (iout .eq. 1) then
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),2001)ista,iend,ksta,kend
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),2008) real(val1)
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),2009) real(u1)
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),2010) real(v1)
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),2011) real(w1)
<             else if (iout .eq. 2) then
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),3001)ista,iend,ksta,kend
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),3008) real(val1)
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),3009) real(u1)
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),3010) real(v1)
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),3011) real(w1)
<             end if
5452d5156
<             if (iout .eq. 0) then
5454,5458d5157
<             else if (iout .eq. 1) then
<             write(bou(nou(1),1),2001)ista,iend,ksta,kend
<             else if (iout .eq. 2) then
<             write(bou(nou(1),1),3001)ista,iend,ksta,kend
<             end if
5491d5189
<             if (iout .eq. 0) then
5493,5497d5190
<             else if (iout .eq. 1) then
<             write(bou(nou(1),1),*)'  Stopping in bc2018:'
<             else if (iout .eq. 2) then
<             write(bou(nou(1),1),*)'  Stopping in bc2028:'
<             end if
5504c5197
<             val1  = bcdata(1,1,1,1)
---
>             rho1  = bcdata(1,1,1,1)
5508d5200
<             if (iout .eq. 0) then
5512c5204
<             write(bou(nou(1),1),1008) real(val1)
---
>             write(bou(nou(1),1),1008) real(rho1)
5519,5541d5210
<             else if (iout .eq. 1) then
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),2002)ista,iend,ksta,kend
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),2008) real(val1)
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),2009) real(u1)
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),2010) real(v1)
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),2011) real(w1)
<             else if (iout .eq. 2) then
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),3002)ista,iend,ksta,kend
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),3008) real(val1)
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),3009) real(u1)
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),3010) real(v1)
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),3011) real(w1)
<             end if
5554d5222
<             if (iout .eq. 0) then
5556,5560d5223
<             else if (iout .eq. 1) then
<             write(bou(nou(1),1),2002)ista,iend,ksta,kend
<             else if (iout .eq. 2) then
<             write(bou(nou(1),1),3002)ista,iend,ksta,kend
<             end if
5593d5255
<             if (iout .eq. 0) then
5595,5599d5256
<             else if (iout .eq. 1) then
<             write(bou(nou(1),1),*)'  Stopping in bc2018:'
<             else if (iout .eq. 2) then
<             write(bou(nou(1),1),*)'  Stopping in bc2028:'
<             end if
5606c5263
<             val1  = bcdata(1,1,1,1)
---
>             rho1  = bcdata(1,1,1,1)
5610d5266
<             if (iout .eq. 0) then
5614c5270
<             write(bou(nou(1),1),1008) real(val1)
---
>             write(bou(nou(1),1),1008) real(rho1)
5621,5643d5276
<             else if (iout .eq. 1) then
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),2003)ista,iend,jsta,jend
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),2008) real(val1)
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),2009) real(u1)
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),2010) real(v1)
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),2011) real(w1)
<             else if (iout .eq. 2) then
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),3003)ista,iend,jsta,jend
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),3008) real(val1)
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),3009) real(u1)
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),3010) real(v1)
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),3011) real(w1)
<             end if
5656d5288
<             if (iout .eq. 0) then
5658,5662d5289
<             else if (iout .eq. 1) then
<             write(bou(nou(1),1),2003)ista,iend,jsta,jend
<             else if (iout .eq. 2) then
<             write(bou(nou(1),1),3003)ista,iend,jsta,jend
<             end if
5695d5321
<             if (iout .eq. 0) then
5697,5701d5322
<             else if (iout .eq. 1) then
<             write(bou(nou(1),1),*)'  Stopping in bc2018:'
<             else if (iout .eq. 2) then
<             write(bou(nou(1),1),*)'  Stopping in bc2028:'
<             end if
5708c5329
<             val1  = bcdata(1,1,1,1)
---
>             rho1  = bcdata(1,1,1,1)
5712d5332
<             if (iout .eq. 0) then
5716c5336
<             write(bou(nou(1),1),1008) real(val1)
---
>             write(bou(nou(1),1),1008) real(rho1)
5723,5745d5342
<             else if (iout .eq. 1) then
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),2004)ista,iend,jsta,jend
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),2008) real(val1)
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),2009) real(u1)
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),2010) real(v1)
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),2011) real(w1)
<             else if (iout .eq. 2) then
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),3004)ista,iend,jsta,jend
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),3008) real(val1)
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),3009) real(u1)
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),3010) real(v1)
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),3011) real(w1)
<             end if
5758d5354
<             if (iout .eq. 0) then
5760,5764d5355
<             else if (iout .eq. 1) then
<             write(bou(nou(1),1),2004)ista,iend,jsta,jend
<             else if (iout .eq. 2) then
<             write(bou(nou(1),1),3004)ista,iend,jsta,jend
<             end if
5797d5387
<             if (iout .eq. 0) then
5799,5803d5388
<             else if (iout .eq. 1) then
<             write(bou(nou(1),1),*)'  Stopping in bc2018:'
<             else if (iout .eq. 2) then
<             write(bou(nou(1),1),*)'  Stopping in bc2028:'
<             end if
5810c5395
<             val1  = bcdata(1,1,1,1)
---
>             rho1  = bcdata(1,1,1,1)
5814d5398
<             if (iout .eq. 0) then
5818c5402
<             write(bou(nou(1),1),1008) real(val1)
---
>             write(bou(nou(1),1),1008) real(rho1)
5825,5847d5408
<             else if (iout .eq. 1) then
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),2005)jsta,jend,ksta,kend
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),2008) real(val1)
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),2009) real(u1)
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),2010) real(v1)
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),2011) real(w1)
<             else if (iout .eq. 2) then
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),3005)jsta,jend,ksta,kend
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),3008) real(val1)
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),3009) real(u1)
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),3010) real(v1)
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),3011) real(w1)
<             end if
5860d5420
<             if (iout .eq. 0) then
5862,5866d5421
<             else if (iout .eq. 1) then
<             write(bou(nou(1),1),2005)jsta,jend,ksta,kend
<             else if (iout .eq. 2) then
<             write(bou(nou(1),1),3005)jsta,jend,ksta,kend
<             end if
5899d5453
<             if (iout .eq. 0) then
5901,5905d5454
<             else if (iout .eq. 1) then
<             write(bou(nou(1),1),*)'  Stopping in bc2018:'
<             else if (iout .eq. 2) then
<             write(bou(nou(1),1),*)'  Stopping in bc2028:'
<             end if
5912c5461
<             val1  = bcdata(1,1,1,1)
---
>             rho1  = bcdata(1,1,1,1)
5916d5464
<             if (iout .eq. 0) then
5920c5468
<             write(bou(nou(1),1),1008) real(val1)
---
>             write(bou(nou(1),1),1008) real(rho1)
5927,5949d5474
<             else if (iout .eq. 1) then
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),2006)jsta,jend,ksta,kend
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),2008) real(val1)
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),2009) real(u1)
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),2010) real(v1)
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),2011) real(w1)
<             else if (iout .eq. 2) then
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),3006)jsta,jend,ksta,kend
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),3008) real(val1)
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),3009) real(u1)
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),3010) real(v1)
<             nou(1) = min(nou(1)+1,ibufdim)
<             write(bou(nou(1),1),3011) real(w1)
<             end if
5962d5486
<             if (iout .eq. 0) then
5964,5968d5487
<             else if (iout .eq. 1) then
<             write(bou(nou(1),1),2006)jsta,jend,ksta,kend
<             else if (iout .eq. 2) then
<             write(bou(nou(1),1),3006)jsta,jend,ksta,kend
<             end if
5997,6028d5515
<  2001 format(' ','  j=   1  set T,rhou,rhov,rhow, extrap p type 2018',
<      .       '  i=',i3,',',i3,'  k=',i3,',',i3)
<  2002 format(' ','  j=jdim  set T,rhou,rhov,rhow, extrap p type 2018',
<      .       '  i=',i3,',',i3,'  k=',i3,',',i3)
<  2003 format(' ','  k=   1  set T,rhou,rhov,rhow, extrap p type 2018',
<      .       '  i=',i3,',',i3,'  j=',i3,',',i3)
<  2004 format(' ','  k=kdim  set T,rhou,rhov,rhow, extrap p type 2018',
<      .       '  i=',i3,',',i3,'  j=',i3,',',i3)
<  2005 format(' ','  i=   1  set T,rhou,rhov,rhow, extrap p type 2018',
<      .       '  j=',i3,',',i3,'  k=',i3,',',i3)
<  2006 format(' ','  i=idim  set T,rhou,rhov,rhow, extrap p type 2018',
<      .       '  j=',i3,',',i3,'  k=',i3,',',i3)
<  2008 format(11x,'T/Tinf         = ',f8.4)
<  2009 format(11x,'rhou/rhoinfainf= ',f8.4)
<  2010 format(11x,'rhov/rhoinfainf= ',f8.4)
<  2011 format(11x,'rhow/rhoinfainf= ',f8.4)
<  3001 format(' ','  j=   1 set f,rhou,rhov,rhow, ext rho,p type 2028',
<      .       '  i=',i3,',',i3,'  k=',i3,',',i3)
<  3002 format(' ','  j=jdim set f,rhou,rhov,rhow, ext rho,p type 2028',
<      .       '  i=',i3,',',i3,'  k=',i3,',',i3)
<  3003 format(' ','  k=   1 set f,rhou,rhov,rhow, ext rho,p type 2028',
<      .       '  i=',i3,',',i3,'  j=',i3,',',i3)
<  3004 format(' ','  k=kdim set f,rhou,rhov,rhow, ext rho,p type 2028',
<      .       '  i=',i3,',',i3,'  j=',i3,',',i3)
<  3005 format(' ','  i=   1 set f,rhou,rhov,rhow, ext rho,p type 2028',
<      .       '  j=',i3,',',i3,'  k=',i3,',',i3)
<  3006 format(' ','  i=idim set f,rhou,rhov,rhow, ext rho,p type 2028',
<      .       '  j=',i3,',',i3,'  k=',i3,',',i3)
<  3008 format(11x,'freq*lref/aref    = ',f8.4)
<  3009 format(11x,'rhoumax/rhoinfainf= ',f8.4)
<  3010 format(11x,'rhovmax/rhoinfainf= ',f8.4)
<  3011 format(11x,'rhowmax/rhoinfainf= ',f8.4)
6044c5531
<       dimension bcdata(mdim,ndim,2,12),mblk2nd(maxbl)
---
>       dimension bcdata(mdim,ndim,2,7),mblk2nd(maxbl)
6549c6036
<       dimension bcdata(mdim,ndim,2,12),mblk2nd(maxbl)
---
>       dimension bcdata(mdim,ndim,2,7),mblk2nd(maxbl)
Index: source/cfl3d/libs/chkrot.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/chkrot.F,v
retrieving revision 1.3
retrieving revision 1.2
diff -r1.3 -r1.2
7c7
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
34c34
<       dimension bcdata(mdim,ndim,2,12),period_miss(lbcprd)
---
>       dimension bcdata(mdim,ndim,2,7),period_miss(lbcprd)
Index: source/cfl3d/libs/chkroti_d.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/chkroti_d.F,v
retrieving revision 1.3
retrieving revision 1.2
diff -r1.3 -r1.2
7c7
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
32c32
<       dimension bcdata(mdim,ndim,2,12),period_miss(lbcprd)
---
>       dimension bcdata(mdim,ndim,2,7),period_miss(lbcprd)
Index: source/cfl3d/libs/chkrotj_d.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/chkrotj_d.F,v
retrieving revision 1.3
retrieving revision 1.2
diff -r1.3 -r1.2
7c7
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
32c32
<       dimension bcdata(mdim,ndim,2,12),period_miss(lbcprd)
---
>       dimension bcdata(mdim,ndim,2,7),period_miss(lbcprd)
Index: source/cfl3d/libs/chkrotk_d.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/chkrotk_d.F,v
retrieving revision 1.3
retrieving revision 1.2
diff -r1.3 -r1.2
7c7
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
32c32
<       dimension bcdata(mdim,ndim,2,12),period_miss(lbcprd)
---
>       dimension bcdata(mdim,ndim,2,7),period_miss(lbcprd)
Index: source/cfl3d/libs/colldat.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/colldat.F,v
retrieving revision 1.3
retrieving revision 1.2
diff -r1.3 -r1.2
3c3
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
14c14
<       dimension bcdata(mdim,ndim,2,12),bcdatac(mdimc,ndimc,2,12)
---
>       dimension bcdata(mdim,ndim,2,7),bcdatac(mdimc,ndimc,2,7)
16c16
<       do 10 l=1,12
---
>       do 10 l=1,7
Index: source/cfl3d/libs/deform.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/deform.F,v
retrieving revision 1.4
retrieving revision 1.3
diff -r1.4 -r1.3
11c11
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
174d173
<      .       abs(ibctyp).ne.2014 .and.
233d231
<      .       abs(ibctyp).ne.2014 .and.
294d291
<      .          abs(jbctyp).ne.2014 .and.
353d349
<      .          abs(jbctyp).ne.2014 .and.
412d407
<      .          abs(kbctyp).ne.2014 .and.
471d465
<      .          abs(kbctyp).ne.2014 .and.
Index: source/cfl3d/libs/force.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/force.F,v
retrieving revision 1.3
retrieving revision 1.2
diff -r1.3 -r1.2
8c8
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
163,164c163
<       if (ivisc(3).gt.0 .and. (abs(kbcinfo(nbl,ns,1,kk)).eq.2004 .or.
<      .    abs(kbcinfo(nbl,ns,1,kk)).eq.2014)) then
---
>       if (ivisc(3).gt.0 .and. abs(kbcinfo(nbl,ns,1,kk)).eq.2004) then
291,292c290
<       if (ivisc(2).gt.0 .and. (abs(jbcinfo(nbl,ns,1,jj)).eq.2004 .or.
<      .    abs(jbcinfo(nbl,ns,1,jj)).eq.2014)) then
---
>       if (ivisc(2).gt.0 .and. abs(jbcinfo(nbl,ns,1,jj)).eq.2004) then
419,420c417
<       if (ivisc(1).gt.0 .and. (abs(ibcinfo(nbl,ns,1,ii)).eq.2004 .or.
<      .    abs(ibcinfo(nbl,ns,1,ii)).eq.2014)) then
---
>       if (ivisc(1).gt.0 .and. abs(ibcinfo(nbl,ns,1,ii)).eq.2004) then
Index: source/cfl3d/libs/getdhdr.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/getdhdr.F,v
retrieving revision 1.4
retrieving revision 1.3
diff -r1.4 -r1.3
3c3
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
50c50
<       if (abs(ibctyp).eq.2004 .or. abs(ibctyp).eq.2014) then
---
>       if (abs(ibctyp).eq.2004) then
95,120d94
<          if (abs(ndata).gt.4) then
<             datahdr(5)  = '     turb1'
<          end if
<          if (abs(ndata).gt.5) then
<             datahdr(6)  = '     turb2'
<          end if
<       end if
< c
<       if (ibctyp.eq.2018) then
<          datahdr(1)  = '         T'
<          datahdr(2)  = '      rhou'
<          datahdr(3)  = '      rhov'
<          datahdr(4)  = '      rhow'
<          if (abs(ndata).gt.4) then
<             datahdr(5)  = '     turb1'
<          end if
<          if (abs(ndata).gt.5) then
<             datahdr(6)  = '     turb2'
<          end if
<       end if
< c
<       if (ibctyp.eq.2028) then
<          datahdr(1)  = '      freq'
<          datahdr(2)  = '   rhoumax'
<          datahdr(3)  = '   rhovmax'
<          datahdr(4)  = '   rhowmax'
Index: source/cfl3d/libs/global.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/global.F,v
retrieving revision 1.13
retrieving revision 1.11
diff -r1.13 -r1.11
29c29
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
75,76c75,76
<       dimension bcvali(maxbl,maxseg,12,2),bcvalj(maxbl,maxseg,12,2),
<      .          bcvalk(maxbl,maxseg,12,2),nbci0(maxbl),nbcidim(maxbl),
---
>       dimension bcvali(maxbl,maxseg,7,2),bcvalj(maxbl,maxseg,7,2),
>      .          bcvalk(maxbl,maxseg,7,2),nbci0(maxbl),nbcidim(maxbl),
150c150,151
<       common /alphait/ ialphit,cltarg,rlxalph,dalim,dalpha,icycupdt
---
>       common /alphait/ cltarg,resupdt,cltol,dalim,dcldal,alphalast,
>      .                 ialphit,nttlast,icycupdt
348,351d348
<       if (real(dt) .gt. 0.0 .and. cltarg.ne.99999.0) then
<          write(iunit11,'('' Cannot use cltarg with time-accurate'')')
<          call termn8(myid,ierrflg,ibufdim,nbuf,bou,nou)
<       end if
1211c1208
<       do 1206 mm=1,12
---
>       do 1206 mm=1,7
1226,1227c1223
<       if ((abs(ibctyp) .eq. 2004 .or. abs(ibctyp) .eq. 2014) .and.
<      .     iviscg(nbl,1) .eq. 0) then
---
>       if (abs(ibctyp) .eq. 2004 .and. iviscg(nbl,1) .eq. 0) then
1229,1234c1225
<           write(iunit11,'(''   bc2004/14 is being used on an i-face'')')
<           call termn8(myid,ierrflg,ibufdim,nbuf,bou,nou)
<       end if
<       if (abs(ibctyp) .eq. 2014 .and. ivmx .le. 3) then
<           write(iunit11,'('' stopping...2014 can only be used'')')
<           write(iunit11,'(''   for turb models ivisc>3'')')
---
>           write(iunit11,'(''    bc2004 is being used on an i-face'')')
1263c1254
<      .   abs(ibctyp).eq.1006 .or. abs(ibctyp).eq.2014) mfoseg = 1
---
>      .   abs(ibctyp).eq.1006) mfoseg = 1
1399c1390
<          do 1279 l=1,12
---
>          do 1279 l=1,7
1467c1458
<       do 1306 mm=1,12
---
>       do 1306 mm=1,7
1480,1481c1471
<       if ((abs(ibctyp) .eq. 2004  .or. abs(ibctyp) .eq. 2014) .and. 
<      .     iviscg(nbl,1) .eq. 0) then
---
>       if (abs(ibctyp) .eq. 2004 .and. iviscg(nbl,1) .eq. 0) then
1483,1488c1473
<           write(iunit11,'(''   bc2004/14 is being used on an i-face'')')
<           call termn8(myid,ierrflg,ibufdim,nbuf,bou,nou)
<       end if
<       if (abs(ibctyp) .eq. 2014 .and. ivmx .le. 3) then
<           write(iunit11,'('' stopping...2014 can only be used'')')
<           write(iunit11,'(''   for turb models ivisc>3'')')
---
>           write(iunit11,'(''    bc2004 is being used on an i-face'')')
1515c1500
<      .   abs(ibctyp).eq.1006 .or. abs(ibctyp).eq.2014) mfoseg = 1
---
>      .   abs(ibctyp).eq.1006) mfoseg = 1
1639c1624
<          do 1379 l=1,12
---
>          do 1379 l=1,7
1707c1692
<       do 1406 mm=1,12
---
>       do 1406 mm=1,7
1720,1721c1705
<       if ((abs(jbctyp) .eq. 2004  .or. abs(jbctyp) .eq. 2014) .and. 
<      .     iviscg(nbl,2) .eq. 0) then
---
>       if (abs(jbctyp) .eq. 2004 .and. iviscg(nbl,2) .eq. 0) then
1723,1728c1707
<           write(iunit11,'(''   bc2004/14 is being used on a j-face'')')
<           call termn8(myid,ierrflg,ibufdim,nbuf,bou,nou)
<       end if
<       if (abs(jbctyp) .eq. 2014 .and. ivmx .le. 3) then
<           write(iunit11,'('' stopping...2014 can only be used'')')
<           write(iunit11,'(''   for turb models ivisc>3'')')
---
>           write(iunit11,'(''    bc2004 is being used on a j-face'')')
1755c1734
<      .   abs(jbctyp).eq.1006 .or. abs(jbctyp).eq.2014) mfoseg = 1
---
>      .   abs(jbctyp).eq.1006) mfoseg = 1
1879c1858
<          do 1479 l=1,12
---
>          do 1479 l=1,7
1946c1925
<       do 1506 mm=1,12
---
>       do 1506 mm=1,7
1959,1960c1938
<       if ((abs(jbctyp) .eq. 2004 .or. abs(jbctyp) .eq. 2014) .and. 
<      .     iviscg(nbl,2) .eq. 0) then
---
>       if (abs(jbctyp) .eq. 2004 .and. iviscg(nbl,2) .eq. 0) then
1962,1967c1940
<           write(iunit11,'(''   bc2004/14 is being used on a j-face'')')
<           call termn8(myid,ierrflg,ibufdim,nbuf,bou,nou)
<       end if
<       if (abs(jbctyp) .eq. 2014 .and. ivmx .le. 3) then
<           write(iunit11,'('' stopping...2014 can only be used'')')
<           write(iunit11,'(''   for turb models ivisc>3'')')
---
>           write(iunit11,'(''    bc2004 is being used on a j-face'')')
1994c1967
<      .   abs(jbctyp).eq.1006 .or. abs(jbctyp).eq.2014) mfoseg = 1
---
>      .   abs(jbctyp).eq.1006) mfoseg = 1
2118c2091
<          do 1579 l=1,12
---
>          do 1579 l=1,7
2185c2158
<       do 1606 mm=1,12
---
>       do 1606 mm=1,7
2197,2198c2170
<       if ((abs(kbctyp) .eq. 2004 .or. abs(kbctyp) .eq. 2014) .and. 
<      .     iviscg(nbl,3) .eq. 0) then
---
>       if (abs(kbctyp) .eq. 2004 .and. iviscg(nbl,3) .eq. 0) then
2200,2205c2172
<           write(iunit11,'(''   bc2004/14 is being used on a k-face'')')
<           call termn8(myid,ierrflg,ibufdim,nbuf,bou,nou)
<       end if
<       if (abs(kbctyp) .eq. 2014 .and. ivmx .le. 3) then
<           write(iunit11,'('' stopping...2014 can only be used'')')
<           write(iunit11,'(''   for turb models ivisc>3'')')
---
>           write(iunit11,'(''    bc2004 is being used on a k-face'')')
2232c2199
<      .   abs(kbctyp).eq.1006 .or. abs(kbctyp).eq.2014) mfoseg = 1
---
>      .   abs(kbctyp).eq.1006) mfoseg = 1
2356c2323
<          do 1679 l=1,12
---
>          do 1679 l=1,7
2423c2390
<       do 1706 mm=1,12
---
>       do 1706 mm=1,7
2435,2436c2402
<       if ((abs(kbctyp) .eq. 2004 .or. abs(kbctyp) .eq. 2014) .and. 
<      .     iviscg(nbl,3) .eq. 0) then
---
>       if (abs(kbctyp) .eq. 2004 .and. iviscg(nbl,3) .eq. 0) then
2438,2443c2404
<           write(iunit11,'(''   bc2004/14 is being used on a k-face'')')
<           call termn8(myid,ierrflg,ibufdim,nbuf,bou,nou)
<       end if
<       if (abs(kbctyp) .eq. 2014 .and. ivmx .le. 3) then
<           write(iunit11,'('' stopping...2014 can only be used'')')
<           write(iunit11,'(''   for turb models ivisc>3'')')
---
>           write(iunit11,'(''    bc2004 is being used on a k-face'')')
2470c2431
<      .   abs(kbctyp).eq.1006 .or. abs(kbctyp).eq.2014) mfoseg = 1
---
>      .   abs(kbctyp).eq.1006) mfoseg = 1
2594c2555
<          do 1779 l=1,12
---
>          do 1779 l=1,7
2648,2649c2609
<      .          abs(ibcinfo(nbl,nseg,1,1)).eq.1006 .or.
<      .          abs(ibcinfo(nbl,nseg,1,1)).eq.2014) then
---
>      .          abs(ibcinfo(nbl,nseg,1,1)).eq.1006) then
2668,2669c2628
<      .          abs(ibcinfo(nbl,nseg,1,2)).eq.1006 .or.
<      .          abs(ibcinfo(nbl,nseg,1,2)).eq.2014) then
---
>      .          abs(ibcinfo(nbl,nseg,1,2)).eq.1006) then
2688,2689c2647
<      .          abs(jbcinfo(nbl,nseg,1,1)).eq.1006 .or.
<      .          abs(jbcinfo(nbl,nseg,1,1)).eq.2014) then
---
>      .          abs(jbcinfo(nbl,nseg,1,1)).eq.1006) then
2708,2709c2666
<      .          abs(jbcinfo(nbl,nseg,1,2)).eq.1006 .or.
<      .          abs(jbcinfo(nbl,nseg,1,2)).eq.2014) then
---
>      .          abs(jbcinfo(nbl,nseg,1,2)).eq.1006) then
2728,2729c2685
<      .          abs(kbcinfo(nbl,nseg,1,1)).eq.1006 .or.
<      .          abs(kbcinfo(nbl,nseg,1,1)).eq.2014) then
---
>      .          abs(kbcinfo(nbl,nseg,1,1)).eq.1006) then
2748,2749c2704
<      .          abs(kbcinfo(nbl,nseg,1,2)).eq.1006 .or.
<      .          abs(kbcinfo(nbl,nseg,1,2)).eq.2014) then
---
>      .          abs(kbcinfo(nbl,nseg,1,2)).eq.1006) then
Index: source/cfl3d/libs/global0.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/global0.F,v
retrieving revision 1.5
retrieving revision 1.4
diff -r1.5 -r1.4
8c8
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
182c182
<      .       abs(ibctyp).eq.1006 .or. abs(ibctyp).eq.2014) then
---
>      .       abs(ibctyp).eq.1006) then
202c202
<      .       abs(ibctyp).eq.1006 .or. abs(ibctyp).eq.2014) then
---
>      .       abs(ibctyp).eq.1006) then
222c222
<      .       abs(ibctyp).eq.1006 .or. abs(ibctyp).eq.2014) then
---
>      .       abs(ibctyp).eq.1006) then
242c242
<      .       abs(ibctyp).eq.1006 .or. abs(ibctyp).eq.2014) then
---
>      .       abs(ibctyp).eq.1006) then
262c262
<      .       abs(ibctyp).eq.1006 .or. abs(ibctyp).eq.2014) then
---
>      .       abs(ibctyp).eq.1006) then
282c282
<      .       abs(ibctyp).eq.1006 .or. abs(ibctyp).eq.2014) then
---
>      .       abs(ibctyp).eq.1006) then
Index: source/cfl3d/libs/initvist.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/initvist.F,v
retrieving revision 1.6
retrieving revision 1.5
diff -r1.6 -r1.5
3c3
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
64c64
<                 exponent=-471.*(ccabs(smin(j,k,i))*refac)+.47
---
>                 exponent=-471.*(smin(j,k,i)*refac)+.47
70c70
<                 exponent=-37.5*(ccabs(smin(j,k,i))*refac)-3.7
---
>                 exponent=-37.5*(smin(j,k,i)*refac)-3.7
76c76
<                 zk4=6.7*(ccabs(smin(j,k,i))*refac)
---
>                 zk4=6.7*(smin(j,k,i)*refac)
82c82
<                 exponent=-555.*(ccabs(smin(j,k,i))*refac)-6.
---
>                 exponent=-555.*(smin(j,k,i)*refac)-6.
88c88
<                 exponent=-280.*(ccabs(smin(j,k,i))*refac)-9.2
---
>                 exponent=-280.*(smin(j,k,i)*refac)-9.2
94c94
<                 exponent=13333.*(ccabs(smin(j,k,i))*refac)-9.8
---
>                 exponent=13333.*(smin(j,k,i)*refac)-9.8
124,125c124,125
<                 zk2=-const1*(ccabs(smin(j,k,i))*refac)**2 +
<      +               const2*ccabs(smin(j,k,i))*refac
---
>                 zk2=-const1*(smin(j,k,i)*refac)**2 +
>      +               const2*smin(j,k,i)*refac
129c129
<                 om1=-12444.*(ccabs(smin(j,k,i))*refac) + .54
---
>                 om1=-12444.*(smin(j,k,i)*refac) + .54
Index: source/cfl3d/libs/modread.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/modread.F,v
retrieving revision 1.4
retrieving revision 1.3
diff -r1.4 -r1.3
6c6
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
65c65
<       iflag = (lbc-1006)*(lbc-1005)*(lbc-2004)*(lbc-2014)
---
>       iflag = (lbc-1006)*(lbc-1005)*(lbc-2004)
111c111
<       iflag = (lbc-1006)*(lbc-1005)*(lbc-2004)*(lbc-2014)
---
>       iflag = (lbc-1006)*(lbc-1005)*(lbc-2004)
157c157
<       iflag = (lbc-1006)*(lbc-1005)*(lbc-2004)*(lbc-2014)
---
>       iflag = (lbc-1006)*(lbc-1005)*(lbc-2004)
Index: source/cfl3d/libs/pltmode.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/pltmode.F,v
retrieving revision 1.6
retrieving revision 1.4
diff -r1.6 -r1.4
8c8
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
16c16,17
<       dimension nblg(maxgr),nbci0(maxbl),nbcidim(maxbl),
---
>       dimension bcvali(maxbl,maxseg,7,2),bcvalj(maxbl,maxseg,7,2),
>      .          nblg(maxgr),nbci0(maxbl),nbcidim(maxbl),
95c96
<                      iflg = (lbc-1006)*(lbc-1005)*(lbc-2004)*(lbc-2014)
---
>                      iflg = (lbc-1006)*(lbc-1005)*(lbc-2004)
122c123
<                     iflg = (lbc-1006)*(lbc-1005)*(lbc-2004)*(lbc-2014)
---
>                     iflg = (lbc-1006)*(lbc-1005)*(lbc-2004)
149c150
<                      iflg = (lbc-1006)*(lbc-1005)*(lbc-2004)*(lbc-2014)
---
>                      iflg = (lbc-1006)*(lbc-1005)*(lbc-2004)
187c188
<                iflg = (lbc-1006)*(lbc-1005)*(lbc-2004)*(lbc-2014)
---
>                iflg = (lbc-1006)*(lbc-1005)*(lbc-2004)
216c217
<                iflg = (lbc-1006)*(lbc-1005)*(lbc-2004)*(lbc-2014)
---
>                iflg = (lbc-1006)*(lbc-1005)*(lbc-2004)
245c246
<                iflg = (lbc-1006)*(lbc-1005)*(lbc-2004)*(lbc-2014)
---
>                iflg = (lbc-1006)*(lbc-1005)*(lbc-2004)
Index: source/cfl3d/libs/pre_period.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/pre_period.F,v
retrieving revision 1.4
retrieving revision 1.3
diff -r1.4 -r1.3
9c9
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
23,24c23,24
<       dimension bcvali(maxbl,maxseg,12,2),bcvalj(maxbl,maxseg,12,2),
<      .          bcvalk(maxbl,maxseg,12,2)
---
>       dimension bcvali(maxbl,maxseg,7,2),bcvalj(maxbl,maxseg,7,2),
>      .          bcvalk(maxbl,maxseg,7,2)
Index: source/cfl3d/libs/readdat.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/readdat.F,v
retrieving revision 1.6
retrieving revision 1.4
diff -r1.6 -r1.4
4c4
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
23c23
<       dimension bcdata(mdim,ndim,2,12),bcdat(12),mblk2nd(maxbl)
---
>       dimension bcdata(mdim,ndim,2,7),bcdat(7),mblk2nd(maxbl)
30,31c30,31
<       allocate( bcdatar(mdim,ndim,2,12), stat=stats )
<       call umalloc(mdim*ndim*2*12,0,'bcdatar',memuse,stats)
---
>       allocate( bcdatar(mdim,ndim,2,7), stat=stats )
>       call umalloc(mdim*ndim*2*7,0,'bcdatar',memuse,stats)
36c36
<       do 5 l=1,12
---
>       do 5 l=1,7
52,53c52,53
<             write(11,'('' stopping in readdat...data file'',
<      .      '' has dimensions '',2i6)') mdum,ndum
---
>             write(11,'('' stopping in readdat...data file'' 
>      .      '' has dimensions '',2i6)')mdum,ndum
64c64
<          if (nvar.gt.12 .or. nvar.lt.1) then
---
>          if (nvar.gt.7 .or. nvar.lt.1) then
66c66
<      .      '' than 12 variables are allowed - there are '',i6)') nvar
---
>      .      '' than 7 variables are allowed - there are '',i6)') nvar
100c100
<          do 30 l=1,12
---
>          do 30 l=1,7
Index: source/cfl3d/libs/readkey.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/readkey.F,v
retrieving revision 1.15
retrieving revision 1.13
diff -r1.15 -r1.13
4c4
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
40c40,41
<       common /alphait/ ialphit,cltarg,rlxalph,dalim,dalpha,icycupdt
---
>       common /alphait/ cltarg,resupdt,cltol,dalim,dcldal,alphalast,
>      .                 ialphit,nttlast,icycupdt
55d55
<       common /gridtrans/ roll_angle
138c138,139
< c     angle-of-attack relaxation factor for specified Cl
---
> c     no. of orders of resid. reduction before alpha is
> c     next updated
140c141
<       rlxalph  = 1.
---
>       resupdt  = -40.
266c267
<       dalim     = 0.2
---
>       dalim     = 5.0
272c273,278
<       icycupdt  = 1
---
>       icycupdt  = 0
>       nkey      = nkey + 1
> c
> c     user input value for dcl/dalpha
> c
>       dcldal    = 6.2831853
371,374d376
< c     roll angle
<       roll_angle = 0.
<       nkey       = nkey + 1
< c
403,411d404
< 
< c        do any order-dependent things here before exiting
< 
< #ifdef CMPLX
<          xrotrate = cmplx(real(xrotrate),real(xrotrate_img))
<          yrotrate = cmplx(real(yrotrate),real(yrotrate_img))
<          zrotrate = cmplx(real(zrotrate),real(zrotrate_img))
< #endif
< 
539c532
<       else if (inpstr(lc1:lc2).eq.'rlxalph') then
---
>       else if (inpstr(lc1:lc2).eq.'resupdt') then
542c535
<          rlxalph = realval(1)
---
>          resupdt = -abs(realval(1))
638a632,636
>       else if (inpstr(lc1:lc2).eq.'dcldal') then
>          lc2 = lc2 +1
>          read(inpstr(lc2:lcl),*) realval(1)
>          dcldal = realval(1)
> c
676a675,677
> #ifdef CMPLX
>          xrotrate = cmplx(real(xrotrate),real(xrotrate_img))
> #endif
681a683,685
> #ifdef CMPLX
>          yrotrate = cmplx(real(yrotrate),real(yrotrate_img))
> #endif
686a691,693
> #ifdef CMPLX
>          zrotrate = cmplx(real(zrotrate),real(zrotrate_img))
> #endif
723,727d729
< c
<       else if (inpstr(lc1:lc2).eq.'roll_angle') then
<          lc2 = lc2 +1
<          read(inpstr(lc2:lcl),*) realval(1)
<          roll_angle = realval(1)
Index: source/cfl3d/libs/setseg.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/setseg.F,v
retrieving revision 1.3
retrieving revision 1.2
diff -r1.3 -r1.2
7c7
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
37d36
<      .          abs(ibcinfo(nbl,nseg,1,1)).eq.2014 .or.
54d52
<      .          abs(ibcinfo(nbl,nseg,1,2)).eq.2014 .or.
71d68
<      .          abs(jbcinfo(nbl,nseg,1,1)).eq.2014 .or.
88d84
<      .          abs(jbcinfo(nbl,nseg,1,2)).eq.2014 .or.
105d100
<      .          abs(kbcinfo(nbl,nseg,1,1)).eq.2014 .or.
122d116
<      .          abs(kbcinfo(nbl,nseg,1,2)).eq.2014 .or.
Index: source/cfl3d/libs/spalart.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/spalart.F,v
retrieving revision 1.7
retrieving revision 1.6
diff -r1.7 -r1.6
7c7
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
810c810
<               damp1(j,k,i) = ccmin(ccabs(smin(j,k,i)),cdes*delta)
---
>               damp1(j,k,i) = ccmin(smin(j,k,i),cdes*delta)
818c818
<               damp1(j,k,i) = ccabs(smin(j,k,i))
---
>               damp1(j,k,i) = smin(j,k,i)
826,829c826,828
<               if ((i.ge.ilamlo .and. i.lt.ilamhi .and.
<      .             j.ge.jlamlo .and. j.lt.jlamhi .and.
<      .             k.ge.klamlo .and. k.lt.klamhi) .or.
<      .             real(smin(j,k,i)) .lt. 0.) then
---
>               if (i.ge.ilamlo .and. i.lt.ilamhi .and.
>      .            j.ge.jlamlo .and. j.lt.jlamhi .and.
>      .            k.ge.klamlo .and. k.lt.klamhi) then
Index: source/cfl3d/libs/twoeqn.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/cfl3d/libs/twoeqn.F,v
retrieving revision 1.5
retrieving revision 1.4
diff -r1.5 -r1.4
10c10
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
680c680
<      +          ccabs(smin(j,k,i)))
---
>      +          smin(j,k,i))
1309,1312c1309,1311
<               if ((i.ge.ilamlo .and. i.lt.ilamhi .and.
<      .             j.ge.jlamlo .and. j.lt.jlamhi .and.
<      .             k.ge.klamlo .and. k.lt.klamhi) .or.
<      .             real(smin(j,k,i)) .lt. 0.) then
---
>               if (i.ge.ilamlo .and. i.lt.ilamhi .and.
>      .            j.ge.jlamlo .and. j.lt.jlamhi .and.
>      .            k.ge.klamlo .and. k.lt.klamhi) then
1339,1342c1338,1340
<               if ((i.ge.ilamlo .and. i.lt.ilamhi .and.
<      .             j.ge.jlamlo .and. j.lt.jlamhi .and.
<      .             k.ge.klamlo .and. k.lt.klamhi) .or.
<      .             real(smin(j,k,i)) .lt. 0.) then
---
>               if (i.ge.ilamlo .and. i.lt.ilamhi .and.
>      .            j.ge.jlamlo .and. j.lt.jlamhi .and.
>      .            k.ge.klamlo .and. k.lt.klamhi) then
1434,1437c1432,1434
<               if ((i.ge.ilamlo .and. i.lt.ilamhi .and.
<      .             j.ge.jlamlo .and. j.lt.jlamhi .and.
<      .             k.ge.klamlo .and. k.lt.klamhi) .or.
<      .             real(smin(j,k,i)) .lt. 0.) then
---
>               if (i.ge.ilamlo .and. i.lt.ilamhi .and.
>      .            j.ge.jlamlo .and. j.lt.jlamhi .and.
>      .            k.ge.klamlo .and. k.lt.klamhi) then
1442c1439
<               rek=q(j,k,i,1)*sqrt(turre(j,k,i,2))*re*ccabs(smin(j,k,i))/
---
>               rek=q(j,k,i,1)*sqrt(turre(j,k,i,2))*re*smin(j,k,i)/
1468,1471c1465,1467
<               if ((i.ge.ilamlo .and. i.lt.ilamhi .and.
<      .             j.ge.jlamlo .and. j.lt.jlamhi .and.
<      .             k.ge.klamlo .and. k.lt.klamhi) .or.
<      .             real(smin(j,k,i)) .lt. 0.) then
---
>               if (i.ge.ilamlo .and. i.lt.ilamhi .and.
>      .            j.ge.jlamlo .and. j.lt.jlamhi .and.
>      .            k.ge.klamlo .and. k.lt.klamhi) then
1476c1472
<               rek=q(j,k,i,1)*sqrt(turre(j,k,i,2))*re*ccabs(smin(j,k,i))/
---
>               rek=q(j,k,i,1)*sqrt(turre(j,k,i,2))*re*smin(j,k,i)/
1578,1581c1574,1576
<               if ((i.ge.ilamlo .and. i.lt.ilamhi .and.
<      .             j.ge.jlamlo .and. j.lt.jlamhi .and.
<      .             k.ge.klamlo .and. k.lt.klamhi) .or.
<      .             real(smin(j,k,i)) .lt. 0.) then
---
>               if (i.ge.ilamlo .and. i.lt.ilamhi .and.
>      .            j.ge.jlamlo .and. j.lt.jlamhi .and.
>      .            k.ge.klamlo .and. k.lt.klamhi) then
1586c1581
<               rek=q(j,k,i,1)*sqrt(turre(j,k,i,2))*re*ccabs(smin(j,k,i))/
---
>               rek=q(j,k,i,1)*sqrt(turre(j,k,i,2))*re*smin(j,k,i)/
1680,1683c1675,1677
<               if ((i.ge.ilamlo .and. i.lt.ilamhi .and.
<      .             j.ge.jlamlo .and. j.lt.jlamhi .and.
<      .             k.ge.klamlo .and. k.lt.klamhi) .or.
<      .             real(smin(j,k,i)) .lt. 0.) then
---
>               if (i.ge.ilamlo .and. i.lt.ilamhi .and.
>      .            j.ge.jlamlo .and. j.lt.jlamhi .and.
>      .            k.ge.klamlo .and. k.lt.klamhi) then
2728c2722
<      +       ccabs(smin(j,k,i)))
---
>      +       smin(j,k,i))
2789c2783
<             rek=q(j,k,i,1)*sqrt(turre(j,k,i,2))*re*ccabs(smin(j,k,i))/
---
>             rek=q(j,k,i,1)*sqrt(turre(j,k,i,2))*re*smin(j,k,i)/
3024,3027c3018,3020
<               if ((i.ge.ilamlo .and. i.lt.ilamhi .and.
<      .             j.ge.jlamlo .and. j.lt.jlamhi .and.
<      .             k.ge.klamlo .and. k.lt.klamhi) .or.
<      .             real(smin(j,k,i)) .lt. 0.) then
---
>               if (i.ge.ilamlo .and. i.lt.ilamhi .and.
>      .            j.ge.jlamlo .and. j.lt.jlamhi .and.
>      .            k.ge.klamlo .and. k.lt.klamhi) then
3033c3026
<                 dudy=uu/ccabs(smin(j,k,i))
---
>                 dudy=uu/smin(j,k,i)
3036c3029
<                 omegatemp=utau/(sqrt(cmuc1)*vk*ccabs(smin(j,k,i))*re)
---
>                 omegatemp=utau/(sqrt(cmuc1)*vk*smin(j,k,i)*re)
3076,3079c3069,3071
<               if ((i.ge.ilamlo .and. i.lt.ilamhi .and.
<      .             j.ge.jlamlo .and. j.lt.jlamhi .and.
<      .             k.ge.klamlo .and. k.lt.klamhi) .or.
<      .             real(smin(j,k,i)) .lt. 0.) then
---
>               if (i.ge.ilamlo .and. i.lt.ilamhi .and.
>      .            j.ge.jlamlo .and. j.lt.jlamhi .and.
>      .            k.ge.klamlo .and. k.lt.klamhi) then
3085c3077
<                 dudy=uu/ccabs(smin(j,k,i))
---
>                 dudy=uu/smin(j,k,i)
3088c3080
<                 omegatemp=utau/(sqrt(cmuc1)*vk*ccabs(smin(j,k,i))*re)
---
>                 omegatemp=utau/(sqrt(cmuc1)*vk*smin(j,k,i)*re)
3128,3131c3120,3122
<               if ((i.ge.ilamlo .and. i.lt.ilamhi .and.
<      .             j.ge.jlamlo .and. j.lt.jlamhi .and.
<      .             k.ge.klamlo .and. k.lt.klamhi) .or.
<      .             real(smin(j,k,i)) .lt. 0.) then
---
>               if (i.ge.ilamlo .and. i.lt.ilamhi .and.
>      .            j.ge.jlamlo .and. j.lt.jlamhi .and.
>      .            k.ge.klamlo .and. k.lt.klamhi) then
3137c3128
<                 dudy=uu/ccabs(smin(j,k,i))
---
>                 dudy=uu/smin(j,k,i)
3140c3131
<                 omegatemp=utau/(sqrt(cmuc1)*vk*ccabs(smin(j,k,i))*re)
---
>                 omegatemp=utau/(sqrt(cmuc1)*vk*smin(j,k,i)*re)
3190,3191c3181,3182
<       utau=sqrt((fnu(jset,1,1)+vk0(jset,1,1,1))*qset/
<      +     (ccabs(smin(jset,1,1))*q(jset,1,1,1)*re))
---
>       utau=sqrt((fnu(jset,1,1)+vk0(jset,1,1,1))*qset/(smin(jset,1,1)*
>      +     q(jset,1,1,1)*re))
3193c3184
<         ypl=re*q(jset,1,1,1)*utau*ccabs(smin(jset,k,1))/fnu(jset,1,1)
---
>         ypl=re*q(jset,1,1,1)*utau*smin(jset,k,1)/fnu(jset,1,1)
3198,3199c3189
<         eplus=turre(jset,k,1,1)*re/(utau*utau*qset/
<      +        ccabs(smin(jset,1,1)))
---
>         eplus=turre(jset,k,1,1)*re/(utau*utau*qset/smin(jset,1,1))
3216c3206
<      +  real(ccabs(smin(jset,k,1)))
---
>      +  real(smin(jset,k,1))
3224c3214
<      +  real(ccabs(smin(jset,k,1)))
---
>      +  real(smin(jset,k,1))
3232c3222
<      +  real(ccabs(smin(jset,k,1)))
---
>      +  real(smin(jset,k,1))
3240c3230
<      +  real(ccabs(smin(jset,k,1)))
---
>      +  real(smin(jset,k,1))
3248c3238
<      +  real(ccabs(smin(jset,k,1)))
---
>      +  real(smin(jset,k,1))
3256c3246
<      +  real(ccabs(smin(jset,k,1)))
---
>      +  real(smin(jset,k,1))
3264c3254
<      +  real(ccabs(smin(jset,k,1)))
---
>      +  real(smin(jset,k,1))
Index: source/maggie/maggie.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/maggie/maggie.F,v
retrieving revision 1.6
retrieving revision 1.5
diff -r1.6 -r1.5
3c3
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
3349d3348
<       close(iunit)
3382d3380
<       close(iunit)
3415d3412
<       close(iunit)
3459d3455
<       close(iunit)
Index: source/splitter/getdhdr.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/splitter/getdhdr.F,v
retrieving revision 1.3
retrieving revision 1.2
diff -r1.3 -r1.2
3c3
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
20c20
<          if (iver.ge.5) then
---
>          if (iver.eq.5) then
30,45c30
<       if (iver.ge.5) then
<       if (ibctyp.eq.2009) then
<          datahdr(1)  = '   pt/pinf'
<          datahdr(2)  = '   tt/tinf'
<          datahdr(3)  = '     alpha'
<          datahdr(4)  = '      beta'
<          if (abs(ndata).gt.4) then
<             datahdr(5)  = '     turb1'
<          end if
<          if (abs(ndata).gt.5) then
<             datahdr(6)  = '     turb2'
<          end if
<       end if
<       end if
< c
<       if (abs(ibctyp).eq.2004 .or. abs(ibctyp).eq.2014) then
---
>       if (abs(ibctyp).eq.2004) then
68,83d52
<       if (iver.ge.5) then
<       if (ibctyp.eq.2007) then
<          datahdr(1)  = '       rho'
<          datahdr(2)  = '         u'
<          datahdr(3)  = '         v'
<          datahdr(4)  = '         w'
<          datahdr(5)  = '         p'
<          if (abs(ndata).gt.5) then
<             datahdr(6)  = '     turb1'
<          end if
<          if (abs(ndata).gt.6) then
<             datahdr(7)  = '     turb2'
<          end if
<       end if
<       end if
< c
88d56
<          datahdr(4) = '      lref'
91,103c59
<       if (iver.ge.5) then
<       if (ibctyp.eq.2008) then
<          datahdr(1)  = '       rho'
<          datahdr(2)  = '         u'
<          datahdr(3)  = '         v'
<          datahdr(4)  = '         w'
<          if (abs(ndata).gt.4) then
<             datahdr(5)  = '     turb1'
<          end if
<          if (abs(ndata).gt.5) then
<             datahdr(6)  = '     turb2'
<          end if
<       end if
---
>       if (iver.eq.5) then
105,114c61,72
<       if (ibctyp.eq.2018) then
<          datahdr(1)  = '         T'
<          datahdr(2)  = '      rhou'
<          datahdr(3)  = '      rhov'
<          datahdr(4)  = '      rhow'
<          if (abs(ndata).gt.4) then
<             datahdr(5)  = '     turb1'
<          end if
<          if (abs(ndata).gt.5) then
<             datahdr(6)  = '     turb2'
---
>          if (ibctyp.eq.2007) then
>             datahdr(1)  = '       rho'
>             datahdr(2)  = '         u'
>             datahdr(3)  = '         v'
>             datahdr(4)  = '         w'
>             datahdr(5)  = '         p'
>             if (abs(ndata).gt.5) then
>                datahdr(6)  = '     turb1'
>             end if
>             if (abs(ndata).gt.6) then
>                datahdr(7)  = '     turb2'
>             end if
116d73
<       end if
118,127c75,85
<       if (ibctyp.eq.2028) then
<          datahdr(1)  = '      freq'
<          datahdr(2)  = '   rhoumax'
<          datahdr(3)  = '   rhovmax'
<          datahdr(4)  = '   rhowmax'
<          if (abs(ndata).gt.4) then
<             datahdr(5)  = '     turb1'
<          end if
<          if (abs(ndata).gt.5) then
<             datahdr(6)  = '     turb2'
---
>          if (ibctyp.eq.2008) then
>             datahdr(1)  = '       rho'
>             datahdr(2)  = '         u'
>             datahdr(3)  = '         v'
>             datahdr(4)  = '         w'
>             if (abs(ndata).gt.4) then
>                datahdr(5)  = '     turb1'
>             end if
>             if (abs(ndata).gt.5) then
>                datahdr(6)  = '     turb2'
>             end if
129d86
<       end if
Index: source/splitter/tlns3d_to_cfl3d.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/splitter/tlns3d_to_cfl3d.F,v
retrieving revision 1.6
retrieving revision 1.5
diff -r1.6 -r1.5
17c17
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
364,365c364
<             if (ibctyp.eq.1004 .or. abs(ibctyp).eq.2004 .or.
<      .          abs(ibctyp).eq.2014) then
---
>             if (ibctyp.eq.1004 .or. abs(ibctyp).eq.2004) then
416,417c415
<             if (ibctyp.eq.1004 .or. abs(ibctyp).eq.2004 .or.
<      .          abs(ibctyp).eq.2014) then
---
>             if (ibctyp.eq.1004 .or. abs(ibctyp).eq.2004) then
468,469c466
<             if (ibctyp.eq.1004 .or. abs(ibctyp).eq.2004 .or.
<      .          abs(ibctyp).eq.2014) then
---
>             if (ibctyp.eq.1004 .or. abs(ibctyp).eq.2004) then
520,521c517
<             if (ibctyp.eq.1004 .or. abs(ibctyp).eq.2004 .or.
<      .          abs(ibctyp).eq.2014) then
---
>             if (ibctyp.eq.1004 .or. abs(ibctyp).eq.2004) then
572,573c568
<             if (ibctyp.eq.1004 .or. abs(ibctyp).eq.2004 .or.
<      .          abs(ibctyp).eq.2014) then
---
>             if (ibctyp.eq.1004 .or. abs(ibctyp).eq.2004) then
624,625c619
<             if (ibctyp.eq.1004 .or. abs(ibctyp).eq.2004 .or.
<      .          abs(ibctyp).eq.2014) then
---
>             if (ibctyp.eq.1004 .or. abs(ibctyp).eq.2004) then
Index: source/tools/cfl3d_to_pegbc.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/tools/cfl3d_to_pegbc.F,v
retrieving revision 1.4
retrieving revision 1.3
diff -r1.4 -r1.3
3c3
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
620,621c620
<                if (ibctype.eq.1005 .or. abs(ibctype).eq.2004 .or.
<      .             ibctype.eq.2014) then
---
>                if (ibctype.eq.1005 .or. ibctype.eq.2004) then
642,643c641
<                if (ibctype.eq.1005 .or. abs(ibctype).eq.2004 .or.
<      .             ibctype.eq.2014) then
---
>                if (ibctype.eq.1005 .or. ibctype.eq.2004) then
664,665c662
<                if (jbctype.eq.1005 .or. abs(jbctype).eq.2004 .or.
<      .             jbctype.eq.2014) then
---
>                if (jbctype.eq.1005 .or. jbctype.eq.2004) then
686,687c683
<                if (jbctype.eq.1005 .or. abs(jbctype).eq.2004 .or.
<      .             jbctype.eq.2014) then
---
>                if (jbctype.eq.1005 .or. jbctype.eq.2004) then
708,709c704
<                if (kbctype.eq.1005 .or. abs(kbctype).eq.2004 .or.
<      .             kbctype.eq.2014) then
---
>                if (kbctype.eq.1005 .or. kbctype.eq.2004) then
730,731c725
<                if (kbctype.eq.1005 .or. abs(kbctype).eq.2004 .or.
<      .             kbctype.eq.2014) then
---
>                if (kbctype.eq.1005 .or. kbctype.eq.2004) then
Index: source/tools/plot3dg_to_cgns.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/tools/plot3dg_to_cgns.F,v
retrieving revision 1.8
retrieving revision 1.4
diff -r1.8 -r1.4
3c3
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
141,142c141
< c     real*8 pidz,pidnew
< c
---
>       real*8 pid,pidr,pidb,pidz,pidg,pidnew
315d313
<         nbl = nblock
572,573c570
<           else if((ib .eq. 2004 .or. ib .eq. 2014) .and. 
<      +            data(1) .eq. 0 .and.
---
>           else if(ib .eq. 2004 .and. data(1) .eq. 0 .and.
579,585d575
<           else if((ib .eq. 2004 .or. ib .eq. 2014) .and. 
<      +            data(1) .ne. 0 .and.
<      +            data(2) .eq. 0 .and. abs(iv1(n)) .gt. 0) then
<             call cg_boco_write_f(iccg,ibase,iz(n),boconame,
<      +        BCWallViscousIsothermal,PointRange,2,ipnts,ibc,ier)
<             call cg_boco_write_f(iccgr,ibase,iz(n),boconame,
<      +        BCWallViscousIsothermal,PointRange,2,ipnts,ibc,ier)
605,606c595
<             if((abs(ib) .eq. 2004 .or. abs(ib) .eq. 2014) .and. 
<      +          iv1(n) .lt. 0) then
---
>             if(abs(ib) .eq. 2004 .and. iv1(n) .lt. 0) then
714,715c703
<           else if((ib .eq. 2004 .or. ib .eq. 2014) .and. 
<      +            data(1) .eq. 0 .and.
---
>           else if(ib .eq. 2004 .and. data(1) .eq. 0 .and.
721,727d708
<           else if((ib .eq. 2004 .or. ib .eq. 2014) .and. 
<      +            data(1) .ne. 0 .and.
<      +            data(2) .eq. 0 .and. abs(iv1(n)) .gt. 0) then
<             call cg_boco_write_f(iccg,ibase,iz(n),boconame,
<      +        BCWallViscousIsothermal,PointRange,2,ipnts,ibc,ier)
<             call cg_boco_write_f(iccgr,ibase,iz(n),boconame,
<      +        BCWallViscousIsothermal,PointRange,2,ipnts,ibc,ier)
747,748c728
<             if((abs(ib) .eq. 2004 .or. abs(ib) .eq. 2014) .and. 
<      +          iv1(n) .lt. 0) then
---
>             if(abs(ib) .eq. 2004 .and. iv1(n) .lt. 0) then
856,857c836
<           else if((ib .eq. 2004 .or. ib .eq. 2014) .and. 
<      +            data(1) .eq. 0 .and.
---
>           else if(ib .eq. 2004 .and. data(1) .eq. 0 .and.
863,869d841
<           else if((ib .eq. 2004 .or. ib .eq. 2014) .and. 
<      +            data(1) .ne. 0 .and.
<      +            data(2) .eq. 0 .and. abs(iv2(n)) .gt. 0) then
<             call cg_boco_write_f(iccg,ibase,iz(n),boconame,
<      +        BCWallViscousIsothermal,PointRange,2,ipnts,ibc,ier)
<             call cg_boco_write_f(iccgr,ibase,iz(n),boconame,
<      +        BCWallViscousIsothermal,PointRange,2,ipnts,ibc,ier)
889,890c861
<             if((abs(ib) .eq. 2004 .or. abs(ib) .eq. 2014) .and. 
<      +          iv2(n) .lt. 0) then
---
>             if(abs(ib) .eq. 2004 .and. iv2(n) .lt. 0) then
998,999c969
<           else if((ib .eq. 2004 .or. ib .eq. 2014) .and. 
<      +            data(1) .eq. 0 .and.
---
>           else if(ib .eq. 2004 .and. data(1) .eq. 0 .and.
1005,1011d974
<           else if((ib .eq. 2004 .or. ib .eq. 2014) .and. 
<      +            data(1) .ne. 0 .and.
<      +            data(2) .eq. 0 .and. abs(iv2(n)) .gt. 0) then
<             call cg_boco_write_f(iccg,ibase,iz(n),boconame,
<      +        BCWallViscousIsothermal,PointRange,2,ipnts,ibc,ier)
<             call cg_boco_write_f(iccgr,ibase,iz(n),boconame,
<      +        BCWallViscousIsothermal,PointRange,2,ipnts,ibc,ier)
1031,1032c994
<             if((abs(ib) .eq. 2004 .or. abs(ib) .eq. 2014) .and. 
<      +          iv2(n) .lt. 0) then
---
>             if(abs(ib) .eq. 2004 .and. iv2(n) .lt. 0) then
1140,1141c1102
<           else if((ib .eq. 2004 .or. ib .eq. 2014) .and. 
<      +            data(1) .eq. 0 .and.
---
>           else if(ib .eq. 2004 .and. data(1) .eq. 0 .and.
1147,1153d1107
<           else if((ib .eq. 2004 .or. ib .eq. 2014) .and. 
<      +            data(1) .ne. 0 .and.
<      +            data(2) .eq. 0 .and. abs(iv3(n)) .gt. 0) then
<             call cg_boco_write_f(iccg,ibase,iz(n),boconame,
<      +        BCWallViscousIsothermal,PointRange,2,ipnts,ibc,ier)
<             call cg_boco_write_f(iccgr,ibase,iz(n),boconame,
<      +        BCWallViscousIsothermal,PointRange,2,ipnts,ibc,ier)
1173,1174c1127
<             if((abs(ib) .eq. 2004 .or. abs(ib) .eq. 2014) .and. 
<      +          iv3(n) .lt. 0) then
---
>             if(abs(ib) .eq. 2004 .and. iv3(n) .lt. 0) then
1282,1283c1235
<           else if((ib .eq. 2004 .or. ib .eq. 2014) .and. 
<      +            data(1) .eq. 0 .and.
---
>           else if(ib .eq. 2004 .and. data(1) .eq. 0 .and.
1289,1295d1240
<           else if((ib .eq. 2004 .or. ib .eq. 2014) .and. 
<      +            data(1) .ne. 0 .and.
<      +            data(2) .eq. 0 .and. abs(iv3(n)) .gt. 0) then
<             call cg_boco_write_f(iccg,ibase,iz(n),boconame,
<      +        BCWallViscousIsothermal,PointRange,2,ipnts,ibc,ier)
<             call cg_boco_write_f(iccgr,ibase,iz(n),boconame,
<      +        BCWallViscousIsothermal,PointRange,2,ipnts,ibc,ier)
1315,1316c1260
<             if((abs(ib) .eq. 2004 .or. abs(ib) .eq. 2014) .and. 
<      +          iv3(n) .lt. 0) then
---
>             if(abs(ib) .eq. 2004 .and. iv3(n) .lt. 0) then
1532,1539c1476
<         newname='Base/' // zonename(n) // '/GridCoordinates'
< c  old way:
< c       call cg_zone_id_f(iccgr,ibase,n,pidz,ier)
< c       if (ier .ne. 0) call cg_error_exit_f
< c       call ADFLINK(pidz,'GridCoordinates',filename,newname,
< c    +    pidnew,ier)
< c  new way:
<         call cg_goto_f(iccgr,ibase,ier,'Zone_t',n,'end')
---
>         call cg_zone_id_f(iccgr,ibase,n,pidz,ier)
1541,1543c1478,1480
<         call cg_link_write_f('GridCoordinates',filename,newname,ier)
<         if (ier .ne. 0) call cg_error_exit_f
< c   *********
---
>         newname='Base/' // zonename(n) // '/GridCoordinates'
>         call ADFLINK(pidz,'GridCoordinates',filename,newname,
>      +    pidnew,ier)
Index: source/tools/v6_restart_mod.F
===================================================================
RCS file: /ump/fldmd/home/biedron/CVS_REPOSITORIES/cfl3dv6/source/tools/v6_restart_mod.F,v
retrieving revision 1.6
retrieving revision 1.5
diff -r1.6 -r1.5
3c3
< c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
---
> c     $Id: cvs_diff_May_30_2003,v 1.1 2003/05/30 18:33:50 rumsey Exp $
33d32
<       parameter (nblmax=1000)
35,36d33
<       dimension jdd(nblmax),kdd(nblmax),idd(nblmax)
<       dimension jddc(nblmax),kddc(nblmax),iddc(nblmax)
109,113d105
<       if (nblk .gt. nblmax) then
<         write(6,'('' need to increase nblmax in parameter stmt'',
<      +   '' and recompile'')')
<         stop
<       end if
129,131d120
<         jdd(nrty)=jdim1
<         kdd(nrty)=kdim1
<         idd(nrty)=idim1
256,297d244
<       if (ihalf .eq. 1) then
<         if (ic .eq. 1) then
<           if (idd(nrty) .eq. 1) then
<             iddc(nrty)=idd(nrty)
<           else
<             iddc(nrty)=idd(nrty)*2
<           end if
<         else
<           iddc(nrty)=idd(nrty)
<         end if
<         if (jc .eq. 1) then
<           jddc(nrty)=jdd(nrty)*2
<         else
<           jddc(nrty)=jdd(nrty)
<         end if
<         if (kc .eq. 1) then
<           kddc(nrty)=kdd(nrty)*2
<         else
<           kddc(nrty)=kdd(nrty)
<         end if
<       else if (ihalf .eq. 0) then
<         if (ic .eq. 1) then
<           imaxctemp=idd(nrty)/2
<           iddc(nrty)=max(1,imaxctemp)
<         else
<           iddc(nrty)=idd(nrty)
<         end if
<         if (jc .eq. 1) then
<           jddc(nrty)=jdd(nrty)/2
<         else
<           jddc(nrty)=jdd(nrty)
<         end if
<         if (kc .eq. 1) then
<           kddc(nrty)=kdd(nrty)/2
<         else
<           kddc(nrty)=kdd(nrty)
<         end if
<       else
<         iddc(nrty)=idd(nrty)
<         jddc(nrty)=jdd(nrty)
<         kddc(nrty)=kdd(nrty)
<       end if
343,344c290
<      . ihalf,nblk,imaxc,jmaxc,kmaxc,ic,jc,kc,itime2read,titlw,
<      . idd,jdd,kdd,iddc,jddc,kddc)
---
>      . ihalf,nblk,imaxc,jmaxc,kmaxc,ic,jc,kc,itime2read,titlw)
354,355c300
<      . ihalf,nblk,idimc,jdimc,kdimc,ic,jc,kc,itime2read,titlw,
<      . idd,jdd,kdd,iddc,jddc,kddc)
---
>      . ihalf,nblk,idimc,jdimc,kdimc,ic,jc,kc,itime2read,titlw)
360,361d304
<       dimension jdd(nblk),kdd(nblk),idd(nblk)
<       dimension jddc(nblk),kddc(nblk),iddc(nblk)
379a323,324
>       allocatable :: q(:,:,:,:)
>       allocatable :: qc(:,:,:,:)
388a334
>       allocatable :: work(:,:,:,:)
426a373,376
>       allocate( q(jdim,kdim,idim,5), stat=stats )
>       call umalloc_r(jdim*kdim*idim*5,0,'q',memuse,stats)
>       allocate( qc(jdimc,kdimc,idimc,5), stat=stats )
>       call umalloc_r(jdimc*kdimc*idimc*5,0,'qc',memuse,stats)
444a395,396
>       allocate( work(jdimc,kdimc,idimc,5), stat=stats )
>       call umalloc_r(jdimc*kdimc*idimc*5,0,'work',memuse,stats)
578,579c530,562
<       call getq(idd(nrty),jdd(nrty),kdd(nrty),iddc(nrty),jddc(nrty),
<      +  kddc(nrty),iunfi,iunfo,ihalf,ic,jc,kc,it,5)
---
>       if (iunfi .eq. 1) then
>       read(2) ((((q(j,k,i,l),j=1,jdim1),k=1,kdim1),i=1,idim1),l=1,5)
>       else
>       read(2,*) ((((q(j,k,i,l),j=1,jdim1),k=1,kdim1),i=1,idim1),l=1,5)
>       end if
>       if (ihalf .eq. 1) then
> c       Make finer:
>         call makefin(q,qc,idim,jdim,kdim,idimc,jdimc,kdimc,
>      +    idim1,jdim1,kdim1,idim1c,jdim1c,kdim1c,ic,jc,kc,5,
>      +    work)
>       else if (ihalf .eq. 0) then
> c       Coarsen
>         call makecoar(q,qc,idim,jdim,kdim,idimc,jdimc,kdimc,
>      +    idim1,jdim1,kdim1,ic,jc,kc,it,5)
>       else
> c       Don't coarsen
>         do l=1,5
>         do j=1,jdim1
>         do k=1,kdim1
>         do i=1,idim1
>           qc(j,k,i,l)=q(j,k,i,l)
>         enddo
>         enddo
>         enddo
>         enddo
>       end if
>       if (iunfo .eq. 1) then
>       write(3) ((((qc(j,k,i,l),j=1,jdim1c),k=1,kdim1c),i=1,idim1c),
>      +  l=1,5)
>       else
>       write(3,*) ((((qc(j,k,i,l),j=1,jdim1c),k=1,kdim1c),i=1,idim1c),
>      +  l=1,5)
>       end if
669,670c652,681
<       call getq(idd(nrty),jdd(nrty),kdd(nrty),iddc(nrty),jddc(nrty),
<      +  kddc(nrty),iunfi,iunfo,ihalf,ic,jc,kc,it,1)
---
>          if (iunfi .eq. 1) then
>          read(2) (((q(j,k,i,1),j=1,jdim1),k=1,kdim1),i=1,idim1)
>          else
>          read(2,*) (((q(j,k,i,1),j=1,jdim1),k=1,kdim1),i=1,idim1)
>          end if
>       if (ihalf .eq. 1) then
> c       Make finer:
>         call makefin(q,qc,idim,jdim,kdim,idimc,jdimc,kdimc,
>      +    idim1,jdim1,kdim1,idim1c,jdim1c,kdim1c,ic,jc,kc,1,
>      +    work)
>       else if (ihalf .eq. 0) then
> c       Coarsen
>         call makecoar(q,qc,idim,jdim,kdim,idimc,jdimc,kdimc,
>      +    idim1,jdim1,kdim1,ic,jc,kc,it,1)
>       else
> c       Don't coarsen
>         do j=1,jdim1
>         do k=1,kdim1
>         do i=1,idim1
>           qc(j,k,i,1)=q(j,k,i,1)
>         enddo
>         enddo
>         enddo
>       end if
>          if (iunfo .eq. 1) then
>          write(3) (((qc(j,k,i,1),j=1,jdim1c),k=1,kdim1c),i=1,idim1c)
>          else
>          write(3,*) (((qc(j,k,i,1),j=1,jdim1c),k=1,kdim1c),
>      .     i=1,idim1c)
>          end if
735,736c746,780
<       call getq(idd(nrty),jdd(nrty),kdd(nrty),iddc(nrty),jddc(nrty),
<      +  kddc(nrty),iunfi,iunfo,ihalf,ic,jc,kc,it,2)
---
>          if (iunfi .eq. 1) then
>          read(2) ((((q(j,k,i,m),j=1,jdim1),k=1,kdim1),i=1,idim1),
>      .           m=1,2)
>          else
>          read(2,*) ((((q(j,k,i,m),j=1,jdim1),k=1,kdim1),i=1,idim1),
>      .           m=1,2)
>          end if
>       if (ihalf .eq. 1) then
> c       Make finer:
>         call makefin(q,qc,idim,jdim,kdim,idimc,jdimc,kdimc,
>      +    idim1,jdim1,kdim1,idim1c,jdim1c,kdim1c,ic,jc,kc,2,
>      +    work)
>       else if (ihalf .eq. 0) then
> c       Coarsen
>         call makecoar(q,qc,idim,jdim,kdim,idimc,jdimc,kdimc,
>      +    idim1,jdim1,kdim1,ic,jc,kc,it,2)
>       else
> c       Don't coarsen
>         do l=1,2
>         do j=1,jdim1
>         do k=1,kdim1
>         do i=1,idim1
>           qc(j,k,i,l)=q(j,k,i,l)
>         enddo
>         enddo
>         enddo
>         enddo
>       end if
>          if (iunfo .eq. 1) then
>          write(3) ((((qc(j,k,i,m),j=1,jdim1c),k=1,kdim1c),
>      +           i=1,idim1c),m=1,2)
>          else
>          write(3,*) ((((qc(j,k,i,m),j=1,jdim1c),k=1,kdim1c),
>      +           i=1,idim1c),m=1,2)
>          end if
799,801c843,871
<       call getq(idd(nrty),jdd(nrty),kdd(nrty),iddc(nrty),jddc(nrty),
<      +  kddc(nrty),iunfi,iunfo,ihalf,ic,jc,kc,it,1)
< c   xjb,xkb,blnum data
---
>          if (iunfi .eq. 1) then
>          read(2) (((q(j,k,i,1),j=1,jdim1),k=1,kdim1),i=1,idim1)
>          else
>          read(2,*) (((q(j,k,i,1),j=1,jdim1),k=1,kdim1),i=1,idim1)
>          end if
>       if (ihalf .eq. 1) then
> c       Make finer:
>         call makefin(q,qc,idim,jdim,kdim,idimc,jdimc,kdimc,
>      +    idim1,jdim1,kdim1,idim1c,jdim1c,kdim1c,ic,jc,kc,1,
>      +    work)
>       else if (ihalf .eq. 0) then
> c       Coarsen
>         call makecoar(q,qc,idim,jdim,kdim,idimc,jdimc,kdimc,
>      +    idim1,jdim1,kdim1,ic,jc,kc,it,1)
>       else
> c       Don't coarsen
>         do j=1,jdim1
>         do k=1,kdim1
>         do i=1,idim1
>           qc(j,k,i,1)=q(j,k,i,1)
>         enddo
>         enddo
>         enddo
>       end if
>          if (iunfo .eq. 1) then
>          write(3) (((qc(j,k,i,1),j=1,jdim1c),k=1,kdim1c),i=1,idim1c)
>          else
>          write(3,*) (((qc(j,k,i,1),j=1,jdim1c),k=1,kdim1c),i=1,idim1c)
>          end if
803,808c873,912
<       call getq(idd(nrty),jdd(nrty),kdd(nrty),iddc(nrty),jddc(nrty),
<      +  kddc(nrty),iunfi,iunfo,ihalf,ic,jc,kc,it,1)
<       call getq(idd(nrty),jdd(nrty),kdd(nrty),iddc(nrty),jddc(nrty),
<      +  kddc(nrty),iunfi,iunfo,ihalf,ic,jc,kc,it,1)
<       call getq(idd(nrty),jdd(nrty),kdd(nrty),iddc(nrty),jddc(nrty),
<      +  kddc(nrty),iunfi,iunfo,ihalf,ic,jc,kc,it,1)
---
> c   xjb,xkb,blnum data
>          if (iunfi .eq. 1) then
>            read(2) (((q(j,k,i,1),j=1,jdim1),k=1,kdim1),i=1,idim1)
>            read(2) (((q(j,k,i,2),j=1,jdim1),k=1,kdim1),i=1,idim1)
>            read(2) (((q(j,k,i,3),j=1,jdim1),k=1,kdim1),i=1,idim1)
>          else
>            read(2,*) (((q(j,k,i,1),j=1,jdim1),k=1,kdim1),i=1,idim1)
>            read(2,*) (((q(j,k,i,2),j=1,jdim1),k=1,kdim1),i=1,idim1)
>            read(2,*) (((q(j,k,i,3),j=1,jdim1),k=1,kdim1),i=1,idim1)
>          end if
>       if (ihalf .eq. 1) then
> c       Make finer:
>         call makefin(q,qc,idim,jdim,kdim,idimc,jdimc,kdimc,
>      +    idim1,jdim1,kdim1,idim1c,jdim1c,kdim1c,ic,jc,kc,3,
>      +    work)
>       else if (ihalf .eq. 0) then
> c       Coarsen
>         call makecoar(q,qc,idim,jdim,kdim,idimc,jdimc,kdimc,
>      +    idim1,jdim1,kdim1,ic,jc,kc,it,3)
>       else
> c       Don't coarsen
>         do l=1,3
>         do j=1,jdim1
>         do k=1,kdim1
>         do i=1,idim1
>           qc(j,k,i,l)=q(j,k,i,l)
>         enddo
>         enddo
>         enddo
>         enddo
>       end if
>            if (iunfo .eq. 1) then
>            write(3) (((qc(j,k,i,1),j=1,jdim1c),k=1,kdim1c),i=1,idim1c)
>            write(3) (((qc(j,k,i,2),j=1,jdim1c),k=1,kdim1c),i=1,idim1c)
>            write(3) (((qc(j,k,i,3),j=1,jdim1c),k=1,kdim1c),i=1,idim1c)
>            else
>            write(3,*) (((qc(j,k,i,1),j=1,jdim1c),k=1,kdim1c),i=1,idim1c)
>            write(3,*) (((qc(j,k,i,2),j=1,jdim1c),k=1,kdim1c),i=1,idim1c)
>            write(3,*) (((qc(j,k,i,3),j=1,jdim1c),k=1,kdim1c),i=1,idim1c)
>            end if
815,816c919,948
<       call getq(idd(nrty),jdd(nrty),kdd(nrty),iddc(nrty),jddc(nrty),
<      +  kddc(nrty),iunfi,iunfo,ihalf,ic,jc,kc,it,1)
---
>          if (iunfi .eq. 1) then
>            read(2) (((q(j,k,i,1),j=1,jdim1),k=1,kdim1),i=1,idim1)
>          else
>            read(2,*) (((q(j,k,i,1),j=1,jdim1),k=1,kdim1),i=1,idim1)
>          end if
>       if (ihalf .eq. 1) then
> c       Make finer:
>         call makefin(q,qc,idim,jdim,kdim,idimc,jdimc,kdimc,
>      +    idim1,jdim1,kdim1,idim1c,jdim1c,kdim1c,ic,jc,kc,1,
>      +    work)
>       else if (ihalf .eq. 0) then
> c       Coarsen
>         call makecoar(q,qc,idim,jdim,kdim,idimc,jdimc,kdimc,
>      +    idim1,jdim1,kdim1,ic,jc,kc,it,1)
>       else
> c       Don't coarsen
>         do j=1,jdim1
>         do k=1,kdim1
>         do i=1,idim1
>           qc(j,k,i,1)=q(j,k,i,1)
>         enddo
>         enddo
>         enddo
>       end if
>            if (iunfo .eq. 1) then
>            write(3) (((qc(j,k,i,1),j=1,jdim1c),k=1,kdim1c),i=1,idim1c)
>            else
>            write(3,*) (((qc(j,k,i,1),j=1,jdim1c),k=1,kdim1c),
>      .       i=1,idim1c)
>            end if
888,889c1020,1054
<       call getq(idd(nrty),jdd(nrty),kdd(nrty),iddc(nrty),jddc(nrty),
<      +  kddc(nrty),iunfi,iunfo,ihalf,ic,jc,kc,it,5)
---
>            if (iunfi .eq. 1) then
>            read(2) ((((q(j,k,i,l),j=1,jdim1),k=1,kdim1),i=1,idim1),
>      .             l=1,5)
>            else
>            read(2,*) ((((q(j,k,i,l),j=1,jdim1),k=1,kdim1),i=1,idim1),
>      .             l=1,5)
>            end if
>       if (ihalf .eq. 1) then
> c       Make finer:
>         call makefin(q,qc,idim,jdim,kdim,idimc,jdimc,kdimc,
>      +    idim1,jdim1,kdim1,idim1c,jdim1c,kdim1c,ic,jc,kc,5,
>      +    work)
>       else if (ihalf .eq. 0) then
> c       Coarsen
>         call makecoar(q,qc,idim,jdim,kdim,idimc,jdimc,kdimc,
>      +    idim1,jdim1,kdim1,ic,jc,kc,it,5)
>       else
> c       Don't coarsen
>         do l=1,5
>         do j=1,jdim1
>         do k=1,kdim1
>         do i=1,idim1
>           qc(j,k,i,l)=q(j,k,i,l)
>         enddo
>         enddo
>         enddo
>         enddo
>       end if
>            if (iunfo .eq. 1) then
>            write(3) ((((qc(j,k,i,l),j=1,jdim1c),k=1,kdim1c),
>      +      i=1,idim1c),l=1,5)
>            else
>            write(3,*) ((((qc(j,k,i,l),j=1,jdim1c),k=1,kdim1c),
>      +      i=1,idim1c),l=1,5)
>            end if
902,903c1067,1101
<       call getq(idd(nrty),jdd(nrty),kdd(nrty),iddc(nrty),jddc(nrty),
<      +  kddc(nrty),iunfi,iunfo,ihalf,ic,jc,kc,it,2)
---
>            if (iunfi .eq. 1) then
>            read(2) ((((q(j,k,i,l),j=1,jdim1),k=1,kdim1),i=1,idim1),
>      .             l=1,2)
>            else
>            read(2,*) ((((q(j,k,i,l),j=1,jdim1),k=1,kdim1),i=1,idim1),
>      .             l=1,2)
>            end if
>       if (ihalf .eq. 1) then
> c       Make finer:
>         call makefin(q,qc,idim,jdim,kdim,idimc,jdimc,kdimc,
>      +    idim1,jdim1,kdim1,idim1c,jdim1c,kdim1c,ic,jc,kc,2,
>      +    work)
>       else if (ihalf .eq. 0) then
> c       Coarsen
>         call makecoar(q,qc,idim,jdim,kdim,idimc,jdimc,kdimc,
>      +    idim1,jdim1,kdim1,ic,jc,kc,it,2)
>       else
> c       Don't coarsen
>         do l=1,2
>         do j=1,jdim1
>         do k=1,kdim1
>         do i=1,idim1
>           qc(j,k,i,l)=q(j,k,i,l)
>         enddo
>         enddo
>         enddo
>         enddo
>       end if
>            if (iunfo .eq. 1) then
>            write(3) ((((qc(j,k,i,l),j=1,jdim1c),k=1,kdim1c),
>      +      i=1,idim1c),l=1,2)
>            else
>            write(3,*) ((((qc(j,k,i,l),j=1,jdim1c),k=1,kdim1c),
>      +      i=1,idim1c),l=1,2)
>            end if
1035a1234,1235
>          deallocate(q)
>          deallocate(qc)
1059a1260
>          deallocate(work)
1369,1435d1569
<       subroutine getq(idim1,jdim1,kdim1,idim1c,jdim1c,
<      +  kdim1c,iunfi,iunfo,ihalf,ic,jc,kc,it,inumb)
< c
<       integer stats
< c
<       allocatable :: q(:,:,:,:)
<       allocatable :: qc(:,:,:,:)
<       allocatable :: work(:,:,:,:)
< c
<       idim=idim1+1
<       jdim=jdim1+1
<       kdim=kdim1+1
<       idimc=idim1c+1
<       jdimc=jdim1c+1
<       kdimc=kdim1c+1
<       allocate( q(jdim,kdim,idim,inumb), stat=stats )
<       call umalloc_r(jdimkdimidim*inumb,0,'q',memuse,stats)
<       allocate( qc(jdimc,kdimc,idimc,inumb), stat=stats )
<       call umalloc_r(jdimc*kdimc*idimc*inumb,0,'qc',memuse,stats)
<       allocate( work(jdimc,kdimc,idimc,inumb), stat=stats )
<       call umalloc_r(jdimc*kdimc*idimc*inumb,0,'work',memuse,stats)
< c
<       if (iunfi .eq. 1) then
<       read(2) ((((q(j,k,i,l),j=1,jdim1),k=1,kdim1),i=1,idim1),l=1,inumb)
<       else
<       read(2,*) ((((q(j,k,i,l),j=1,jdim1),k=1,kdim1),i=1,idim1),
<      +  l=1,inumb)
<       end if
<       if (ihalf .eq. 1) then
< c       Make finer:
<         call makefin(q,qc,idim,jdim,kdim,idimc,jdimc,kdimc,
<      +    idim1,jdim1,kdim1,idim1c,jdim1c,kdim1c,ic,jc,kc,inumb,
<      +    work)
<       else if (ihalf .eq. 0) then
< c       Coarsen
<         call makecoar(q,qc,idim,jdim,kdim,idimc,jdimc,kdimc,
<      +    idim1,jdim1,kdim1,ic,jc,kc,it,inumb)
<       else
< c       Don't coarsen
<         do l=1,inumb
<         do j=1,jdim1
<         do k=1,kdim1
<         do i=1,idim1
<           qc(j,k,i,l)=q(j,k,i,l)
<         enddo
<         enddo
<         enddo
<         enddo
<       end if
<       if (iunfo .eq. 1) then
<       write(3) ((((qc(j,k,i,l),j=1,jdim1c),k=1,kdim1c),i=1,idim1c),
<      +  l=1,inumb)
<       else
<       write(3,*) ((((qc(j,k,i,l),j=1,jdim1c),k=1,kdim1c),i=1,idim1c),
<      +  l=1,inumb)
<       end if
< c
< c     free memory
< c
<       ifree = 1
<       if (ifree.gt.0) then
<          deallocate(q)
<          deallocate(qc)
<          deallocate(work)
<       end if
<       return
<       end
